{"version":3,"sources":["serviceWorker.js","theme/colorPallete.js","theme/index.js","theme/shadows.js","theme/typography.js","actions/types.js","actions/categoryAction.js","components/Logo.js","components/controls/Button.js","components/controls/PhoneInput.js","components/controls/SearchBar.js","components/controls/TextEditor.js","components/controls/FileUploadDropzone.js","components/controls/Controls.js","components/controls/Select.js","components/controls/Input.js","components/NavListItems.js","securityUtils/setJWTToken.js","actions/securityActions.js","components/HeaderMenu.js","components/categoryNavList.js","components/NavToolBar.js","components/Header.js","components/SideBarListNav.js","components/SideBar.js","components/LayoutStyles.js","components/DashboardLayout.js","components/MainLayout.js","components/account/AccountProfilePgTitle.js","components/controls/loadButtonStyles.js","components/forms/LoginRegisterFormStyles.js","components/forms/useForm.js","actions/imageUploadActions.js","components/controls/ImgUploadBtn.js","actions/userAction.js","components/account/AccountProfileDetails.js","pages/Account.js","components/users/UserListResults.js","components/users/UserListToolbar.js","reducers/alertReducer.js","reducers/categoryReducer.js","reducers/commentReducer.js","reducers/errorReducer.js","reducers/likeReducer.js","reducers/postReducer.js","reducers/roleReducer.js","reducers/securityReducer.js","reducers/userReducer.js","reducers/index.js","store.js","components/SnacKBarAlert.js","pages/UserList.js","components/dashboard/CounterCard.js","components/dashboard/TotalCategories.js","components/dashboard/LatestUsers.js","actions/postActions.js","components/dashboard/LatestPosts.js","components/dashboard/TotalPost.js","components/dashboard/TotalUsers.js","components/dashboard/TotalLikes.js","actions/likeAction.js","pages/Dashboard.js","components/forms/LoginForm.js","components/ColoredBkgLayout.js","pages/Login.js","pages/NotFound.js","components/posts/PostListToolbar.js","components/posts/PostCard.js","pages/PostList.js","components/forms/RegisterForm.js","pages/Register.js","components/category/CategorySearch.js","components/cards/CardStyles.js","components/cards/CardItem.js","components/cards/CardFooter.js","components/cards/SimpleCard.js","components/gridLayouts/MainGridLayout.js","pages/Category.js","actions/roleAction.js","components/users/AddUserForm.js","pages/AddUser.js","components/posts/AddPostForm.js","pages/AddPost.js","components/home/HomeSearchSection.js","components/home/HomeItemsSection.js","pages/Home.js","components/posts/UpdatePostForm.js","pages/UpdatePost.js","components/users/UpdateUserForm.js","pages/UpdateUser.js","pages/MyPosts.js","components/article/ChatBoxStyles.js","components/article/AuthorInfo.js","components/article/CommentForm.js","actions/commentAction.js","components/article/CommentSection.js","components/article/ContentSection.js","components/article/TopSection.js","components/InfoAvatar.js","components/cards/CardWithAvatar.js","components/article/RelatedPost.js","pages/Article.js","components/category/AddCategoryForm.js","pages/AddCategory.js","components/category/CategoryListResults.js","components/category/CategoryListToolbar.js","pages/CategoryList.js","components/category/UpdateCategoryForm.js","pages/UpdateCategory.js","routes.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","myColor","darkBlue","main","light","dark","brightBlue","mediumBlue","gray","shade100","shade200","shade300","shade400","shade700","shade900","white","shade50","theme","createMuiTheme","palette","background","default","paper","colors","common","primary","secondary","tertiary","customGray","customWhite","shadows","typography","h1","fontWeight","fontSize","letterSpacing","h2","h3","h4","h5","h6","overline","GET_ERRORS","GET_ALERT","GET_ALL_POSTS","GET_USER_POSTS","GET_FILTERED_POSTS","GET_RELATED_POSTS","GET_POST","DELETE_POST","SET_CURRENT_USER","GET_USER","GET_USERS","DELETE_USER","GET_ROLES","GET_CATEGORIES","GET_CATEGORY","DELETE_CATEGORY","GET_COMMENTS","GET_LIKES","createCategory","newCategory","navigate","setLoading","setSuccess","dispatch","a","axios","post","type","payload","response","data","console","log","message","getCategories","get","res","getCategory","id","Logo","props","alt","src","useStyles","makeStyles","url","Button","text","size","color","variant","width","marginY","padding","paddingY","onClick","other","classes","sx","my","p","py","root","label","CreateButton","href","marginX","LoginButton","SignUpButton","phoneTextField","outlined","border","borderRadius","button","container","margin","CustomInput","React","forwardRef","inputRef","value","onChange","others","ref","inputElement","inputProps","name","inputStyle","buttonStyle","containerStyle","countryCodeEditable","country","inputValue","e","formattedValue","input","event","target","convertToPhoneInfoParam","PhoneInput","error","TextField","fullWidth","InputLabelProps","shrink","InputProps","inputComponent","helperText","SearchBar","placeholder","searchText","setSearchText","newValue","onRequestSearch","onCancelSearch","style","maxWidth","textArea","height","toolbar","editorFocus","boxShadow","borderColor","borderWidth","modules","script","direction","header","list","align","CustomTextEditor","onEditorFocus","onEditorBlur","className","delta","source","convertToTextEditorParam","onFocus","onBlur","FileUploadDropzone","fileObjects","onAdd","onDelete","useState","open","severity","alert","setAlert","position","dropzoneText","acceptedFiles","maxFileSize","previewGridProps","item","getFileRemovedMessage","getFileAddedMessage","onAlert","showPreviewsInDropzone","showFileNames","showAlerts","Alert","onClose","top","display","setTimeout","convertToImageDataParam","UploadField","Controls","Buttons","Select","options","FormControl","InputLabel","map","MenuItem","FormHelperText","Input","TextEditor","isFocus","setIsFocus","ImageDropzone","imageData","imgData","setFileObjects","setData","dropzone","backgroundSize","backgroundRepeat","backgroundPosition","backgroundColor","backgroundImage","required","newFileObjs","deleteFileObj","itemsList","mainNav","icon","HomeIcon","title","accountTopNav","AccountCircle","isIconButton","subNav","UserIcon","action","LogOutIcon","userNav","user","admin","PencilIcon","superAdmin","BarChartIcon","UsersIcon","setJWTToken","token","defaults","headers","Authorization","registerUser","newUser","logout","localStorage","removeItem","clearErrors","connect","menuItem","useNavigate","anchorEl","setAnchorEl","handleOpenMenu","currentTarget","handleCloseMenu","handleClick","listItem","aria-controls","aria-haspopup","ExpandLess","ExpandMore","keepMounted","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","subMenu","categoryNavList","CollectionsBookmarkOutlinedIcon","state","categories","category","children","isLoggedIn","useEffect","length","Toolbar","to","Box","flexGrow","Hidden","mdDown","List","mx","HeaderNavBar","onMobileNavOpen","rest","AppBar","elevation","mdUp","IconButton","actionStyle","justifyContent","textTransform","marginRight","minWidth","paddingLeft","spacing","paddingRight","paddingTop","paddingBottom","active","useLocation","setOpen","showSubNav","isActive","pathname","ListItem","itemObj","ListItemIcon","ListItemText","Collapse","in","timeout","unmountOnExit","component","disablePadding","SideBar","onMobileClose","openMobile","role","displayNavItem","arry","content","flexDirection","alignItems","Avatar","RouterLink","firstName","avatarImg","cursor","mb","Typography","fullName","roleName","Divider","lgUp","Drawer","anchor","PaperProps","lgDown","defaultProps","security","experimentalStyled","Object","keys","includes","overflow","wrapper","screenSize","cssStyles","flex","breakpoints","down","up","DashboardLayoutRoot","MainLayoutRoot","DashboardLayoutWrapper","MainLayoutWrapper","LayoutContainer","LayoutContent","isMobileNavOpen","setMobileNavOpen","userIsAuthenticated","validToken","Header","AccountProfilePageTitle","loadButtonStyles","buttonSuccess","status","green","buttonProgress","left","customStyles","shape","alignCenter","logo","marginBottom","form","marginTop","submit","useForm","initialValues","values","setValues","formErrors","setFormErrors","handleInputChange","resetForm","Form","autoComplete","noValidate","uploadImage","file","dir","process","publicId","timestamp","Date","now","uploadPreset","paramsStr","signature","sha1","FormData","append","instance","create","secure_url","iconButton","fabProgress","zIndex","imageURL","userId","loading","getImageURL","files","imageDir","responseURL","htmlFor","accept","buttonStyles","Fab","aria-label","CircularProgress","getUsers","getUser","updateUser","updateRequest","patch","genderItems","lastName","username","gender","phoneNumber","email","errors","success","ProfilePic","Badge","badgeContent","overlap","onSubmit","preventDefault","numberStr","replace","px","Card","pt","Container","placeContent","CardHeader","CardContent","Grid","disabled","xs","md","autoFocus","Account","Helmet","minHeight","justify","deleteUser","confirm","delete","users","rowsPerPage","setRowsPerPage","page","setPage","Table","TableHead","TableRow","TableCell","TableBody","slice","toLowerCase","hover","mr","moment","registered_At","format","marginLeft","TablePagination","count","onPageChange","newPage","onRowsPerPageChange","rowsPerPageOptions","UserListToolbar","otherProps","mt","initialState","totalCount","comments","comment","likes","like","posts","relatedPosts","roles","booleanActionPayload","combineReducers","newStore","filter","middleware","thunk","reduxDevtoolsSanitizers","actionSanitizer","stateSanitizer","ReactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","navigator","userAgent","createStore","rootReducer","compose","applyMiddleware","store","SnackBarAlert","alertOpen","setAlertOpen","handleClose","reason","Snackbar","autoHideDuration","UserListResults","CountCard","totalNumber","gutterBottom","CounterCard","orange","sortDirection","Tooltip","enterDelay","TableSortLabel","createdAt","endIcon","createPost","postData","getUserPosts","getAllFilteredPosts","getPost","cardStyle","subtitle","i","divider","ListItemAvatar","coverImage","updatedAt","indigo","getLikes","red","Dashboard","lg","sm","xl","TotalPost","password","login","loginRequest","setItem","decoded","jwt_decode","alignContent","Link","overflowY","BackgroundWrapper","Login","NotFound","textAlign","PostListToolbar","showAddButton","details","cover","description","alignment","LinkIconBtn","deletePost","CardMedia","image","categoryName","dateFormat","CardActions","postItems","confirmPassword","searchBar","CategorySearch","searchIcon","closeIcon","cardStyles","simpleCard","cardWithAvatar","cardActionGrid","avatarGrid","postTime","CardItem","imageHeight","titleTextVariant","contentTextVariant","rootStyles","textDecoration","CardFooter","gridStyle","SimpleCard","MainGridLayout","postItem","getCategoryByName","useParams","postList","setPostList","mountedRef","useRef","populatePosts","current","getAllRoles","AddUser","textEditorParentGridStyles","gridTemplateColumns","handleSubmit","pb","multiline","rows","AddPost","mainContainer","mainItem","HomeSearchSection","HomeItemsSection","useSelector","author","UpdatePost","adminRole","UpdateUser","chatBoxStyles","chat","borderTopRightRadius","borderTopLeftRadius","borderBottomLeftRadius","borderBottomRightRadius","AuthorInfo","authorName","authorProfilePic","isTitle","isComment","publishedDate","flexWrap","chatStyles","errorTxt","errorStyle","createComment","postId","commentData","jwtToken","TextareaAutosize","maxRows","CommentSection","userName","userAvatar","created_At","headerMainGrid","headerContainer","titleText","card","lineHeight","grey","maxHeight","likePost","likeData","setIsLiked","deleteLike","isLiked","displayComment","setDisplayComment","undefined","handleLikePost","authorAvatar","dangerouslySetInnerHTML","__html","PageTopSection","InfoAvatar","CardWithAvatar","RelatedPost","getRelatedPosts","setComments","populateComments","AddCategory","deleteCategory","CategoryListToolbar","UpdateCategory","routes","path","element","Home","decodedJwtToken","currentTime","exp","App","routing","useRoutes","ThemeProvider","CssBaseline","ReactDOM","render","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0aac0c4c.chunk.js","sourcesContent":["/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const myColor = {\r\n  darkBlue: {\r\n    main: '#011526', // color for (AppBar, footer,...)\r\n    light: '#0F2859',\r\n    dark: '#051026'\r\n  },\r\n  brightBlue: {\r\n    main: '#1C8CF6', // color for Buttons in (AppBar, signup pg, login pg)\r\n    light: '#359AF2', // color for Buttons in (forms, ...)\r\n    dark: '#0583F2'\r\n  },\r\n  mediumBlue: {\r\n    main: '#143C8C',\r\n    light: '#9CB0D9', // color for (comment btn, ...)\r\n    dark: '#035AA6'\r\n  },\r\n  gray: {\r\n    main: '#A2A1A1',\r\n    shade100: '#EEEEF1',\r\n    shade200: '#ECECEC',\r\n    shade300: '#E4E4E4',\r\n    shade400: '#C9CCD4',\r\n    shade700: '#737373',\r\n    shade900: '#262626'\r\n  },\r\n  white: {\r\n    main: '#FFFFFF',\r\n    shade50: '#F4F4F4',\r\n    shade100: '#F2F2F2'\r\n  }\r\n};\r\n\r\nexport default myColor;\r\n","import { createMuiTheme, colors } from '@material-ui/core';\nimport shadows from './shadows';\nimport typography from './typography';\nimport myColor from './colorPallete';\n\nconst {\n  darkBlue, brightBlue, mediumBlue, gray, white\n} = myColor;\n\nconst theme = createMuiTheme({\n  // palette: {\n  //   background: {\n  //     default: '#F4F6F8',\n  //     paper: colors.common.white\n  //   },\n  //   primary: {\n  //     contrastText: '#ffffff',\n  //     main: '#5664d2'\n  //   },\n  //   text: {\n  //     primary: '#172b4d',\n  //     secondary: '#6b778c'\n  //   }\n  // },\n  // theme settings\n\n  palette: {\n    // type: \"light\",\n\n    background: {\n      default: '#F4F6F8',\n      paper: colors.common.white\n    },\n\n    primary: {\n      main: darkBlue.main, // color for (AppBar, footer,...)\n      light: darkBlue.light,\n      dark: darkBlue.dark\n      // contrastText: \"\"\n    },\n    secondary: {\n      main: brightBlue.main, // color for Buttons in (AppBar, signup pg, login pg)\n      light: brightBlue.light, // color for Buttons in (forms, ...)\n      dark: brightBlue.dark\n    },\n    tertiary: {\n      main: mediumBlue.main,\n      light: mediumBlue.light, // color for (comment btn, ...)\n      dark: mediumBlue.dark\n    },\n    customGray: {\n      main: gray.main,\n      shade100: gray.shade100,\n      shade200: gray.shade200,\n      shade300: gray.shade300,\n      shade400: gray.shade400,\n      shade700: gray.shade700,\n      shade900: gray.shade900\n    },\n    customWhite: {\n      main: white.main,\n      shade50: white.shade50,\n      shade100: white.shade100\n    }\n    // error: \"\",\n    // warning: \"\",\n    // info: \"\",\n    // success: \"\"\n  },\n\n  // typography: {\n  //   h1: {},\n  //   h2: {},\n  //   h3: {},\n  //   h4: {},\n  //   h5: {},\n  //   h6: {},\n  //   body1: {},\n  //   body2: {},\n  //   subtitle1: {},\n  //   subtitle2: {},\n  // },\n  shadows,\n  typography\n});\n\nexport default theme;\n","export default [\n  'none',\n  '0 0 0 1px rgba(63,63,68,0.05), 0 1px 2px 0 rgba(63,63,68,0.15)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 2px 2px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 8px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 5px 8px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 12px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 12px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 16px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 16px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 8px 18px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 9px 18px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 10px 20px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 11px 20px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 12px 22px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 13px 22px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 14px 24px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 16px 28px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 18px 30px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 20px 32px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 22px 34px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 24px 36px -8px rgba(0,0,0,0.25)'\n];\n","export default {\n  h1: {\n    fontWeight: 500,\n    fontSize: 35,\n    letterSpacing: '-0.24px'\n  },\n  h2: {\n    fontWeight: 500,\n    fontSize: 29,\n    letterSpacing: '-0.24px'\n  },\n  h3: {\n    fontWeight: 500,\n    fontSize: 24,\n    letterSpacing: '-0.06px'\n  },\n  h4: {\n    fontWeight: 500,\n    fontSize: 20,\n    letterSpacing: '-0.06px'\n  },\n  h5: {\n    fontWeight: 500,\n    fontSize: 16,\n    letterSpacing: '-0.05px'\n  },\n  h6: {\n    fontWeight: 500,\n    fontSize: 14,\n    letterSpacing: '-0.05px'\n  },\n  overline: {\n    fontWeight: 500\n  }\n};\n","export const GET_ERRORS = 'GET_ERRORS';\r\nexport const GET_ALERT = 'GET_ALERT';\r\nexport const UPLOAD_IMAGE = 'UPLOAD_IMAGE';\r\n\r\n// Types for POST ACTIONS\r\nexport const GET_ALL_POSTS = 'GET_ALL_POSTS';\r\nexport const GET_USER_POSTS = 'GET_USER_POSTS';\r\nexport const GET_FILTERED_POSTS = 'GET_FILTERED_POSTS';\r\nexport const GET_RELATED_POSTS = 'GET_RELATED_POSTS';\r\nexport const GET_POST = 'GET_POST';\r\nexport const DELETE_POST = 'DELETE_POST';\r\n\r\n// Types for USER ACTIONS\r\nexport const SET_CURRENT_USER = 'SET_CURRENT';\r\nexport const GET_USER = 'GET_USER';\r\nexport const GET_USERS = 'GET_USERS';\r\nexport const UPDATE_USER = 'UPDATE_USER';\r\nexport const DELETE_USER = 'DELETE_USER';\r\n\r\n// Types for ROLE ACTIONS\r\nexport const GET_ROLES = 'GET_ROLES';\r\n\r\n// Types for CATEGORY ACTIONS\r\nexport const GET_CATEGORIES = 'GET_CATEGORIES';\r\nexport const GET_CATEGORY = 'GET_CATEGORY';\r\n// export const UPDATE_CATEGORY = 'UPDATE_CATEGORY';\r\nexport const DELETE_CATEGORY = 'DELETE_CATEGORY';\r\n\r\n// Types for COMMENT ACTIONS\r\nexport const GET_COMMENTS = 'GET_COMMENTS';\r\n\r\n// Types for LIKES ACTIONS\r\nexport const GET_LIKES = 'GET_LIKES';\r\nexport const DELETE_LIKE = 'DELETE_LIKE';\r\n","import axios from 'axios';\r\nimport {\r\n  DELETE_CATEGORY, GET_ALERT, GET_CATEGORIES, GET_CATEGORY, GET_ERRORS\r\n} from './types';\r\n\r\nexport const createCategory = (newCategory, navigate, setLoading, setSuccess) => async (dispatch) => {\r\n  try {\r\n    await axios.post('/api/categories', newCategory);\r\n    setSuccess(true);\r\n    setLoading(false);\r\n    navigate('/app/manage/categories');\r\n  } catch (error) {\r\n    setLoading(false);\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: error.response.data\r\n    });\r\n    console.log(error.response.data, error.message);\r\n  }\r\n};\r\nexport const getCategories = () => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get('/api/categories/all');\r\n    dispatch({\r\n      type: GET_CATEGORIES,\r\n      payload: res.data\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ERRORS, // change to alert later\r\n      payload: error.response.data\r\n    });\r\n  }\r\n};\r\nexport const getCategory = (id, navigate) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/api/categories/id/${id}`);\r\n    dispatch({\r\n      type: GET_CATEGORY,\r\n      payload: res.data\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ERRORS, // change to alert later\r\n      payload: error.response.data\r\n    });\r\n    navigate('/404');\r\n  }\r\n};\r\nexport const getCategoryByName = (name, navigate) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/api/categories/name/${name}`);\r\n    dispatch({\r\n      type: GET_CATEGORY,\r\n      payload: res.data\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ERRORS, // change to alert later\r\n      payload: error.response.data\r\n    });\r\n    navigate('/404');\r\n  }\r\n};\r\nexport const deleteCategory = (id) => async (dispatch) => {\r\n  try {\r\n    if (window.confirm('Are you sure you want to delete this category')) {\r\n      await axios.delete(`/api/categories/id/${id}`);\r\n      dispatch({\r\n        type: DELETE_CATEGORY,\r\n        payload: id\r\n      });\r\n      dispatch({\r\n        type: GET_ALERT,\r\n        payload: { message: 'Deleted succesfully', type: 'success' }\r\n      });\r\n    }\r\n  } catch (error) {\r\n    // dispatch({\r\n    //   type: GET_ERRORS, // change to alert later\r\n    //   payload: error.response.data\r\n    // });\r\n  }\r\n};\r\n","const Logo = (props) => (\n  <img\n    alt=\"Logo\"\n    src=\"/static/logo.svg\"\n    {...props}\n  />\n);\n\nexport default Logo;\n","/* eslint react/prop-types: 0 */\r\nimport React from 'react';\r\n// import PropTypes from 'prop-types';\r\nimport { Button as MuiButton, makeStyles } from '@material-ui/core';\r\n// import { Link } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n\r\n//   label: {\r\n//     textTransform: 'none'\r\n//   }\r\n}));\r\n\r\nconst url = {\r\n  login: '/user/login',\r\n  register: '/user/register'\r\n};\r\n\r\nexport function Button(props) {\r\n  const {\r\n    text, size, color, variant, width, marginY, padding, paddingY, onClick, ...other\r\n  } = props;\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <MuiButton\r\n      variant={variant || 'contained'}\r\n      size={size || 'medium'}\r\n      color={color || 'secondary'}\r\n      onClick={onClick}\r\n      sx={{\r\n        width: width && width,\r\n        my: marginY || 1,\r\n        p: padding || 1,\r\n        py: paddingY\r\n      }}\r\n      {...other}\r\n      classes={{ root: classes.root, label: classes.label }}\r\n    >\r\n      {text}\r\n    </MuiButton>\r\n  );\r\n}\r\n\r\nexport const CreateButton = (props) => {\r\n  const {\r\n    text, href, color, variant, width, marginY, marginX, paddingY, ...other\r\n  } = props;\r\n  return (\r\n    <Button\r\n      href={href}\r\n      color={color}\r\n      // component=\"a\"\r\n      variant={variant}\r\n      width={width}\r\n      marginY={marginY}\r\n      paddingY={paddingY}\r\n      text={text}\r\n      {...other}\r\n    />\r\n  );\r\n};\r\n\r\nexport const LoginButton = ({ ...other }) => (\r\n  <CreateButton\r\n    href={url.login}\r\n    text=\"Login\"\r\n    {...other}\r\n  />\r\n);\r\n\r\nexport const SignUpButton = ({ ...other }) => (\r\n  <CreateButton\r\n    href={url.register}\r\n    text=\"Sign up\"\r\n    {...other}\r\n  />\r\n);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ReactPhoneInput from 'react-phone-input-2';\r\nimport 'react-phone-input-2/lib/high-res.css';\r\nimport { TextField, } from '@material-ui/core';\r\n\r\nconst phoneTextField = {\r\n  outlined: {\r\n    width: '100%',\r\n    border: 0,\r\n    borderRadius: 0\r\n  },\r\n  // standard: {\r\n  //   border: 'none',\r\n  //   width: '100%',\r\n  //   borderBottom: '1px solid grey',\r\n  //   borderRadius: 0\r\n  // },\r\n  button: {\r\n    background: 'rgba(255, 255, 255, 0)',\r\n    // '&:hover': { background: 'rgba(255, 255, 255, 0)' },\r\n    border: 'none',\r\n    padding: 1\r\n  },\r\n  container: {\r\n    margin: 10\r\n  }\r\n};\r\n\r\nconst convertToPhoneInfoParam = (name, value, input, country, event) => ({\r\n  target: {\r\n    name, // shrtcut for (name: name)\r\n    value, // value: value\r\n    input, // input: input\r\n    country, // country: country\r\n    event, // event: event\r\n  },\r\n});\r\n\r\nconst CustomInput = React.forwardRef((props, inputRef) => {\r\n  const { value, onChange, ...others } = props;\r\n  return (\r\n    <ReactPhoneInput\r\n      ref={(ref) => { inputRef(ref ? ref.inputElement : null); }}\r\n      inputProps={{\r\n        name: 'phoneNumber',\r\n        id: 'phoneNumber'\r\n      // label: 'Phone Number',\r\n      }}\r\n      inputStyle={phoneTextField.outlined}\r\n      buttonStyle={phoneTextField.button}\r\n      containerStyle={phoneTextField.container}\r\n      countryCodeEditable={false}\r\n      country=\"cn\"\r\n      value={value}\r\n      onChange={(inputValue, country, e, formattedValue) => onChange(convertToPhoneInfoParam(e.target.name, formattedValue, inputValue, country, e))}\r\n        // onChange={(inputValue, country, e, formattedValue) => {\r\n        //   console.log(`value: ${inputValue}`,\r\n        //     `dialCode: ${country.dialCode}`,\r\n        //     `formattedValue: ${formattedValue}`);\r\n        // }}\r\n      {...others}\r\n    />\r\n  );\r\n});\r\n\r\nfunction PhoneInput(props, ref) {\r\n  const {\r\n    value, onChange, error = null, ...others\r\n  } = props;\r\n  return (\r\n    <TextField\r\n      fullWidth\r\n      inputRef={ref}\r\n      value={value}\r\n      onChange={onChange}\r\n      variant=\"outlined\"\r\n      label=\"Mobile Number\"\r\n      InputLabelProps={{ shrink: true }}\r\n      InputProps={{\r\n        inputComponent: CustomInput,\r\n      }}\r\n      {...(error && { error: true, helperText: error })}\r\n      {...others}\r\n    />\r\n  );\r\n}\r\n\r\nexport default React.forwardRef(PhoneInput);\r\n\r\nPhoneInput.propTypes = {\r\n  value: PropTypes.string,\r\n  error: PropTypes.string,\r\n  onChange: PropTypes.func\r\n};\r\n\r\nCustomInput.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n  inputRef: PropTypes.any\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport MuiSearchBar from 'material-ui-search-bar';\r\n\r\nexport default function SearchBar({\r\n  placeholder, searchText, setSearchText, ...other\r\n}) {\r\n  // const [searchText, setSearchText] = useState('');\r\n  const handleSearch = (newValue) => {\r\n    console.log(newValue);\r\n    setSearchText(newValue);\r\n  };\r\n  const resetSearchField = () => {\r\n    setSearchText('');\r\n  };\r\n\r\n  return (\r\n    <MuiSearchBar\r\n          // name=\"searchInput\"\r\n      value={searchText}\r\n      onChange={handleSearch}\r\n      onRequestSearch={() => console.log('onRequestSearch')}\r\n      onCancelSearch={resetSearchField}\r\n      style={{\r\n        margin: '0 auto',\r\n        maxWidth: '75%'\r\n      }}\r\n      placeholder={placeholder || 'Search'}\r\n      {...other}\r\n    />\r\n  );\r\n}\r\n\r\nSearchBar.propTypes = {\r\n  placeholder: PropTypes.string,\r\n  searchText: PropTypes.string.isRequired,\r\n  setSearchText: PropTypes.func.isRequired,\r\n};\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles({\r\n  textArea: {\r\n    width: '100%',\r\n    // '& .quill': { width: '100%', background: 'pink' },\r\n    '& .ql-editor': { height: '400px' },\r\n    '& .ql-container': { borderRadius: '0 0 4px 4px', }\r\n  },\r\n  toolbar: {\r\n    '& .ql-toolbar.ql-snow': {\r\n      borderRadius: '4px 4px 0 0',\r\n      background: '#fafafa'\r\n    }\r\n  },\r\n  editorFocus: {\r\n    border: 'none',\r\n    '& .quill': {\r\n      border: 'none',\r\n    },\r\n    '& .ql-container': { boxShadow: '0 2px 4px 2px rgba(131, 202, 255, .5)', },\r\n    '&:hover .MuiOutlinedInput-notchedOutline': {\r\n      borderColor: 'rgba(0, 0, 0, .1)',\r\n    },\r\n  },\r\n  error: {\r\n    '& .MuiOutlinedInput-notchedOutline, &:hover .MuiOutlinedInput-notchedOutline': {\r\n      borderWidth: '2px'\r\n    }\r\n  },\r\n\r\n});\r\n\r\nconst toolbarOptions = [\r\n  [\r\n    'bold', 'italic', 'underline', 'strike',\r\n    'blockquote', // blockquote\r\n    'code-block',\r\n    { color: [] },\r\n    { script: 'sub' }, { script: 'super' }, // superscript/subscript\r\n    { direction: 'rtl' }, // text direction\r\n    // { font: [] },\r\n  ], // toggled buttons\r\n  [\r\n    { header: [1, 2, 3, 4, 5, 6] },\r\n    { size: [] }\r\n  ],\r\n  [\r\n    { list: 'ordered' }, { list: 'bullet' },\r\n    { align: [] },\r\n    // { indent: '-1' }, { indent: '+1' } // outdent/indent\r\n  ],\r\n  [\r\n    'link', 'image' // link, image , 'video'\r\n  ],\r\n\r\n  // [ 'code-block' ] // code-block\r\n  //   ['clean'] // remove formatting button\r\n];\r\n// const formats = [\r\n//   'header', 'font', 'size',\r\n//   'bold', 'italic', 'underline', 'strike', 'blockquote',\r\n//   'list', 'bullet',\r\n//   'link', 'image', 'video'\r\n// ];\r\n\r\nconst modules = {\r\n  toolbar: toolbarOptions,\r\n};\r\n\r\nconst convertToTextEditorParam = (name, value) => ({\r\n  target: { name, value }\r\n});\r\n\r\nconst CustomTextEditor = React.forwardRef((props, inputRef) => {\r\n  const {\r\n    name, value, onChange, onEditorFocus, onEditorBlur\r\n  } = props;\r\n  const classes = useStyles();\r\n  //   const [state, setState] = useState('');\r\n  //   const handleOnChange = (e) => { console.log(e); setState(); };\r\n  return (\r\n    <div className={`${classes.textArea} ${classes.toolbar}`}>\r\n      <ReactQuill\r\n        ref={(ref) => { inputRef(ref ? ref.inputElement : null); }}\r\n        // ref={inputRef}\r\n        name={name}\r\n        value={value}\r\n        modules={modules}\r\n        theme=\"snow\"\r\n        // formats={formats}\r\n        placeholder=\"Type your content here\"\r\n        onChange={(newValue, delta, source) => {\r\n          if (source === 'user') {\r\n            onChange(convertToTextEditorParam(name, newValue));\r\n            // console.log(source);\r\n          }\r\n        }}\r\n        onFocus={onEditorFocus}\r\n        onBlur={onEditorBlur}\r\n      />\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default function TextEditor(props) {\r\n  const classes = useStyles();\r\n\r\n  const {\r\n    name, value, onChange, error = null\r\n  } = props;\r\n\r\n  const [isFocus, setIsFocus] = useState(false);\r\n\r\n  return (\r\n    <TextField\r\n      className={`${(error && classes.error) || (isFocus && classes.editorFocus)}`}\r\n      InputProps={{\r\n        inputComponent: CustomTextEditor,\r\n        inputProps: {\r\n          name,\r\n          value,\r\n          onChange,\r\n          onEditorFocus: () => setIsFocus(true),\r\n          onEditorBlur: () => setIsFocus(false)\r\n        }\r\n      }}\r\n      {...(error && { error: true, helperText: error })}\r\n    />\r\n    // <CustomTextEditor\r\n    //   ref={(ref) => (ref ? ref.inputElement : null)}\r\n    //   name={name}\r\n    //   value={value}\r\n    //   onChange={onChange}\r\n    //   error={error}\r\n    // />\r\n  );\r\n}\r\n\r\nCustomTextEditor.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  onEditorFocus: PropTypes.func.isRequired,\r\n  onEditorBlur: PropTypes.func.isRequired\r\n};\r\n\r\nTextEditor.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  error: PropTypes.string,\r\n  onChange: PropTypes.func.isRequired\r\n};\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { DropzoneAreaBase } from 'material-ui-dropzone';\r\nimport { Alert, TextField } from '@material-ui/core';\r\n// import SnackBarAlert from '../SnacKBarAlert';\r\n\r\nconst customStyles = (imageData) => ({\r\n  dropzone: {\r\n    '& .MuiInputBase-root': {\r\n      background: `linear-gradient(rgba(255,255,255,.3), rgba(255,255,255,.3)), url(${imageData})`,\r\n      backgroundSize: 'cover',\r\n      backgroundRepeat: 'no-repeat',\r\n      backgroundPosition: 'center',\r\n    },\r\n    '& > * .MuiDropzoneArea-root': {\r\n      backgroundColor: 'rgba(255, 255, 255, 0.8)',\r\n      backgroundImage: 'url(\"https://www.transparenttextures.com/patterns/60-lines.png\")'\r\n\r\n    },\r\n    '& > * .MuiGrid-root>.MuiGrid-item': {\r\n      width: '100%',\r\n      margin: 'auto'\r\n    },\r\n    '& > * .MuiDropzonePreviewList-removeButton': {\r\n      top: '130px'\r\n    }\r\n  }\r\n});\r\n\r\nconst FileUploadDropzone = React.forwardRef((props, inputRef) => {\r\n  const { fileObjects, onAdd, onDelete } = props;\r\n  const [alert, setAlert] = useState({\r\n    open: false,\r\n    message: '',\r\n    severity: ''\r\n  });\r\n\r\n  return (\r\n    <div style={{ width: '100%', padding: 20, position: 'relative' }}>\r\n\r\n      <DropzoneAreaBase\r\n        ref={(ref) => { inputRef(ref ? ref.inputElement : null); }}\r\n        dropzoneText=\"Drag and drop an Image here or click to upload\"\r\n        acceptedFiles={['image/*']}\r\n        maxFileSize={4000000}\r\n        fileObjects={fileObjects}\r\n        onAdd={onAdd}\r\n        onDelete={onDelete}\r\n        previewGridProps={{\r\n          container: { maxWidth: '100%', },\r\n          item: {\r\n            maxWidth: '100%',\r\n            // margin: 'auto',\r\n          },\r\n        }}\r\n        getFileRemovedMessage={() => 'Image successfully deleted'}\r\n        getFileAddedMessage={() => 'Image successfully added'}\r\n        // getDropRejectMessage={() => {}}\r\n        // onAlert={(message, variant) => console.log(`${variant}: ${message}`)}\r\n        onAlert={(message, severity) => setAlert({\r\n          ...alert, open: true, message, severity\r\n        })}\r\n        showPreviewsInDropzone\r\n        showFileNames\r\n        showAlerts={false}\r\n      />\r\n      {\r\n          alert.open && (\r\n            <>\r\n              <Alert\r\n                onClose={() => setAlert({})}\r\n                severity={alert.severity}\r\n                variant=\"filled\"\r\n                sx={{\r\n                  position: 'absolute', top: 10,\r\n                }}\r\n              >\r\n                {alert.message}\r\n                <span style={{ display: 'none' }}>{ setTimeout(() => setAlert({}), 3000,) }</span>\r\n              </Alert>\r\n            </>\r\n          )\r\n        }\r\n    </div>\r\n  );\r\n});\r\n\r\nconst convertToImageDataParam = (name, value) => ({\r\n  target: { name, value }\r\n});\r\n\r\nfunction UploadField(props) {\r\n  const {\r\n    name, onAdd, onDelete, imgData, error = null, ...others\r\n  } = props;\r\n\r\n  const [fileObjects, setFileObjects] = useState([]);\r\n  const [data, setData] = useState('');\r\n\r\n  return (\r\n    <TextField\r\n      sx={customStyles(imgData || data).dropzone}\r\n      fullWidth\r\n      required\r\n      name={name}\r\n      variant=\"outlined\"\r\n      label=\"Cover Image\"\r\n      InputLabelProps={{ shrink: true }}\r\n      InputProps={{\r\n        inputComponent: FileUploadDropzone,\r\n        inputProps: {\r\n          fileObjects,\r\n          onAdd: (newFileObjs) => {\r\n            console.log('onAdd', newFileObjs);\r\n            setFileObjects(newFileObjs);\r\n            setData(newFileObjs[0].data);\r\n            onAdd(convertToImageDataParam(name, newFileObjs[0].data));\r\n          },\r\n          onDelete: (deleteFileObj) => {\r\n          //   const index = fileObjects.findIndex((obj) => obj.file.id === deleteFileObj.id);\r\n            setFileObjects([]);\r\n            setData('');\r\n            onDelete(convertToImageDataParam(name, ''));\r\n            console.log('onDelete', deleteFileObj);\r\n          },\r\n        }\r\n      }}\r\n      {...(error && { error: true, helperText: error })}\r\n      {...others}\r\n    />\r\n  );\r\n}\r\n\r\nexport default UploadField;\r\n\r\nFileUploadDropzone.propTypes = {\r\n  onAdd: PropTypes.func.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n  fileObjects: PropTypes.array.isRequired\r\n};\r\n\r\nUploadField.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  error: PropTypes.string,\r\n  imgData: PropTypes.any,\r\n  onAdd: PropTypes.func.isRequired,\r\n  onDelete: PropTypes.func.isRequired\r\n};\r\n","import * as Buttons from './Button';\r\nimport Select from './Select';\r\nimport PhoneInput from './PhoneInput';\r\nimport Input from './Input';\r\nimport SearchBar from './SearchBar';\r\nimport TextEditor from './TextEditor';\r\nimport ImageDropzone from './FileUploadDropzone';\r\n\r\nconst Controls = {\r\n  Buttons,\r\n  Select,\r\n  PhoneInput,\r\n  Input,\r\n  SearchBar,\r\n  TextEditor,\r\n  ImageDropzone,\r\n};\r\n\r\nexport default Controls;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  FormControl, InputLabel, Select as MuiSelect, MenuItem, FormHelperText\r\n} from '@material-ui/core';\r\n\r\nexport default function Select(props) {\r\n  const {\r\n    name, variant, label, value, error = null, onChange, options, ...other\r\n  } = props;\r\n\r\n  return (\r\n    <FormControl\r\n      variant={variant || 'outlined'}\r\n      {...(error && { error: true })}\r\n      sx={{ width: '100%' }}\r\n    >\r\n      <InputLabel>{label}</InputLabel>\r\n      <MuiSelect\r\n        label={label}\r\n        name={name}\r\n        value={value}\r\n        onChange={onChange}\r\n        {...other}\r\n      >\r\n        {/* <MenuItem value=\"\">None</MenuItem> */}\r\n        {\r\n          options.map(\r\n            (item) => (<MenuItem key={item.id} value={item.name}>{item.name}</MenuItem>)\r\n          )\r\n        }\r\n      </MuiSelect>\r\n      {error && <FormHelperText>{error}</FormHelperText>}\r\n    </FormControl>\r\n  );\r\n}\r\n\r\nSelect.propTypes = {\r\n  name: PropTypes.string,\r\n  variant: PropTypes.string,\r\n  label: PropTypes.string,\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n  error: PropTypes.string,\r\n  options: PropTypes.array\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { TextField } from '@material-ui/core';\r\n\r\nexport default function Input(props) {\r\n  const {\r\n    id, name, variant, label, value, error = null, onChange, ...others\r\n  } = props;\r\n  return (\r\n    <TextField\r\n      fullWidth\r\n      variant={variant || 'outlined'}\r\n      label={label}\r\n      id={id}\r\n      name={name}\r\n      value={value}\r\n      onChange={onChange}\r\n      {...(error && { error: true, helperText: error })}\r\n      {...others}\r\n    />\r\n  );\r\n}\r\n\r\nInput.propTypes = {\r\n  id: PropTypes.string,\r\n  name: PropTypes.string,\r\n  variant: PropTypes.string,\r\n  label: PropTypes.string,\r\n  value: PropTypes.string,\r\n  error: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\n","import { AccountCircle } from '@material-ui/icons';\r\n// import CollectionsBookmarkOutlinedIcon from '@material-ui/icons/CollectionsBookmarkOutlined';\r\nimport {\r\n  BarChart as BarChartIcon,\r\n  Edit3 as PencilIcon,\r\n  Users as UsersIcon,\r\n  User as UserIcon,\r\n  Home as HomeIcon,\r\n  LogOut as LogOutIcon\r\n} from 'react-feather';\r\n\r\nexport const user = {\r\n  avatar: '/static/images/avatars/avatar_1.png',\r\n  jobTitle: 'Senior Developer',\r\n  name: 'Katarina Smith'\r\n};\r\n\r\nexport const itemsList = {\r\n  mainNav: [\r\n    {\r\n      href: '/home',\r\n      icon: HomeIcon,\r\n      title: 'Home'\r\n    },\r\n    // {\r\n    //   href: '/categories',\r\n    //   icon: CollectionsBookmarkOutlinedIcon,\r\n    //   title: 'Categories',\r\n    //   subNav: [\r\n    //     {\r\n    //       id: 1,\r\n    //       href: '/categories', // categories/English\r\n    //       title: 'English'\r\n    //     },\r\n    //     {\r\n    //       id: 2,\r\n    //       href: '/categories', // categories/Chinese\r\n    //       title: 'Chinese'\r\n    //     },\r\n    //     {\r\n    //       id: 3,\r\n    //       href: '/categories', // categories/Russian\r\n    //       title: 'Russian'\r\n    //     },\r\n    //   ]\r\n    // }\r\n  ],\r\n  accountTopNav: [\r\n    {\r\n      href: '',\r\n      icon: AccountCircle,\r\n      isIconButton: true,\r\n      title: 'profileAccount',\r\n      subNav: [\r\n        {\r\n          href: '/app/account',\r\n          icon: UserIcon,\r\n          title: 'Profile'\r\n        },\r\n        {\r\n          // href: '',\r\n          action: 'logout',\r\n          icon: LogOutIcon,\r\n          title: 'Logout'\r\n        }\r\n      ]\r\n    }\r\n  ],\r\n  userNav: {\r\n    user: [\r\n      {\r\n        href: '/app/account',\r\n        icon: UserIcon,\r\n        title: 'Profile'\r\n      },\r\n      {\r\n        // href: '',\r\n        action: 'logout',\r\n        icon: LogOutIcon,\r\n        title: 'Logout'\r\n      }\r\n    ],\r\n    admin: [\r\n      {\r\n        href: '/app/admin/posts/myPosts',\r\n        icon: PencilIcon,\r\n        title: 'My Posts'\r\n      },\r\n    ],\r\n    superAdmin: [\r\n      {\r\n        href: '/app/manage/dashboard',\r\n        icon: BarChartIcon,\r\n        title: 'Dashboard'\r\n      },\r\n      {\r\n        href: '/app/manage',\r\n        icon: UsersIcon,\r\n        title: 'Manage',\r\n        subNav: [\r\n          {\r\n            id: 1,\r\n            href: '/app/manage/users',\r\n            title: 'Users'\r\n          },\r\n          {\r\n            id: 2,\r\n            href: '/app/manage/posts',\r\n            title: 'Posts'\r\n          },\r\n          {\r\n            id: 3,\r\n            href: '/app/manage/categories',\r\n            title: 'Categories'\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n};\r\n","import axios from 'axios';\r\n\r\nconst setJWTToken = (token) => {\r\n  if (token) {\r\n    axios.defaults.headers.common.Authorization = token;\r\n  } else {\r\n    delete axios.defaults.headers.common.Authorization;\r\n  }\r\n};\r\n\r\nexport default setJWTToken;\r\n","/* eslint-disable camelcase */\r\nimport axios from 'axios';\r\nimport setJWTToken from 'src/securityUtils/setJWTToken';\r\nimport jwt_decode from 'jwt-decode';\r\nimport { GET_ERRORS, SET_CURRENT_USER } from './types';\r\n\r\nexport const registerUser = (newUser, navigate, setLoading, setSuccess) => async (dispatch) => {\r\n  try {\r\n    await axios.post('/api/users/register', newUser);\r\n    if (setLoading && setSuccess) {\r\n      setSuccess(true);\r\n      setLoading(false);\r\n    }\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n    navigate('/user/login');\r\n  } catch (error) {\r\n    if (setLoading) {\r\n      setLoading(false);\r\n    }\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: error.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const login = (loginRequest) => async (dispatch) => {\r\n  try {\r\n    // post => Login Request\r\n    const res = await axios.post('/api/users/login', loginRequest);\r\n\r\n    // extract token from res.\r\n    const { token } = res.data;\r\n\r\n    // store the token in the localStorage\r\n    localStorage.setItem('jwtToken', token);\r\n\r\n    // Set the token in header ****\r\n    setJWTToken(token);\r\n\r\n    // decode token on React\r\n    const decoded = jwt_decode(token);\r\n\r\n    // dispatch to our securityReducer\r\n    dispatch({\r\n      type: SET_CURRENT_USER,\r\n      payload: decoded\r\n    });\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: error.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n  localStorage.removeItem('jwtToken');\r\n  setJWTToken(false);\r\n  dispatch({\r\n    type: SET_CURRENT_USER,\r\n    payload: {}\r\n  });\r\n};\r\n\r\nexport const clearErrors = () => (dispatch) => {\r\n  dispatch({\r\n    type: GET_ERRORS,\r\n    payload: {}\r\n  });\r\n};\r\n","/* eslint react/prop-types: 0 */\r\nimport React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { ExpandLess, ExpandMore } from '@material-ui/icons';\r\nimport { logout } from 'src/actions/securityActions';\r\n\r\nfunction NavTopMenuItem(props) {\r\n  const { menuItem } = props;\r\n  const navigate = useNavigate();\r\n\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n  const handleOpenMenu = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleCloseMenu = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleClick = (listItem) => (\r\n    listItem.subNav ? handleOpenMenu\r\n      : () => {\r\n        if (listItem.href) { navigate(listItem.href); }\r\n        if (listItem.action === 'logout') { props.logout(); window.location.href = '/user/login'; }\r\n        if (listItem.name) { navigate(`/categories/${listItem.name}`); }\r\n        handleCloseMenu();\r\n      }\r\n  );\r\n\r\n  return (\r\n\r\n    <div>\r\n      <MenuItem\r\n        // component={RouterLink}\r\n        // to={menuItem.href}\r\n        aria-controls={open ? menuItem.title : null}\r\n        aria-haspopup=\"true\"\r\n        onClick={handleClick(menuItem)}\r\n      >\r\n        {menuItem.isIconButton ? <menuItem.icon /> : menuItem.title}\r\n        {!menuItem.isIconButton ? (menuItem.subNav && (open ? <ExpandLess /> : <ExpandMore />)) : null}\r\n      </MenuItem>\r\n      {menuItem.subNav && (\r\n      <Menu\r\n        id={menuItem.title}\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        getContentAnchorEl={null}\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'center',\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'center',\r\n        }}\r\n        open={open}\r\n        onClose={handleCloseMenu}\r\n      >\r\n        {menuItem.subNav.map((subMenu) => (\r\n          <MenuItem key={subMenu.title || subMenu.name} onClick={handleClick(subMenu)}>{subMenu.title || subMenu.name}</MenuItem>\r\n        ))}\r\n      </Menu>\r\n      )}\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nNavTopMenuItem.propTypes = {\r\n  logout: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, { logout })(NavTopMenuItem);\r\n","import CollectionsBookmarkOutlinedIcon from '@material-ui/icons/CollectionsBookmarkOutlined';\r\n\r\nconst categoryNavList = [\r\n  {\r\n    href: '/categories',\r\n    icon: CollectionsBookmarkOutlinedIcon,\r\n    title: 'Categories',\r\n    subNav: []\r\n  }\r\n];\r\n\r\nexport default categoryNavList;\r\n","import { Link as RouterLink } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Box,\r\n  Hidden,\r\n  List,\r\n  Toolbar\r\n} from '@material-ui/core';\r\n// import MenuIcon from '@material-ui/icons/Menu';\r\n// import AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport { connect } from 'react-redux';\r\nimport { getCategories } from 'src/actions/categoryAction';\r\nimport { useEffect } from 'react';\r\nimport Logo from './Logo';\r\nimport Controls from './controls/Controls';\r\nimport { itemsList } from './NavListItems';\r\nimport NavTopMenuItem from './HeaderMenu';\r\nimport categoryNavList from './categoryNavList';\r\n\r\nfunction NavToolBar(props) {\r\n  const {\r\n    children, isLoggedIn, categories\r\n  } = props;\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      await props.getCategories();\r\n      categoryNavList[0].subNav = categories;\r\n    })();\r\n  }, [categories.length]);\r\n\r\n  // const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n  // const handleClick = (event) => {\r\n  //   setAnchorEl(event.currentTarget);\r\n  // };\r\n\r\n  // const handleClose = () => {\r\n  //   setAnchorEl(null);\r\n  // };\r\n\r\n  const showLoginAndSignupBtn = () => (\r\n    <Box>\r\n      <Controls.Buttons.LoginButton\r\n        color=\"secondary\"\r\n        variant=\"outlined\"\r\n        size=\"small\"\r\n        padding={0.4}\r\n        sx={{\r\n          color: 'white',\r\n          mx: 1\r\n        }}\r\n      />\r\n      <Controls.Buttons.SignUpButton\r\n        color=\"secondary\"\r\n        size=\"small\"\r\n        padding={0.5}\r\n        sx={{\r\n          mx: 1\r\n        }}\r\n      />\r\n    </Box>\r\n  );\r\n\r\n  return (\r\n    <Toolbar>\r\n      <RouterLink to=\"/\">\r\n        <Logo />\r\n      </RouterLink>\r\n      <Box sx={{ flexGrow: 1 }} />\r\n      <Hidden mdDown>\r\n        <List sx={{ display: 'flex' }}>\r\n          {\r\n          itemsList.mainNav.map((item) => (\r\n            <NavTopMenuItem key={item.title} menuItem={item} />\r\n          ))\r\n        }\r\n          {\r\n          categoryNavList && categoryNavList.map((item) => (\r\n            <NavTopMenuItem key={item.title} menuItem={item} />\r\n          ))\r\n        }\r\n        </List>\r\n\r\n        {/* displasys button if user is not logged in */}\r\n        {\r\n           !isLoggedIn ? showLoginAndSignupBtn() : ' '\r\n        }\r\n\r\n        {/* use the below code to handle the display of the profile icon when loggedIn */}\r\n        {/* {\r\n          isLoggedIn && (\r\n            <IconButton color=\"inherit\" component={RouterLink} to=\"/app/account\">\r\n              <AccountCircle />\r\n            </IconButton>\r\n          )\r\n        } */}\r\n        {/* <IconButton color=\"inherit\" component={RouterLink} to=\"/app/account\">\r\n          <AccountCircle />\r\n        </IconButton> */}\r\n        {\r\n        isLoggedIn && (\r\n          itemsList.accountTopNav.map((item) => (\r\n            <NavTopMenuItem key={item.title} menuItem={item} />\r\n          ))\r\n        )\r\n        }\r\n      </Hidden>\r\n      {children}\r\n    </Toolbar>\r\n  );\r\n}\r\n\r\nNavToolBar.propTypes = {\r\n  children: PropTypes.any,\r\n  isLoggedIn: PropTypes.bool,\r\n  getCategories: PropTypes.func.isRequired,\r\n  categories: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  categories: state.category.categories\r\n});\r\n\r\nexport default connect(mapStateToProps, { getCategories })(NavToolBar);\r\n","// import { useState } from 'react';\n// import { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  AppBar, Hidden, IconButton\n} from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport NavToolBar from './NavToolBar';\n\nconst HeaderNavBar = ({ onMobileNavOpen, isLoggedIn, ...rest },) => (\n  <AppBar\n    elevation={0}\n    {...rest}\n  >\n    <NavToolBar isLoggedIn={isLoggedIn}>\n      <Hidden mdUp>\n        <IconButton\n          color=\"inherit\"\n          onClick={onMobileNavOpen}\n        >\n          <MenuIcon />\n        </IconButton>\n      </Hidden>\n    </NavToolBar>\n\n  </AppBar>\n);\n\nHeaderNavBar.propTypes = {\n  onMobileNavOpen: PropTypes.func,\n  isLoggedIn: PropTypes.bool\n};\n\nexport default HeaderNavBar;\n","/* eslint react/prop-types: 0 */\r\n\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Collapse,\r\n  List,\r\n  ListItem as MuiListItem, ListItemIcon, ListItemText, makeStyles,\r\n} from '@material-ui/core';\r\nimport { ExpandLess, ExpandMore } from '@material-ui/icons';\r\nimport { useState } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { logout } from '../actions/securityActions';\r\n\r\nconst actionStyle = (theme) => ({\r\n  // backgroundColor: theme.palette.customWhite.shade50,\r\n  color: theme.palette.secondary.dark,\r\n});\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    color: theme.palette.text.secondary,\r\n    fontWeight: 'medium',\r\n    justifyContent: 'flex-start',\r\n    letterSpacing: 0,\r\n    textTransform: 'none',\r\n    width: '100%',\r\n    '&:hover, &:hover .MuiListItemIcon-root': actionStyle(theme),\r\n    '& .MuiListItemIcon-root': {\r\n      marginRight: 1,\r\n      minWidth: 30\r\n    }\r\n  },\r\n  subMenu: {\r\n    paddingLeft: theme.spacing(2.5),\r\n    paddingRight: theme.spacing(2.5),\r\n    '& .MuiListItem-root': {\r\n      paddingLeft: theme.spacing(1.5),\r\n      paddingTop: theme.spacing(0.4),\r\n      paddingBottom: theme.spacing(0.4),\r\n    }\r\n  },\r\n  active: {\r\n    ...actionStyle(theme),\r\n    '& .MuiListItemIcon-root': actionStyle(theme),\r\n  }\r\n}));\r\n\r\nconst SideBarMenuItem = (props) => {\r\n  const { menuItem } = props;\r\n  const classes = useStyles();\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const [open, setOpen] = useState(true);\r\n\r\n  const showSubNav = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  const isActive = (listItem) => (location.pathname === listItem.href && classes.active);\r\n  // const handleClick = (listItem) => (\r\n  //   listItem.subNav ? showSubNav : () => navigate(listItem.href)\r\n  // );\r\n  const handleClick = (listItem) => (\r\n    listItem.subNav ? showSubNav\r\n      : () => {\r\n        if (listItem.href) { navigate(listItem.href); }\r\n        if (listItem.action === 'logout') { props.logout(); window.location.href = '/user/login'; }\r\n        if (listItem.name) { navigate(`/categories/${listItem.name}`); }\r\n      }\r\n  );\r\n\r\n  const ListItem = ({ itemObj, children, ...other }) => (\r\n    <MuiListItem\r\n      button\r\n      onClick={handleClick(itemObj)}\r\n      className={`${classes.root} ${isActive(itemObj)}`}\r\n      {...other}\r\n    >\r\n      <ListItemIcon>\r\n        {itemObj.icon && (\r\n          <menuItem.icon size=\"20\" />\r\n        )}\r\n      </ListItemIcon>\r\n      <ListItemText primary={itemObj.title || itemObj.name} />\r\n      {children}\r\n    </MuiListItem>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <ListItem itemObj={menuItem}>\r\n        {menuItem.subNav && (open ? <ExpandLess /> : <ExpandMore />)}\r\n      </ListItem>\r\n      {\r\n        menuItem.subNav && menuItem.subNav.map((item) => (\r\n          <Collapse in={open} timeout=\"auto\" unmountOnExit key={item.id}>\r\n            <List component=\"div\" disablePadding className={classes.subMenu}>\r\n              <ListItem itemObj={item} />\r\n            </List>\r\n          </Collapse>\r\n        ))\r\n      }\r\n    </>\r\n  );\r\n};\r\n\r\nSideBarMenuItem.propTypes = {\r\n  menuItem: PropTypes.any,\r\n  logout: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, { logout })(SideBarMenuItem);\r\n","import { useEffect } from 'react';\r\nimport { Link as RouterLink, useLocation } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Divider,\r\n  Drawer,\r\n  Hidden,\r\n  List,\r\n  Typography,\r\n} from '@material-ui/core';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { getCategories } from 'src/actions/categoryAction';\r\nimport Controls from './controls/Controls';\r\nimport { itemsList } from './NavListItems';\r\nimport SideBarMenuItem from './SideBarListNav';\r\nimport categoryNavList from './categoryNavList';\r\n// import Controls from './controls/Controls';\r\n\r\nconst SideBar = (props) => {\r\n  const {\r\n    onMobileClose, openMobile, isLoggedIn, role, user, categories, type, children\r\n  } = props;\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    if (openMobile && onMobileClose) {\r\n      onMobileClose();\r\n    }\r\n  }, [location.pathname]);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      await props.getCategories();\r\n      categoryNavList[0].subNav = categories;\r\n    })();\r\n  }, [categories.length]);\r\n\r\n  const displayNavItem = (arry) => (\r\n    arry.map((item) => (\r\n      <SideBarMenuItem\r\n        key={item.title}\r\n        menuItem={item}\r\n      />\r\n    ))\r\n  );\r\n\r\n  const showLoginAndSignupBtn = () => (\r\n    <Box>\r\n      <Controls.Buttons.LoginButton\r\n        variant=\"outlined\"\r\n        width=\"100%\"\r\n        marginY={2}\r\n      />\r\n      <Controls.Buttons.SignUpButton\r\n        width=\"100%\"\r\n        marginY={2}\r\n      />\r\n    </Box>\r\n  );\r\n\r\n  const content = (\r\n    <Box\r\n      sx={{\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        height: '100%'\r\n      }}\r\n    >\r\n      {\r\n        isLoggedIn && (\r\n          <>\r\n            <Box\r\n              sx={{\r\n                alignItems: 'center',\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                p: 2\r\n              }}\r\n            >\r\n              <Avatar\r\n                component={RouterLink}\r\n                alt={user.firstName}\r\n                src={user.avatarImg}\r\n                sx={{\r\n                  cursor: 'pointer',\r\n                  width: 64,\r\n                  height: 64,\r\n                  mb: 1\r\n                }}\r\n                to=\"/app/account\"\r\n              />\r\n              <Typography color=\"textPrimary\" variant=\"h5\">\r\n                {user.fullName}\r\n              </Typography>\r\n              <Typography\r\n                color=\"textSecondary\"\r\n                variant=\"caption\"\r\n                style={{ fontSize: '0.6rem' }}\r\n              >\r\n                {user.roleName}\r\n              </Typography>\r\n            </Box>\r\n            <Divider />\r\n          </>\r\n        )\r\n      }\r\n\r\n      <Box sx={{ p: 2 }}>\r\n        <List>\r\n          {displayNavItem(itemsList.mainNav)}\r\n          {/* {console.log(categoryNavList)} */}\r\n          {displayNavItem(categoryNavList)}\r\n          {\r\n              isLoggedIn && displayNavItem([\r\n                ...role !== 'USER' ? itemsList.userNav.admin : [],\r\n                ...role === 'SUPER_ADMIN' ? itemsList.userNav.superAdmin : [],\r\n                ...itemsList.userNav.user\r\n              ])\r\n          }\r\n        </List>\r\n\r\n        {/* displasys button if page which isnt a dashboard and the user is not logged in */}\r\n        {\r\n            type !== 'dashboard'\r\n            && (!isLoggedIn ? showLoginAndSignupBtn() : ' ')\r\n        }\r\n\r\n      </Box>\r\n      {/* <Box sx={{ flexGrow: 1 }} /> */}\r\n    </Box>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Hidden lgUp>\r\n        <Drawer\r\n          anchor=\"left\"\r\n          onClose={onMobileClose}\r\n          open={openMobile}\r\n          variant=\"temporary\"\r\n          PaperProps={{\r\n            sx: {\r\n              width: 256\r\n            }\r\n          }}\r\n        >\r\n          {content}\r\n        </Drawer>\r\n      </Hidden>\r\n      {\r\n          type === 'dashboard' && (\r\n            <Hidden lgDown>\r\n              <Drawer\r\n                anchor=\"left\"\r\n                open\r\n                variant=\"persistent\"\r\n                PaperProps={{\r\n                  sx: {\r\n                    width: 256,\r\n                    top: 64,\r\n                    height: 'calc(100% - 64px)'\r\n                  }\r\n                }}\r\n              >\r\n                {content}\r\n              </Drawer>\r\n            </Hidden>\r\n          )\r\n      }\r\n\r\n      {children}\r\n    </>\r\n  );\r\n};\r\n\r\nSideBar.propTypes = {\r\n  onMobileClose: PropTypes.func,\r\n  openMobile: PropTypes.bool,\r\n  children: PropTypes.any,\r\n  type: PropTypes.string,\r\n  role: PropTypes.string,\r\n  user: PropTypes.object.isRequired,\r\n  isLoggedIn: PropTypes.bool,\r\n  getCategories: PropTypes.func.isRequired,\r\n  categories: PropTypes.array.isRequired\r\n};\r\n\r\nSideBar.defaultProps = {\r\n  onMobileClose: () => { },\r\n  openMobile: false\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.security.user,\r\n  categories: state.category.categories\r\n});\r\n\r\nexport default connect(mapStateToProps, { getCategories })(SideBar);\r\n","import { experimentalStyled } from '@material-ui/core';\r\n\r\nconst root = (color) => (\r\n  experimentalStyled('div')(\r\n    ({ theme }) => {\r\n      const { background } = theme.palette;\r\n      return ({\r\n        backgroundColor: Object.keys(background).includes(color) ? background[color] : color,\r\n        display: 'flex',\r\n        height: '100%',\r\n        overflow: 'hidden',\r\n        width: '100%'\r\n      });\r\n    }\r\n  )\r\n);\r\n\r\nconst wrapper = (screenSize = 'lg', { ...cssStyles } = {}) => (\r\n  experimentalStyled('div')(\r\n    ({ theme }) => ({\r\n      display: 'flex',\r\n      flex: '1 1 auto',\r\n      overflow: 'hidden',\r\n      paddingTop: 64,\r\n      [theme.breakpoints.down('sm')]: { paddingTop: 55 },\r\n      [theme.breakpoints.up(screenSize)]: { ...cssStyles }\r\n    })\r\n  )\r\n);\r\n\r\nexport const DashboardLayoutRoot = root('default');\r\n\r\nexport const MainLayoutRoot = root('default');\r\n\r\nexport const DashboardLayoutWrapper = wrapper('lg', { paddingLeft: 256 });\r\n\r\nexport const MainLayoutWrapper = wrapper();\r\n\r\nexport const LayoutContainer = experimentalStyled('div')({\r\n  display: 'flex',\r\n  flex: '1 1 auto',\r\n  overflow: 'hidden'\r\n});\r\n\r\nexport const LayoutContent = experimentalStyled('div')({\r\n  flex: '1 1 auto',\r\n  height: '100%',\r\n  overflow: 'auto'\r\n});\r\n","import { useState } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport HeaderNavBar from './Header';\n// import DashboardSidebar from './DashboardSidebar';\nimport SideBar from './SideBar';\nimport * as Frame from './LayoutStyles';\n// import state from './stateConstants';\n\nconst DashboardLayout = (props) => {\n  const { security } = props;\n  const [isMobileNavOpen, setMobileNavOpen] = useState(false);\n  // const isLoggedIn = true; // later use hooks (useState) or redux to handle change\n  // const role = 'subAdmin';\n  // const { isLoggedIn, role } = state;\n\n  console.log('DashboardLayoutSecurity', security);\n\n  const { validToken, user } = security;\n  let userIsAuthenticated;\n\n  if (validToken && user) {\n    userIsAuthenticated = true;\n    console.log(' user is Authenticated');\n  } else {\n    userIsAuthenticated = false;\n    console.log(' useris not Authenticated');\n  }\n\n  return (\n    <Frame.DashboardLayoutRoot>\n      <HeaderNavBar\n        onMobileNavOpen={() => setMobileNavOpen(true)}\n        isLoggedIn={userIsAuthenticated}\n      />\n      <SideBar\n        onMobileClose={() => setMobileNavOpen(false)}\n        openMobile={isMobileNavOpen}\n        isLoggedIn={userIsAuthenticated}\n        role={user.roleName}\n        type=\"dashboard\"\n      />\n      {/* <DashboardSidebar\n        onMobileClose={() => setMobileNavOpen(false)}\n        openMobile={isMobileNavOpen}\n        isLoggedIn={isLoggedIn}\n        role={role}\n      /> */}\n      <Frame.DashboardLayoutWrapper>\n        <Frame.LayoutContainer>\n          <Frame.LayoutContent>\n            <Outlet />\n          </Frame.LayoutContent>\n        </Frame.LayoutContainer>\n      </Frame.DashboardLayoutWrapper>\n    </Frame.DashboardLayoutRoot>\n  );\n};\n\nDashboardLayout.propTypes = {\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n  security: state.security\n});\n\nexport default connect(mapStateToProps)(DashboardLayout);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Outlet } from 'react-router-dom';\nimport HeaderNavBar from './Header';\nimport SideBar from './SideBar';\nimport * as Frame from './LayoutStyles';\n\nconst MainLayout = ({ security }) => {\n  const [isMobileNavOpen, setMobileNavOpen] = useState(false);\n\n  // console.log('MainLayoutSecurity', security);\n\n  const { validToken, user } = security;\n  let userIsAuthenticated;\n\n  if (validToken && user) {\n    userIsAuthenticated = true;\n    // console.log(' user is Authenticated');\n  } else {\n    userIsAuthenticated = false;\n    // console.log(' useris not Authenticated');\n  }\n\n  return (\n    <Frame.MainLayoutRoot>\n      <HeaderNavBar\n        onMobileNavOpen={() => setMobileNavOpen(true)}\n        isLoggedIn={userIsAuthenticated}\n      />\n      <SideBar\n        onMobileClose={() => setMobileNavOpen(false)}\n        openMobile={isMobileNavOpen}\n        isLoggedIn={userIsAuthenticated}\n        role={user.roleName}\n      />\n      <Frame.MainLayoutWrapper>\n        <Frame.LayoutContainer>\n          <Frame.LayoutContent>\n            <Outlet />\n          </Frame.LayoutContent>\n        </Frame.LayoutContainer>\n      </Frame.MainLayoutWrapper>\n    </Frame.MainLayoutRoot>\n  );\n};\n\nMainLayout.propTypes = {\n  security: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  security: state.security\n});\n\nexport default connect(mapStateToProps)(MainLayout);\n","import {\n  Box,\n  Typography,\n} from '@material-ui/core';\n\nconst AccountProfilePageTitle = () => (\n  <Box\n    sx={{\n      alignItems: 'center',\n      display: 'flex',\n      flexDirection: 'column'\n    }}\n  >\n    <Typography component=\"h1\" variant=\"h2\" color=\"primary\">\n      PROFILE &nbsp; UPDATE\n    </Typography>\n  </Box>\n);\n\nexport default AccountProfilePageTitle;\n","import { green } from '@material-ui/core/colors';\r\n\r\nconst loadButtonStyles = {\r\n  wrapper: {\r\n    // margin: 1,\r\n    position: 'relative',\r\n  },\r\n  buttonSuccess: (status) => ({\r\n    backgroundColor: status && green[500],\r\n    '&:hover': {\r\n      backgroundColor: status && green[700],\r\n    }\r\n  }),\r\n  buttonProgress: {\r\n    color: '#2196F3',\r\n    position: 'absolute',\r\n    top: '20%',\r\n    left: '40%',\r\n    // marginTop: -12,\r\n    // marginLeft: -12,\r\n  },\r\n};\r\n\r\nexport default loadButtonStyles;\r\n","const customStyles = (theme) => ({\r\n  container: {\r\n    background: theme.palette.background.paper,\r\n    borderRadius: theme.shape.borderRadius\r\n  },\r\n  alignCenter: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(4, 1, 6),\r\n  },\r\n  logo: {\r\n    marginBottom: theme.spacing(3),\r\n    height: theme.spacing(6),\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(5.5),\r\n  },\r\n  submit: {\r\n    marginTop: theme.spacing(6),\r\n  },\r\n});\r\n\r\nexport default customStyles;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nexport function useForm(initialValues) {\r\n  const [values, setValues] = useState(initialValues);\r\n  const [formErrors, setFormErrors] = useState({});\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setValues({\r\n      ...values,\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setValues(initialValues);\r\n    setFormErrors({});\r\n  };\r\n\r\n  return {\r\n    values,\r\n    setValues,\r\n    formErrors,\r\n    setFormErrors,\r\n    handleInputChange,\r\n    resetForm\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& .MuiFormControl-root': {\r\n    //   width: '80%',\r\n      margin: theme.spacing(1)\r\n    }\r\n  }\r\n}));\r\n\r\nexport function Form(props) {\r\n  const classes = useStyles();\r\n  const { children, ...other } = props;\r\n  return (\r\n    <form className={classes.root} autoComplete=\"off\" noValidate {...other}>\r\n      {children}\r\n    </form>\r\n  );\r\n}\r\n\r\nForm.propTypes = {\r\n  children: PropTypes.any\r\n};\r\n","import axios from 'axios';\r\nimport sha1 from 'sha1';\r\nimport { GET_ERRORS } from './types';\r\n\r\nconst uploadImage = (file, dir, setLoading) => async (dispatch) => {\r\n  let res;\r\n  try {\r\n    const apiKey = process.env.REACT_APP_API_KEY;\r\n    const secret = process.env.REACT_APP_SECRET;\r\n    const publicId = `${dir}`;\r\n    const timestamp = Date.now();\r\n    const uploadPreset = 'languagelearningBlog';\r\n    const paramsStr = `public_id=${publicId}&timestamp=${timestamp}&upload_preset=${uploadPreset}`;\r\n    const signature = sha1(paramsStr + secret);\r\n    const data = new FormData();\r\n\r\n    data.append('api_key', apiKey);\r\n    data.append('file', file);\r\n    data.append('upload_preset', uploadPreset);\r\n    data.append('public_id', publicId);\r\n    data.append('timestamp', timestamp);\r\n    data.append('signature', signature);\r\n\r\n    // fix to cloudinary not allowing app Authourization in request header\r\n    const instance = axios.create();\r\n    delete instance.defaults.headers.common.Authorization;\r\n\r\n    res = await instance.post('https://api.cloudinary.com/v1_1/xclusivedev/image/upload', data);\r\n\r\n    if (setLoading) setLoading(false);\r\n    console.log(res);\r\n    // dispatch({\r\n    //   type: UPLOAD_IMAGE,\r\n    //   payload: res.data.secure_url\r\n    // });\r\n  } catch (error) {\r\n    if (setLoading) setLoading(false);\r\n    dispatch({\r\n      type: GET_ERRORS, // later change this to GET_ALERT type\r\n      payload: error.response\r\n    });\r\n    console.log(error.response.data.message);\r\n  }\r\n  return res.data.secure_url;\r\n};\r\n\r\nexport default uploadImage;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\r\nimport { CircularProgress, Fab } from '@material-ui/core';\r\nimport { connect } from 'react-redux';\r\nimport { green } from '@material-ui/core/colors';\r\nimport buttonStyles from './loadButtonStyles';\r\nimport uploadImage from '../../actions/imageUploadActions';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  input: {\r\n    display: 'none',\r\n  },\r\n  iconButton: {\r\n    // background: theme.palette.customWhite.shade50,\r\n    height: 20,\r\n    width: 35,\r\n  },\r\n  fabProgress: {\r\n    color: green[400],\r\n    position: 'absolute',\r\n    top: -11,\r\n    left: 5,\r\n    zIndex: 1,\r\n  },\r\n}));\r\n\r\nconst convertToImageDataParam = (name, value) => ({\r\n  target: { name, value }\r\n});\r\n\r\nfunction UploadImageButtons(props) {\r\n  const {\r\n    onChange, name, userId,\r\n  } = props;\r\n\r\n  const classes = useStyles();\r\n  const [loading, setLoading] = React.useState(false);\r\n\r\n  let imageURL;\r\n  const getImageURL = async (e) => {\r\n    console.log('getImageUrl func runned');\r\n    console.log('Files', e.target.files[0]);\r\n    if (!loading) {\r\n      setLoading(true);\r\n    }\r\n    const file = e.target.files[0];\r\n    const imageDir = `/users/avatars/user_${userId}`;\r\n    const responseURL = await props.uploadImage(file, imageDir, setLoading);\r\n    // console.log('res', responseURL);\r\n    imageURL = responseURL;\r\n    // console.log('Image Url', imageURL);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <label htmlFor=\"icon-button-file\">\r\n        <input\r\n          name={name}\r\n          accept=\"image/*\"\r\n          className={classes.input}\r\n          id=\"icon-button-file\"\r\n          type=\"file\"\r\n          onChange={\r\n            async (e) => {\r\n              await getImageURL(e);\r\n              onChange(convertToImageDataParam(name, imageURL));\r\n              // console.log('after On change', imageURL);\r\n            }\r\n            }\r\n        />\r\n        <div className={buttonStyles.wrapper}>\r\n          <Fab size=\"small\" className={{ ...classes.iconButton }} color=\"secondary\" aria-label=\"upload picture\" component=\"span\">\r\n\r\n            <PhotoCamera fontSize=\"small\" />\r\n          </Fab>\r\n          {loading && <CircularProgress size={43} className={classes.fabProgress} />}\r\n        </div>\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\n\r\nUploadImageButtons.propTypes = {\r\n  uploadImage: PropTypes.func.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  userId: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default connect(null, { uploadImage })(UploadImageButtons);\r\n","import axios from 'axios';\r\nimport {\r\n  GET_USER, GET_USERS, GET_ERRORS, SET_CURRENT_USER, DELETE_USER, GET_ALERT\r\n} from './types';\r\n\r\nexport const getUsers = () => async (dispatch) => {\r\n  const res = await axios.get('/api/users/all');\r\n  dispatch({\r\n    type: GET_USERS,\r\n    payload: res.data\r\n  });\r\n};\r\n\r\nexport const getUser = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/api/users/id/${id}`);\r\n    dispatch({\r\n      type: GET_USER,\r\n      payload: res.data\r\n    });\r\n  } catch (error) {\r\n    // Alert error\r\n    // navigate('/404');\r\n  }\r\n};\r\n\r\nexport const updateUser = (id, role, updateRequest, setLoading, setSuccess) => async (dispatch) => {\r\n  try {\r\n    await axios.patch(`/api/users/update/${id}`, updateRequest);\r\n    console.log('update successfull');\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n    setSuccess(true);\r\n    setLoading(false);\r\n    if (role === 'SUPER_ADMIN') {\r\n      window.location.href = '/app/manage/users';\r\n    } else {\r\n      window.location.href = '/app/account';\r\n    }\r\n  } catch (error) {\r\n    setLoading(false);\r\n    if (error.response.status === 401) {\r\n      dispatch({\r\n        type: SET_CURRENT_USER,\r\n        payload: {}\r\n      });\r\n      window.location.href = '/user/login';\r\n    } else {\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: error.response.data\r\n      });\r\n    }\r\n\r\n    console.log(error.response.data, error.response);\r\n  }\r\n};\r\n\r\nexport const deleteUser = (id) => async (dispatch) => {\r\n  try {\r\n    if (window.confirm('Are you sure you want to delete this user')) {\r\n      await axios.delete(`/api/users/id/${id}`);\r\n      dispatch({\r\n        type: DELETE_USER,\r\n        payload: id\r\n      });\r\n      dispatch({\r\n        type: GET_ALERT,\r\n        payload: { message: 'Deleted succesfully', type: 'success' }\r\n      });\r\n    }\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ERRORS, // later set ALERT\r\n      payload: error.response.data\r\n    });\r\n  }\r\n};\r\n","import { useState, useEffect } from 'react';\n// import { useNavigate } from 'react-router';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Badge,\n  Card,\n  CardContent,\n  CardHeader,\n  CircularProgress,\n  Container,\n  Grid, makeStyles,\n} from '@material-ui/core';\n\nimport { connect } from 'react-redux';\n\nimport buttonStyles from '../controls/loadButtonStyles';\nimport Controls from '../controls/Controls';\nimport customStyles from '../forms/LoginRegisterFormStyles';\nimport { useForm, Form } from '../forms/useForm';\nimport ImageUploadButton from '../controls/ImgUploadBtn';\nimport { getUser, updateUser } from '../../actions/userAction';\n\nconst useStyles = makeStyles((theme) => (customStyles(theme)));\nconst shadow = '-1px -1px 10px 2px rgba(0, 0, 0, 0.25)';\n\nconst button = {\n  root: {\n    padding: '13px 0',\n    boxShadow: '0 1px 4px 2px rgba(33, 159, 243, .3)',\n    //   background: 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)'\n  },\n};\n\nconst genderItems = [\n  { id: 'male', name: 'Male' },\n  { id: 'female', name: 'Female' },\n];\nconst initialValues = {\n  id: '',\n  firstName: '',\n  lastName: '',\n  username: '',\n  gender: genderItems[0].name,\n  phoneNumber: '',\n  avatarImg: '',\n  email: ''\n};\n\nconst AccountProfileDetails = (props) => {\n  const {\n    user, role, userId, errors\n  } = props;\n  const classes = useStyles();\n  const [loading, setLoading] = useState(false);\n  const [success, setSuccess] = useState(false);\n  // const navigate = useNavigate();\n\n  const {\n    values, setValues, formErrors, setFormErrors, handleInputChange,\n  } = useForm(initialValues);\n\n  useEffect(() => {\n    setFormErrors(errors);\n  }, [errors]);\n\n  useEffect(() => {\n    // values.id = userId;\n    props.getUser(userId);\n  }, [userId]);\n\n  useEffect(() => {\n    setValues({ ...values, ...user });\n  }, [user]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!loading) {\n      setSuccess(false);\n      setLoading(true);\n    }\n    const numberStr = values.phoneNumber;\n    values.phoneNumber = numberStr.replace(/-| /gi, '');\n    console.log(values.phoneNumber);\n    const updateRequest = {\n      id: values.id,\n      firstName: values.firstName,\n      lastName: values.lastName,\n      username: values.username,\n      gender: values.gender,\n      phoneNumber: values.phoneNumber,\n      roleName: values.roleName,\n      avatarImg: values.avatarImg,\n      email: values.email\n    };\n    props.updateUser(userId, role, updateRequest, setLoading, setSuccess);\n    // console.log(updateRequest);\n  };\n\n  const ProfilePic = () => (\n    <Badge badgeContent={<ImageUploadButton name=\"avatarImg\" userId={userId} onChange={handleInputChange} />} overlap=\"circular\" anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}>\n      <Avatar\n        alt={values.username}\n        src={values.avatarImg}\n        sx={{\n          height: 90,\n          width: 90,\n        }}\n      />\n    </Badge>\n  );\n\n  return (\n    <Form className={classes.form} onSubmit={handleSubmit} sx={{ px: 4, }}>\n      <Card sx={{\n        px: 2, pt: 10, boxShadow: `${shadow}`, position: 'relative', overflow: 'inherit'\n      }}\n      >\n        <Container\n          sx={{\n            position: 'absolute',\n            left: 0,\n            top: -40,\n            width: '100%',\n            display: 'flex',\n            placeContent: 'center',\n            margin: 'auto'\n          }}\n        >\n          <ProfilePic />\n        </Container>\n\n        <CardHeader />\n        <CardContent>\n          <Grid sx={{ display: 'none' }}>\n            <Controls.Input\n              required\n              disabled\n              name=\"userId\"\n              id=\"userId\"\n              label=\"userId\"\n              type=\"hidden\"\n              value={`${values.id}`}\n            />\n          </Grid>\n          <Grid\n            container\n            spacing={4}\n          >\n            <Grid item xs={12} md={6}>\n              <Controls.Input\n                autoFocus\n                required\n                disabled\n                variant=\"filled\"\n                name=\"firstName\"\n                id=\"firstName\"\n                label=\"First Name\"\n                autoComplete=\"fname\"\n                error={formErrors.firstName}\n                value={values.firstName}\n                onChange={handleInputChange}\n              />\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <Controls.Input\n                disabled\n                variant=\"filled\"\n                name=\"lastName\"\n                id=\"lastName\"\n                label=\"Last Name\"\n                autoComplete=\"lname\"\n                error={formErrors.lastName}\n                value={values.lastName}\n                onChange={handleInputChange}\n              />\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <Controls.Input\n                required\n                name=\"username\"\n                id=\"username\"\n                label=\"Username\"\n                autoComplete=\"uname\"\n                error={formErrors.username}\n                value={values.username}\n                onChange={handleInputChange}\n              />\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <Controls.Select\n                required\n                disabled\n                name=\"gender\"\n                label=\"Gender\"\n                value={values.gender}\n                options={genderItems}\n                onChange={handleInputChange}\n                error={formErrors.gender}\n              />\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <Controls.Input\n                required\n                name=\"email\"\n                id=\"email\"\n                label=\"Email Address\"\n                autoComplete=\"email\"\n                error={formErrors.email}\n                value={values.email}\n                onChange={handleInputChange}\n              />\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <Controls.PhoneInput\n                value={values.phoneNumber}\n                onChange={handleInputChange}\n                error={formErrors.phoneNumber}\n              />\n            </Grid>\n            {/* <Grid item xs={12}>\n              <Controls.Input\n                required\n                name=\"password\"\n                id=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                error={formErrors.password}\n                value={values.password}\n                onChange={handleInputChange}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <Controls.Input\n                required\n                name=\"confirmPassword\"\n                id=\"confirmPassword\"\n                label=\"Confirm Password\"\n                type=\"password\"\n                error={formErrors.confirmPassword}\n                value={values.confirmPassword}\n                onChange={handleInputChange}\n              />\n            </Grid> */}\n\n            <Grid container item xs={12}>\n              <Grid container sx={{ ...buttonStyles.wrapper, my: 4 }}>\n                <Controls.Buttons.Button\n                  sx={{ ...button.root, ...buttonStyles.buttonSuccess(success) }}\n                  text=\"UPDATE\"\n                  marginY={6}\n                  paddingY={1.5}\n                  fullWidth\n                  size=\"large\"\n                  type=\"submit\"\n                  disabled={loading}\n                />\n                {loading && <CircularProgress size={25} sx={buttonStyles.buttonProgress} />}\n              </Grid>\n            </Grid>\n          </Grid>\n        </CardContent>\n      </Card>\n    </Form>\n  );\n};\n\nAccountProfileDetails.propTypes = {\n  getUser: PropTypes.func.isRequired, // gets a single post\n  updateUser: PropTypes.func.isRequired,\n  userId: PropTypes.string.isRequired,\n  role: PropTypes.string.isRequired,\n  user: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n  userId: state.security.user.id,\n  role: state.security.user.roleName,\n  user: state.user.user,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, { getUser, updateUser })(AccountProfileDetails);\n","import { Helmet } from 'react-helmet';\nimport {\n  Box,\n  Container,\n  Grid\n} from '@material-ui/core';\nimport AccountProfilePageTitle from 'src/components/account/AccountProfilePgTitle';\nimport AccountProfileDetails from 'src/components/account/AccountProfileDetails';\n\nconst Account = () => (\n  <>\n    <Helmet>\n      <title>Profile | Language Learning Blog</title>\n    </Helmet>\n    <Box\n      sx={{\n        backgroundColor: 'background.default',\n        minHeight: '100%',\n        py: 6\n      }}\n    >\n      <Container maxWidth=\"md\">\n        <Grid\n          container\n          spacing={5}\n          direction=\"column\"\n          justify=\"center\"\n          alignItems=\"center\"\n        >\n          <Grid\n            item\n            // lg={12}\n            // md={6}\n            // xs={12}\n          >\n            <AccountProfilePageTitle />\n          </Grid>\n          <Grid\n            item\n            // lg={12}\n            // md={6}\n            // xs={12}\n          >\n            <AccountProfileDetails />\n          </Grid>\n        </Grid>\n      </Container>\n    </Box>\n  </>\n);\n\nexport default Account;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n  Avatar,\n  Box,\n  Card,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Typography,\n  IconButton\n} from '@material-ui/core';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { deleteUser } from '../../actions/userAction';\n\nconst userListResults = (props) => {\n  const { users, searchText } = props;\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [page, setPage] = useState(0);\n\n  const handleLimitChange = (event) => {\n    setRowsPerPage(event.target.value);\n  };\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const onDeleteClick = (id) => {\n    props.deleteUser(id);\n  };\n\n  return (\n    <Card>\n      <PerfectScrollbar>\n        <Box sx={{ minWidth: 1050 }}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>\n                  Name\n                </TableCell>\n                <TableCell>\n                  Email\n                </TableCell>\n                <TableCell>\n                  Role\n                </TableCell>\n                <TableCell>\n                  Registration date\n                </TableCell>\n                <TableCell align=\"center\">\n                  Actions\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {users\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((user) => (\n                  (user.email.toLowerCase().includes(searchText.toLowerCase())\n                    || user.username.toLowerCase().includes(searchText.toLowerCase())\n                    || user.roleName.toLowerCase().includes(searchText.toLowerCase())\n                  )\n                    && (\n                    <TableRow\n                      hover\n                      key={user.id}\n                    >\n                      <TableCell>\n                        <Box\n                          sx={{\n                            alignItems: 'center',\n                            display: 'flex'\n                          }}\n                        >\n                          <Avatar\n                            alt={user.firstName}\n                            src={user.avatarImg}\n                            sx={{ mr: 2 }}\n                          />\n                          <Typography\n                            color=\"textPrimary\"\n                            variant=\"body1\"\n                          >\n                            {user.fullName}\n                          </Typography>\n                        </Box>\n                      </TableCell>\n                      <TableCell>\n                        {user.email}\n                      </TableCell>\n                      <TableCell>\n                        {user.roleName}\n                      </TableCell>\n                      <TableCell>\n                        {moment(user.registered_At).format('DD/MM/YYYY')}\n                      </TableCell>\n                      <TableCell align=\"center\">\n                        <Link to={`/app/manage/users/updateUser/${user.id}`}>\n                          <IconButton style={{ marginRight: 3 }}>\n                            <EditIcon color=\"secondary\" />\n                          </IconButton>\n                        </Link>\n\n                        <IconButton style={{ marginLeft: 3 }} onClick={() => onDeleteClick(user.id)}>\n                          <DeleteIcon color=\"error\" />\n                        </IconButton>\n                      </TableCell>\n                    </TableRow>\n                    )\n                ))}\n            </TableBody>\n          </Table>\n        </Box>\n      </PerfectScrollbar>\n      <TablePagination\n        component=\"div\"\n        count={users.length}\n        onPageChange={handlePageChange}\n        onRowsPerPageChange={handleLimitChange}\n        page={page}\n        rowsPerPage={rowsPerPage}\n        rowsPerPageOptions={[5, 10, 25]}\n      />\n    </Card>\n  );\n};\n\nuserListResults.propTypes = {\n  deleteUser: PropTypes.func.isRequired,\n  users: PropTypes.array.isRequired,\n  searchText: PropTypes.string.isRequired,\n};\n\nexport default connect(null, { deleteUser })(userListResults);\n","import {\n  Box,\n} from '@material-ui/core';\nimport PropTypes from 'prop-types';\n// import { Search as SearchIcon } from 'react-feather';\nimport Controls from '../controls/Controls';\n\nconst UserListToolbar = ({\n  searchText, setSearchText, ...otherProps\n}) => (\n  <Box {...otherProps}>\n    <Box\n      sx={{\n        display: 'flex',\n        justifyContent: 'flex-end'\n      }}\n    >\n      <Controls.Buttons.CreateButton\n        href=\"/app/manage/users/adduser\"\n        text=\"ADD NEW USER\"\n      />\n    </Box>\n    <Box sx={{ mt: 3 }}>\n      <Controls.SearchBar\n        placeholder=\"Search user\"\n        searchText={searchText}\n        setSearchText={setSearchText}\n      />\n    </Box>\n  </Box>\n);\n\nUserListToolbar.propTypes = {\n  searchText: PropTypes.string.isRequired,\n  setSearchText: PropTypes.func.isRequired,\n};\n\nexport default UserListToolbar;\n","import { GET_ALERT } from '../actions/types';\r\n\r\nconst initialState = {\r\n  message: '',\r\n  type: '',\r\n};\r\n\r\nexport default function alertReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ALERT:\r\n      return {\r\n        ...state,\r\n        message: action.payload.message,\r\n        type: action.payload.type\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { DELETE_CATEGORY, GET_CATEGORIES, GET_CATEGORY } from 'src/actions/types';\r\n\r\nconst initialState = {\r\n  category: {},\r\n  categories: [],\r\n  totalCount: 0\r\n};\r\n\r\nexport default function categoryReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_CATEGORIES:\r\n      return {\r\n        ...state,\r\n        categories: action.payload,\r\n        totalCount: state.categories.length\r\n      };\r\n    case GET_CATEGORY:\r\n      return {\r\n        ...state,\r\n        category: action.payload\r\n      };\r\n    case DELETE_CATEGORY:\r\n      return {\r\n        ...state,\r\n        categories: state.categories.filter((category) => category.id !== action.payload)\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { GET_COMMENTS } from 'src/actions/types';\r\n\r\nconst initialState = {\r\n  comments: [],\r\n  comment: {},\r\n};\r\n\r\nexport default function commentReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_COMMENTS:\r\n      return {\r\n        ...state,\r\n        comments: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { GET_ERRORS } from '../actions/types';\r\n\r\nconst initialState = {};\r\n\r\nexport default function errorReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return action.payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { GET_LIKES } from 'src/actions/types';\r\n\r\nconst initialState = {\r\n  likes: [],\r\n  like: {},\r\n  totalCount: 0\r\n};\r\n\r\nexport default function likeReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_LIKES:\r\n      return {\r\n        ...state,\r\n        likes: action.payload,\r\n        totalCount: action.payload.length\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  GET_POST, GET_FILTERED_POSTS, DELETE_POST, GET_ALL_POSTS, GET_USER_POSTS, GET_RELATED_POSTS\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  posts: [],\r\n  post: {},\r\n  relatedPosts: [],\r\n  totalCount: 0\r\n};\r\n\r\nexport default function postReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ALL_POSTS:\r\n      return {\r\n        ...state,\r\n        posts: action.payload,\r\n        totalCount: state.posts.length\r\n      };\r\n\r\n    case GET_USER_POSTS:\r\n      return {\r\n        ...state,\r\n        posts: action.payload\r\n      };\r\n\r\n    case GET_FILTERED_POSTS:\r\n      return {\r\n        ...state,\r\n        posts: action.payload,\r\n        totalCount: state.posts.length\r\n      };\r\n\r\n    case GET_RELATED_POSTS:\r\n      return {\r\n        ...state,\r\n        relatedPosts: action.payload\r\n      };\r\n\r\n    case GET_POST:\r\n      return {\r\n        ...state,\r\n        post: action.payload\r\n      };\r\n\r\n    case DELETE_POST:\r\n      return {\r\n        ...state,\r\n        posts: state.posts.filter((post) => post.id !== action.payload)\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { GET_ROLES } from 'src/actions/types';\r\n\r\nconst initialState = {\r\n  roles: []\r\n};\r\n\r\nexport default function roleReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ROLES:\r\n      return {\r\n        ...state,\r\n        roles: action.payload\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { SET_CURRENT_USER } from '../actions/types';\r\n\r\nconst initialState = {\r\n  validToken: false,\r\n  user: {}\r\n};\r\n\r\n/* eslint no-else-return: \"off\" */\r\nconst booleanActionPayload = (payload) => {\r\n  if (payload) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\nexport default function securityReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_CURRENT_USER:\r\n      return {\r\n        ...state,\r\n        validToken: booleanActionPayload(action.payload),\r\n        user: action.payload\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { DELETE_USER, GET_USER, GET_USERS } from 'src/actions/types';\r\n\r\nconst initialState = {\r\n  users: [],\r\n  user: {},\r\n  totalCount: 0\r\n};\r\n\r\nexport default function userReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_USERS:\r\n      return {\r\n        ...state,\r\n        users: action.payload,\r\n        totalCount: state.users.length\r\n      };\r\n\r\n    case GET_USER:\r\n      return {\r\n        ...state,\r\n        user: action.payload\r\n      };\r\n\r\n    case DELETE_USER:\r\n      return {\r\n        ...state,\r\n        users: state.users.filter((user) => user.id !== action.payload)\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport alertReducer from './alertReducer';\r\nimport categoryReducer from './categoryReducer';\r\nimport commentReducer from './commentReducer';\r\nimport errorReducer from './errorReducer';\r\nimport likeReducer from './likeReducer';\r\nimport postReducer from './postReducer';\r\nimport roleReducer from './roleReducer';\r\n// import imageReducer from './imageReducer';\r\nimport securityReducer from './securityReducer';\r\nimport userReducer from './userReducer';\r\n\r\nexport default combineReducers({\r\n  errors: errorReducer,\r\n  alert: alertReducer,\r\n  post: postReducer,\r\n  // image: imageReducer,\r\n  security: securityReducer,\r\n  user: userReducer,\r\n  role: roleReducer,\r\n  category: categoryReducer,\r\n  comment: commentReducer,\r\n  like: likeReducer\r\n});\r\n","/* eslint no-underscore-dangle: 0 */\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\nlet newStore;\r\n\r\nconst actionSanitizer = (action) => (\r\n  action.type === 'GET_POST' && action.post\r\n    ? { ...action, post: '<<LONG_BLOB>>' } : action\r\n);\r\nconst reduxDevtoolsSanitizers = {\r\n  actionSanitizer,\r\n  stateSanitizer: (state) => (state.post ? { ...state, post: '<<LONG_BLOB>>' } : state)\r\n};\r\n\r\nconst ReactReduxDevTools = window.__REDUX_DEVTOOLS_EXTENSION__\r\n                              && window.__REDUX_DEVTOOLS_EXTENSION__(reduxDevtoolsSanitizers);\r\n\r\n//  wrong way of creating a store, it always resets the store when your app page changes because it is always called at the <Provider></Provider>\r\n// const store = () => {\r\n//   console.log('Store.js');\r\n//   if (window.navigator.userAgent.includes('Chrome')) {\r\n//     return (\r\n//       createStore(\r\n//         rootReducer,\r\n//         initialState,\r\n//         compose(\r\n//           applyMiddleware(...middleware),\r\n//           window.__REDUX_DEVTOOLS_EXTENSION__\r\n//           && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n//         )\r\n//       ));\r\n//   }\r\n//   return (\r\n//     createStore(rootReducer, initialState, compose(applyMiddleware(...middleware)))\r\n//   );\r\n// };\r\n\r\nif (window.navigator.userAgent.includes('Chrome') && ReactReduxDevTools) {\r\n  console.log('ChromeStore');\r\n  newStore = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(\r\n      applyMiddleware(...middleware),\r\n      ReactReduxDevTools\r\n    )\r\n  );\r\n} else {\r\n  newStore = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(applyMiddleware(...middleware))\r\n  );\r\n}\r\n\r\nconst store = newStore;\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\n// import MuiAlert from '@material-ui/lab/Alert';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Alert } from '@material-ui/core';\r\nimport store from 'src/store';\r\nimport { GET_ALERT } from 'src/actions/types';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\n// function Alert(props) {\r\n//   return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n// }\r\n\r\nexport default function SnackBarAlert({\r\n  alertOpen, setAlertOpen, severity, message\r\n}) {\r\n  const classes = useStyles();\r\n  // const [isOpen, setIsOpen] = useState(false);\r\n\r\n  //   const handleClick = () => {\r\n  //     setOpen(true);\r\n  //   };\r\n\r\n  console.log(alertOpen);\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setAlertOpen(false);\r\n    store.dispatch({\r\n      type: GET_ALERT,\r\n      payload: { message: '', type: '' }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* <Button variant=\"outlined\" onClick={handleClick}>\r\n        Open success snackbar\r\n      </Button> */}\r\n      <Snackbar anchorOrigin={{ vertical: 'top', horizontal: 'center' }} open={alertOpen} autoHideDuration={3000} onClose={handleClose}>\r\n        <Alert elevation={6} variant=\"filled\" onClose={handleClose} severity={severity}>\r\n          {message}\r\n        </Alert>\r\n      </Snackbar>\r\n      {/* <Alert severity=\"error\">This is an error message!</Alert>\r\n      <Alert severity=\"warning\">This is a warning message!</Alert>\r\n      <Alert severity=\"info\">This is an information message!</Alert>\r\n      <Alert severity=\"success\">This is a success message!</Alert> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nSnackBarAlert.propTypes = {\r\n  alertOpen: PropTypes.bool.isRequired,\r\n  setAlertOpen: PropTypes.func.isRequired,\r\n  severity: PropTypes.string.isRequired,\r\n  message: PropTypes.string.isRequired,\r\n};\r\n","import { useEffect, useState } from 'react';\nimport { Helmet } from 'react-helmet';\nimport PropTypes from 'prop-types';\nimport { Box, Container } from '@material-ui/core';\nimport UserListResults from 'src/components/users/UserListResults';\nimport UserListToolbar from 'src/components/users/UserListToolbar';\n// import users from 'src/__mocks__/users';\nimport { connect } from 'react-redux';\nimport SnackBarAlert from 'src/components/SnacKBarAlert';\nimport { getUsers } from '../actions/userAction';\n\nconst UserList = (props) => {\n  const { alert, users } = props;\n  const [searchText, setSearchText] = useState('');\n  const [alertOpen, setAlertOpen] = useState(false);\n\n  useEffect(() => {\n    props.getUsers();\n  }, [getUsers]);\n\n  useEffect(() => {\n    if (alert.message !== '') setAlertOpen(true);\n  }, [alert]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Users | Language Learning Blog</title>\n      </Helmet>\n      {\n        alert && (\n          <SnackBarAlert\n            severity={alert.type}\n            alertOpen={alertOpen}\n            setAlertOpen={setAlertOpen}\n            message={alert.message}\n          />\n        )\n        }\n\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          minHeight: '100%',\n          py: 3\n        }}\n      >\n        <Container maxWidth={false}>\n          <UserListToolbar\n            searchText={searchText}\n            setSearchText={setSearchText}\n          />\n          <Box sx={{ pt: 3 }}>\n            <UserListResults users={users} searchText={searchText} />\n          </Box>\n        </Container>\n      </Box>\n    </>\n  );\n};\n\nUserList.propTypes = {\n  getUsers: PropTypes.func.isRequired,\n  users: PropTypes.array.isRequired,\n  alert: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n  users: state.user.users,\n  alert: state.alert\n});\n\nexport default connect(mapStateToProps, { getUsers })(UserList);\n","import {\r\n  Avatar,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst CountCard = (props) => {\r\n  const {\r\n    name, totalNumber, icon, backgroundColor, ...rest\r\n  } = props;\r\n  return (\r\n    <Card\r\n      sx={{ height: '100%' }}\r\n      {...rest}\r\n    >\r\n      <CardContent>\r\n        <Grid\r\n          container\r\n          spacing={3}\r\n          sx={{ justifyContent: 'flex-start' }}\r\n        >\r\n          <Grid item>\r\n            <Avatar\r\n              sx={{\r\n                backgroundColor: { backgroundColor },\r\n                height: 56,\r\n                width: 56\r\n              }}\r\n            >\r\n              {icon}\r\n            </Avatar>\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography\r\n              color=\"textPrimary\"\r\n              gutterBottom\r\n              variant=\"h1\"\r\n            >\r\n              {totalNumber}\r\n            </Typography>\r\n            <Typography\r\n              color=\"textSecondary\"\r\n              gutterBottom\r\n              variant=\"body2\"\r\n            >\r\n              {name}\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nCountCard.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  totalNumber: PropTypes.string.isRequired,\r\n  icon: PropTypes.any.isRequired,\r\n  backgroundColor: PropTypes.any.isRequired\r\n};\r\n\r\nexport default CountCard;\r\n","import CollectionsBookmarkOutlinedIcon from '@material-ui/icons/CollectionsBookmarkOutlined';\nimport { orange } from '@material-ui/core/colors';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { useEffect } from 'react';\nimport { getCategories } from 'src/actions/categoryAction';\nimport CounterCard from './CounterCard';\n\nconst TotalCategories = (props) => {\n  const { totalCount } = props;\n\n  useEffect(() => {\n    props.getCategories();\n  }, [totalCount]);\n\n  return (\n    <>\n      <CounterCard\n        name=\"CATEGORIES\"\n        totalNumber={`${totalCount}`}\n        icon={<CollectionsBookmarkOutlinedIcon />}\n        backgroundColor={orange[700]}\n      />\n    </>\n  );\n};\n\nTotalCategories.propTypes = {\n  getCategories: PropTypes.func.isRequired,\n  totalCount: PropTypes.number.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n  totalCount: state.category.totalCount\n});\n\nexport default connect(mapStateToProps, { getCategories })(TotalCategories);\n","import moment from 'moment';\n// import { v4 as uuid } from 'uuid';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport PropTypes from 'prop-types';\nimport {\n  Box,\n  Button,\n  Card,\n  CardHeader,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  TableSortLabel,\n  Tooltip\n} from '@material-ui/core';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\nimport { connect } from 'react-redux';\nimport { useEffect } from 'react';\nimport { getUsers } from '../../actions/userAction';\n\nconst LatestUsers = (props) => {\n  const { users } = props;\n\n  useEffect(() => {\n    props.getUsers();\n  }, [getUsers]);\n\n  return (\n    <Card>\n      <CardHeader title=\"Latest Users\" />\n      <Divider />\n      <PerfectScrollbar>\n        <Box sx={{ minWidth: 800 }}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>\n                  User Id\n                </TableCell>\n                <TableCell>\n                  Name\n                </TableCell>\n                <TableCell sortDirection=\"desc\">\n                  <Tooltip\n                    enterDelay={300}\n                    title=\"Sort\"\n                  >\n                    <TableSortLabel\n                      active\n                      direction=\"desc\"\n                    >\n                      Date\n                    </TableSortLabel>\n                  </Tooltip>\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {users.map((user) => (\n                <TableRow\n                  hover\n                  key={user.id}\n                >\n                  <TableCell>\n                    {user.id}\n                  </TableCell>\n                  <TableCell>\n                    {user.fullName}\n                  </TableCell>\n                  <TableCell>\n                    {moment(user.createdAt).format('DD/MM/YYYY')}\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </Box>\n      </PerfectScrollbar>\n      <Box\n        sx={{\n          display: 'flex',\n          justifyContent: 'flex-end',\n          p: 2\n        }}\n      >\n        <Button\n          href=\"/app/manage/users\"\n          color=\"primary\"\n          endIcon={<ArrowRightIcon />}\n          size=\"small\"\n          variant=\"text\"\n        >\n          View all\n        </Button>\n      </Box>\n    </Card>\n  );\n};\nLatestUsers.propTypes = {\n  getUsers: PropTypes.func.isRequired,\n  users: PropTypes.array.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n  users: state.user.users\n});\n\nexport default connect(mapStateToProps, { getUsers })(LatestUsers);\n","import axios from 'axios';\r\nimport {\r\n  GET_ERRORS,\r\n  GET_FILTERED_POSTS,\r\n  GET_POST, DELETE_POST,\r\n  GET_USER_POSTS,\r\n  GET_ALL_POSTS,\r\n  GET_RELATED_POSTS,\r\n  GET_ALERT\r\n} from './types';\r\n\r\nexport const createPost = (postData, navigate, setLoading, setSuccess) => async (dispatch) => {\r\n  try {\r\n    await axios.post('/api/posts', postData);\r\n    setSuccess(true);\r\n    setLoading(false);\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n    navigate('/app/admin/posts/myPosts');\r\n    // history.push('/home');\r\n  } catch (error) {\r\n    if (setLoading) setLoading(false);\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: error.response.data\r\n    });\r\n    console.log(error.response.data, error.message);\r\n  }\r\n};\r\n\r\nexport const getAllPosts = () => async (dispatch) => {\r\n  const res = await axios.get('/api/posts/all');\r\n  dispatch({\r\n    type: GET_ALL_POSTS,\r\n    payload: res.data\r\n  });\r\n//   console.log(res.data);\r\n};\r\n\r\nexport const getUserPosts = () => async (dispatch) => {\r\n  const res = await axios.get('/api/posts/all/user');\r\n  dispatch({\r\n    type: GET_USER_POSTS,\r\n    payload: res.data\r\n  });\r\n//   console.log(res.data);\r\n};\r\n\r\nexport const getAllFilteredPosts = () => async (dispatch) => {\r\n  const res = await axios.get('/api/posts/all-filtered');\r\n  dispatch({\r\n    type: GET_FILTERED_POSTS,\r\n    payload: res.data\r\n  });\r\n//   console.log(res.data);\r\n};\r\n\r\nexport const getRelatedPosts = (id, categoryName) => async (dispatch) => {\r\n  const res = await axios.get(`/api/posts/all/${id}/${categoryName}`);\r\n  dispatch({\r\n    type: GET_RELATED_POSTS,\r\n    payload: res.data\r\n  });\r\n//   console.log(res.data);\r\n};\r\n\r\nexport const getPost = (id, navigate) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/api/posts/id/${id}`);\r\n    dispatch({\r\n      type: GET_POST,\r\n      payload: res.data\r\n    });\r\n  } catch (error) {\r\n    navigate('/404');\r\n  }\r\n};\r\n\r\nexport const deletePost = (id) => async (dispatch) => {\r\n  if (window.confirm('Are you sure you want to delete this post')) {\r\n    await axios.delete(`/api/posts/id/${id}`);\r\n    dispatch({\r\n      type: DELETE_POST,\r\n      payload: id\r\n    });\r\n    dispatch({\r\n      type: GET_ALERT,\r\n      payload: { message: 'Deleted succesfully', type: 'success' }\r\n    });\r\n  }\r\n};\r\n","// import { v4 as uuid } from 'uuid';\n// import moment from 'moment';\nimport PropTypes from 'prop-types';\nimport {\n  Box,\n  Button,\n  Card,\n  CardHeader,\n  Divider,\n  // IconButton,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText\n} from '@material-ui/core';\n// import MoreVertIcon from '@material-ui/icons/MoreVert';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\nimport { connect } from 'react-redux';\nimport { useEffect } from 'react';\nimport { getAllFilteredPosts } from '../../actions/postActions';\n\nconst LatestPosts = (props) => {\n  const { posts, cardStyle } = props;\n\n  useEffect(() => {\n    props.getAllFilteredPosts();\n  }, [getAllFilteredPosts]);\n\n  return (\n    <Card {...cardStyle}>\n      <CardHeader\n        subtitle={`${posts.length} in total`}\n        title=\"Latest Posts\"\n      />\n      <Divider />\n      <List>\n        {posts.map((post, i) => (\n          <ListItem\n            divider={i < posts.length - 1}\n            key={post.id}\n          >\n            <ListItemAvatar>\n              <img\n                alt={post.title}\n                src={post.coverImage}\n                style={{\n                  height: 48,\n                  width: 48\n                }}\n              />\n            </ListItemAvatar>\n            <ListItemText\n              primary={post.title}\n              secondary={post.updatedAt ? `Updated ${post.updatedAt}` : ''}\n            />\n            {/* <IconButton\n              edge=\"end\"\n              size=\"small\"\n            >\n              <MoreVertIcon />\n            </IconButton> */}\n          </ListItem>\n        ))}\n      </List>\n      <Divider />\n      <Box\n        sx={{\n          display: 'flex',\n          justifyContent: 'flex-end',\n          p: 2\n        }}\n      >\n        <Button\n          href=\"/app/manage/posts\"\n          color=\"primary\"\n          endIcon={<ArrowRightIcon />}\n          size=\"small\"\n          variant=\"text\"\n        >\n          View all\n        </Button>\n      </Box>\n    </Card>\n  );\n};\nLatestPosts.propTypes = {\n  getAllFilteredPosts: PropTypes.func.isRequired,\n  posts: PropTypes.array.isRequired,\n  cardStyle: PropTypes.any,\n};\n\nconst mapStateToProps = (state) => ({\n  posts: state.post.posts\n});\n\nexport default connect(mapStateToProps, { getAllFilteredPosts })(LatestPosts);\n","import { indigo } from '@material-ui/core/colors';\nimport BorderColorIcon from '@material-ui/icons/BorderColor';\nimport PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { getAllFilteredPosts } from 'src/actions/postActions';\nimport CounterCard from './CounterCard';\n\nconst TotalPosts = (props) => {\n  const { totalCount } = props;\n\n  useEffect(() => {\n    props.getAllFilteredPosts();\n  }, [totalCount]);\n\n  return (\n    <>\n      <CounterCard\n        name=\"TOTAL POSTS\"\n        totalNumber={`${totalCount}`}\n        icon={<BorderColorIcon />}\n        backgroundColor={indigo[700]}\n      />\n    </>\n  );\n};\n\nTotalPosts.propTypes = {\n  getAllFilteredPosts: PropTypes.func.isRequired,\n  totalCount: PropTypes.number.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n  totalCount: state.post.totalCount\n});\n\nexport default connect(mapStateToProps, { getAllFilteredPosts })(TotalPosts);\n","import { green } from '@material-ui/core/colors';\nimport PeopleIcon from '@material-ui/icons/PeopleOutlined';\nimport PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { getUsers } from 'src/actions/userAction';\nimport CounterCard from './CounterCard';\n\nconst TotalUsers = (props) => {\n  const { totalCount } = props;\n\n  useEffect(() => {\n    props.getUsers();\n  }, [totalCount]);\n\n  return (\n    <>\n      <CounterCard\n        name=\"USERS\"\n        totalNumber={`${totalCount}`}\n        icon={<PeopleIcon />}\n        backgroundColor={green[700]}\n      />\n    </>\n  );\n};\n\nTotalUsers.propTypes = {\n  getUsers: PropTypes.func.isRequired,\n  totalCount: PropTypes.number.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n  totalCount: state.user.totalCount\n});\n\nexport default connect(mapStateToProps, { getUsers })(TotalUsers);\n","import { red } from '@material-ui/core/colors';\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\nimport PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { getLikes } from 'src/actions/likeAction';\nimport CounterCard from './CounterCard';\n\nconst TotalLikes = (props) => {\n  const { totalCount } = props;\n\n  useEffect(() => {\n    (async () => {\n      await props.getLikes();\n    })();\n  }, [totalCount]);\n\n  return (\n    <>\n      <CounterCard\n        name=\"TOTAL LIKES\"\n        totalNumber={`${totalCount}`}\n        icon={<ThumbUpAltIcon />}\n        backgroundColor={red[700]}\n      />\n    </>\n  );\n};\n\nTotalLikes.propTypes = {\n  getLikes: PropTypes.func.isRequired,\n  totalCount: PropTypes.number.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n  totalCount: state.like.totalCount\n});\n\nexport default connect(mapStateToProps, { getLikes })(TotalLikes);\n","import axios from 'axios';\r\nimport { GET_LIKES, GET_ERRORS } from './types';\r\n\r\nexport const likePost = (postId, likeData, navigate, setIsLiked) => async (dispatch) => {\r\n  try {\r\n    await axios.post(`/api/post/${postId}/like`, likeData);\r\n    // navigate(`/article/${postId}`);\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n    // window.location.href = `/article/${postId}`;\r\n    setIsLiked(true);\r\n    // history.push('/home');\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: error.response.data\r\n    });\r\n    navigate(`/article/${postId}`);\r\n    console.log(error.response.data, error.message);\r\n  }\r\n};\r\n\r\nexport const getLikes = () => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get('/api/post/likes/all');\r\n    dispatch({\r\n      type: GET_LIKES,\r\n      payload: res.data\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: error.response.data\r\n    });\r\n    console.log(error.response.data, error.message);\r\n  }\r\n};\r\n\r\nexport const deleteLike = (postId, navigate, setIsLiked) => async (dispatch) => {\r\n  try {\r\n    await axios.delete(`/api/post/${postId}/unlike`);\r\n    // window.location.href = `/article/${postId}`;\r\n    setIsLiked(false);\r\n    // dispatch({\r\n    //   type: DELETE_LIKE,\r\n    //   payload: false\r\n    // });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ERRORS, // later set ALERT\r\n      payload: error.response.data\r\n    });\r\n    navigate(`/article/${postId}`);\r\n    console.log(error.response.data, error.message);\r\n  }\r\n};\r\n","import { Helmet } from 'react-helmet';\nimport {\n  Box,\n  Container,\n  Grid\n} from '@material-ui/core';\nimport TotalCategories from 'src/components/dashboard/TotalCategories';\nimport LatestUsers from 'src/components/dashboard/LatestUsers';\nimport LatestPosts from 'src/components/dashboard/LatestPosts';\nimport TotalPost from 'src/components/dashboard/TotalPost';\nimport TotalUsers from 'src/components/dashboard/TotalUsers';\nimport TotalLikes from 'src/components/dashboard/TotalLikes';\n\nconst Dashboard = () => (\n  <>\n    <Helmet>\n      <title>Dashboard | Language Learning Blog</title>\n    </Helmet>\n    <Box\n      sx={{\n        backgroundColor: 'background.default',\n        minHeight: '100%',\n        py: 3\n      }}\n    >\n      <Container maxWidth={false}>\n        <Grid\n          container\n          spacing={3}\n        >\n          <Grid\n            item\n            lg={3}\n            md={3}\n            sm={6}\n            xl={3}\n            xs={6}\n          >\n            <TotalUsers />\n          </Grid>\n          <Grid\n            item\n            lg={3}\n            md={3}\n            sm={6}\n            xl={3}\n            xs={6}\n          >\n            <TotalPost />\n          </Grid>\n          <Grid\n            item\n            lg={3}\n            md={3}\n            sm={6}\n            xl={3}\n            xs={6}\n          >\n            <TotalCategories />\n          </Grid>\n          <Grid\n            item\n            lg={3}\n            md={3}\n            sm={6}\n            xl={3}\n            xs={6}\n          >\n            <TotalLikes sx={{ height: '100%' }} />\n          </Grid>\n          <Grid\n            item\n            lg={4}\n            md={6}\n            xl={3}\n            xs={12}\n          >\n            <LatestPosts sx={{ height: '100%' }} />\n          </Grid>\n          <Grid\n            item\n            lg={8}\n            md={6}\n            xl={9}\n            xs={12}\n          >\n            <LatestUsers />\n          </Grid>\n        </Grid>\n      </Container>\n    </Box>\n  </>\n);\n\nexport default Dashboard;\n","import React, { useEffect } from 'react';\r\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\r\nimport { Helmet } from 'react-helmet';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport Logo from '../Logo';\r\nimport Controls from '../controls/Controls';\r\nimport customStyles from './LoginRegisterFormStyles';\r\nimport { useForm, Form } from './useForm';\r\nimport { login, clearErrors } from '../../actions/securityActions';\r\n\r\nconst useStyles = makeStyles((theme) => (customStyles(theme)));\r\n\r\nconst initialValues = {\r\n  username: '',\r\n  password: ''\r\n};\r\n\r\nconst LoginForm = (props) => {\r\n  const { errors, security } = props;\r\n  const navigate = useNavigate();\r\n  const classes = useStyles();\r\n\r\n  const {\r\n    values, formErrors, setFormErrors, handleInputChange,\r\n  } = useForm(initialValues);\r\n\r\n  useEffect(() => {\r\n    // console.log('componentDidMount');\r\n    props.clearErrors();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // console.log('componentWillUpdate');\r\n    setFormErrors(errors);\r\n  }, [errors]);\r\n\r\n  useEffect(() => {\r\n    // console.log('useEffect runed');\r\n    if (security.validToken) {\r\n      // console.log('security', security);\r\n      // console.log('UseEffectStoreSecurity', store.getState().security);\r\n      navigate('/home');\r\n    }\r\n  }, [security]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    props.login(values);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Login | Language Learning Blog</title>\r\n      </Helmet>\r\n      <Grid container direction=\"column\" alignContent=\"center\" sx={{ mx: 4 }}>\r\n        <Grid item className={classes.alignCenter}>\r\n          <RouterLink to=\"/home\">\r\n            <Logo className={classes.logo} />\r\n          </RouterLink>\r\n        </Grid>\r\n\r\n        <Container maxWidth=\"xs\" className={classes.container}>\r\n          <div className={`${classes.alignCenter} ${classes.paper}`}>\r\n            <Typography component=\"h1\" variant=\"h3\" color=\"primary.light\">\r\n              LOGIN\r\n            </Typography>\r\n            <Form className={classes.form} onSubmit={handleSubmit}>\r\n              <Grid container spacing={5}>\r\n                <Grid item xs={12}>\r\n                  <Controls.Input\r\n                    autoFocus\r\n                    required\r\n                    variant=\"standard\"\r\n                    name=\"username\"\r\n                    id=\"username\"\r\n                    label=\"Username\"\r\n                    autoComplete=\"username\"\r\n                    value={values.username}\r\n                    error={formErrors.username}\r\n                    onChange={handleInputChange}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Controls.Input\r\n                    required\r\n                    variant=\"standard\"\r\n                    name=\"password\"\r\n                    id=\"password\"\r\n                    label=\"Password\"\r\n                    autoComplete=\"current-password\"\r\n                    type=\"password\"\r\n                    value={values.password}\r\n                    error={formErrors.password}\r\n                    onChange={handleInputChange}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              <Controls.Buttons.Button\r\n                text=\"Login\"\r\n                marginY={6}\r\n                paddingY={1.5}\r\n                fullWidth\r\n                size=\"large\"\r\n                type=\"submit\"\r\n              />\r\n              <Typography color=\"textSecondary\" variant=\"body2\" align=\"center\">\r\n                Don&apos;t have an account?\r\n                {' '}\r\n                <Link\r\n                  color=\"tertiary.main\"\r\n                  component={RouterLink}\r\n                  to=\"/user/register\"\r\n                  variant=\"h6\"\r\n                >\r\n                  SIGN UP\r\n                </Link>\r\n              </Typography>\r\n            </Form>\r\n          </div>\r\n        </Container>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nLoginForm.propTypes = {\r\n  login: PropTypes.func.isRequired,\r\n  clearErrors: PropTypes.func.isRequired,\r\n  security: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  security: state.security,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, { login, clearErrors })(LoginForm);\r\n","import React from 'react';\r\nimport { Box, makeStyles } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    background: `linear-gradient(45deg, ${theme.palette.primary.main}, ${theme.palette.tertiary.main})`,\r\n    minHeight: '100vh',\r\n    overflowY: 'auto',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(6, 1, 6)\r\n  }\r\n\r\n}));\r\n\r\nexport default function BackgroundWrapper({ children }) {\r\n  const classes = useStyles();\r\n  return (\r\n    <Box className={classes.root}>\r\n      {children}\r\n    </Box>\r\n  );\r\n}\r\n\r\nBackgroundWrapper.propTypes = {\r\n  children: PropTypes.any,\r\n};\r\n","import React from 'react';\nimport LoginForm from '../components/forms/LoginForm';\nimport BackgroundWrapper from '../components/ColoredBkgLayout';\n\nexport default function Login() {\n  return (\n    <BackgroundWrapper>\n      <LoginForm />\n    </BackgroundWrapper>\n  );\n}\n","import { Helmet } from 'react-helmet';\nimport {\n  Box,\n  Container,\n  Typography\n} from '@material-ui/core';\n\nconst NotFound = () => (\n  <>\n    <Helmet>\n      <title>404 | Language Learning Blog</title>\n    </Helmet>\n    <Box\n      sx={{\n        backgroundColor: 'background.default',\n        display: 'flex',\n        flexDirection: 'column',\n        height: '100%',\n        justifyContent: 'center'\n      }}\n    >\n      <Container maxWidth=\"md\">\n        <Typography\n          align=\"center\"\n          color=\"textPrimary\"\n          variant=\"h1\"\n        >\n          404: The page you are looking for isn’t here\n        </Typography>\n        <Typography\n          align=\"center\"\n          color=\"textPrimary\"\n          variant=\"subtitle2\"\n        >\n          You either tried some shady route or you came here by mistake.\n          Whichever it is, try using the navigation\n        </Typography>\n        <Box sx={{ textAlign: 'center' }}>\n          <img\n            alt=\"Under development\"\n            src=\"/static/images/undraw_page_not_found_su7k.svg\"\n            style={{\n              marginTop: 50,\n              display: 'inline-block',\n              maxWidth: '100%',\n              width: 560\n            }}\n          />\n        </Box>\n      </Container>\n    </Box>\n  </>\n);\n\nexport default NotFound;\n","/* eslint react/prop-types: 0 */\nimport {\n  Box,\n} from '@material-ui/core';\nimport PropTypes from 'prop-types';\n// import { Search as SearchIcon } from 'react-feather';\nimport Controls from '../controls/Controls';\n\nconst PostListToolbar = ({\n  searchText, setSearchText, showAddButton, ...other\n}) => (\n  <Box {...other}>\n    {\n      showAddButton && (\n        <Box\n          sx={{\n            display: 'flex',\n            justifyContent: 'flex-end'\n          }}\n        >\n          <Controls.Buttons.CreateButton\n            href=\"/app/admin/posts/addPost\"\n            text=\"ADD NEW POST\"\n          />\n        </Box>\n\n      )\n    }\n    <Box sx={{ mt: 3 }}>\n      <Controls.SearchBar\n        placeholder=\"Search post\"\n        searchText={searchText}\n        setSearchText={setSearchText}\n      />\n    </Box>\n  </Box>\n);\n\nPostListToolbar.propTypes = {\n  searchText: PropTypes.string.isRequired,\n  setSearchText: PropTypes.func.isRequired,\n};\n\nexport default PostListToolbar;\n","import PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\nimport { CardActions, Divider, makeStyles } from '@material-ui/core';\nimport dateFormat from 'dateformat';\nimport { connect } from 'react-redux';\nimport { deletePost } from '../../actions/postActions';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100%',\n    display: 'flex',\n    boxShadow: '-1px 2px 5px 1px rgba(0, 0, 0, 0.25)',\n    '&:hover': {\n      boxShadow: '-1px 2px 20px 1px rgba(0, 0, 0, 0.25)',\n    },\n    [theme.breakpoints.down('sm')]: {\n      flexDirection: 'column',\n    },\n  },\n  details: {\n    display: 'flex',\n    flexDirection: 'column',\n    width: '100%'\n  },\n  content: {\n    flex: '1 0 auto',\n    paddingBottom: 0,\n    paddingTop: 0\n  },\n  cover: {\n    // minWidth: '180px',\n    maxWidth: '195px',\n    height: '210px',\n    [theme.breakpoints.up('lg')]: {\n      minHeight: '100%',\n    },\n\n    [theme.breakpoints.down('sm')]: {\n      maxWidth: '100%',\n      height: '150px',\n    },\n    boxShadow: '-1px 1px 1px 1px rgba(0, 0, 0, 0.05)'\n  },\n  description: {\n    '& .MuiTypography-root, & .MuiTypography-root > p': {\n      display: 'inline',\n    },\n    '& .MuiTypography-root > h1': {\n      fontSize: '1rem',\n      fontWeight: 'normal'\n    }\n  },\n  alignment: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n    padding: '8px 10px 8px 16px'\n  },\n  icon: {\n    padding: 8\n  }\n}));\n\nconst LinkIconBtn = ({\n  href, label, icon, ...other\n}) => (\n  <Link to={href} {...other}>\n    <IconButton aria-label={label} className={useStyles().icon}>\n      {icon}\n    </IconButton>\n  </Link>\n);\n\nconst PostCard = (props) => {\n  const classes = useStyles();\n  const { post } = props;\n\n  const onDeleteClick = (id) => {\n    props.deletePost(id);\n  };\n\n  return (\n    <Card className={classes.root}>\n      <CardMedia\n        component=\"img\"\n        className={classes.cover}\n        image={post.coverImage}\n        title={post.title}\n      />\n      <div className={classes.details}>\n        <div className={classes.alignment}>\n          <Typography color=\"tertiary.main\" gutterBottom component=\"p\" variant=\"subtitle2\">\n            {post.categoryName}\n          </Typography>\n        </div>\n        <CardContent className={classes.content}>\n          <Typography gutterBottom component=\"h5\" variant=\"h3\" fontSize=\"large\" sx={{ mb: 1 }}>\n            {post.title}\n          </Typography>\n\n          <Typography variant=\"body2\" color=\"textSecondary\">\n            { `${post.description.slice(0, 130)}...`}\n          </Typography>\n        </CardContent>\n        <Typography variant=\"caption\" color=\"textSecondary\" className={classes.alignment}>\n          {`posted on: ${dateFormat(post.createdAt, 'mmm dS, yyyy')}`}\n        </Typography>\n        <Divider />\n        <CardActions className={classes.alignment}>\n          <LinkIconBtn\n            href={`/article/${post.id}`}\n            label=\"view\"\n            icon={<OpenInNewIcon fontSize=\"small\" />}\n          />\n          <LinkIconBtn\n            href={`/app/admin/posts/updatePost/${post.id}`}\n            label=\"update\"\n            icon={<EditIcon color=\"secondary\" fontSize=\"small\" />}\n          />\n          <IconButton aria-label=\"delete\" className={classes.icon} onClick={() => onDeleteClick(post.id)}>\n            <DeleteIcon color=\"error\" fontSize=\"small\" />\n          </IconButton>\n        </CardActions>\n      </div>\n    </Card>\n  );\n};\n\nPostCard.propTypes = {\n  post: PropTypes.object.isRequired,\n  deletePost: PropTypes.func.isRequired,\n};\nLinkIconBtn.propTypes = {\n  href: PropTypes.string,\n  label: PropTypes.string.isRequired,\n  icon: PropTypes.any.isRequired\n};\n\nexport default connect(null, { deletePost })(PostCard);\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport {\n  Box,\n  Container,\n  Grid,\n  // Pagination\n} from '@material-ui/core';\nimport PostListToolbar from 'src/components/posts/PostListToolbar';\nimport PostCard from 'src/components/posts/PostCard';\nimport SnackBarAlert from 'src/components/SnacKBarAlert';\nimport { getAllFilteredPosts } from '../actions/postActions';\n// import posts from 'src/__mocks__/posts';\n\nconst PostList = (props) => {\n  const { alert, postItems } = props;\n\n  const [searchText, setSearchText] = useState('');\n  const [alertOpen, setAlertOpen] = useState(false);\n\n  useEffect(() => {\n    props.getAllFilteredPosts();\n  }, [getAllFilteredPosts]);\n\n  useEffect(() => {\n    if (alert.message !== '') setAlertOpen(true);\n  }, [alert]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Posts | Language Learning Blog</title>\n      </Helmet>\n      {\n        alert && (\n          <SnackBarAlert\n            severity={alert.type}\n            alertOpen={alertOpen}\n            setAlertOpen={setAlertOpen}\n            message={alert.message}\n          />\n        )\n        }\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          minHeight: '100%',\n          py: 3\n        }}\n      >\n        <Container maxWidth=\"lg\">\n          <PostListToolbar\n            showAddButton={false}\n            searchText={searchText}\n            setSearchText={setSearchText}\n          />\n          <Box sx={{ pt: 8, px: 2 }}>\n            <Grid\n              container\n              spacing={5}\n            >\n              {\n                postItems && (postItems.posts.length > 0\n                  ? postItems.posts.map((post) => (\n                    (post.title.toLowerCase().includes(searchText.toLowerCase())\n                    || post.description.toLowerCase().includes(searchText.toLowerCase()))\n                    && (\n                    <Grid\n                      item\n                      key={post.id}\n                      lg={6}\n                      md={6}\n                      xs={12}\n                    >\n                      <PostCard post={post} />\n                    </Grid>\n                    )\n                  ))\n                  : null)\n                        }\n            </Grid>\n          </Box>\n          {/* <Box\n          sx={{\n            display: 'flex',\n            justifyContent: 'center',\n            pt: 3\n          }}\n        >\n          <Pagination\n            color=\"primary\"\n            count={3}\n            size=\"small\"\n          />\n        </Box> */}\n        </Container>\n      </Box>\n    </>\n  );\n};\n\nPostList.propTypes = {\n  getAllFilteredPosts: PropTypes.func.isRequired,\n  postItems: PropTypes.object.isRequired,\n  alert: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n  postItems: state.post,\n  alert: state.alert\n});\n\nexport default connect(mapStateToProps, { getAllFilteredPosts })(PostList);\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\r\nimport { Helmet } from 'react-helmet';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Logo from '../Logo';\r\nimport Controls from '../controls/Controls';\r\nimport customStyles from './LoginRegisterFormStyles';\r\nimport { useForm, Form } from './useForm';\r\nimport { registerUser, clearErrors } from '../../actions/securityActions';\r\n\r\nconst useStyles = makeStyles((theme) => (customStyles(theme)));\r\n\r\nconst genderItems = [\r\n  { id: 'male', name: 'Male' },\r\n  { id: 'female', name: 'Female' },\r\n];\r\nconst initialValues = {\r\n  firstName: '',\r\n  lastName: '',\r\n  username: '',\r\n  password: '',\r\n  confirmPassword: '',\r\n  gender: genderItems[0].name,\r\n  phoneNumber: '',\r\n  avatarImg: '',\r\n  email: ''\r\n};\r\n\r\nconst RegisterForm = (props) => {\r\n  const { errors, security } = props;\r\n  const classes = useStyles();\r\n  const navigate = useNavigate();\r\n  const {\r\n    values, formErrors, setFormErrors, handleInputChange,\r\n  } = useForm(initialValues);\r\n\r\n  useEffect(() => {\r\n    // console.log('componentDidMount');\r\n    props.clearErrors();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // console.log('componentWillUpdate');\r\n    setFormErrors(errors);\r\n  }, [errors]);\r\n\r\n  useEffect(() => {\r\n    // console.log('useEffect runed');\r\n    if (security.validToken) {\r\n      navigate('/home');\r\n    }\r\n  }, [security]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const numberStr = values.phoneNumber;\r\n    values.phoneNumber = numberStr.replace(/-| /gi, ''); // removes - and spaces from d phonenumber\r\n    props.registerUser(values, navigate);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Register | Language Learning Blog</title>\r\n      </Helmet>\r\n      <Grid container direction=\"column\" alignContent=\"center\" sx={{ mx: 4 }}>\r\n        <Grid item className={classes.alignCenter}>\r\n          <RouterLink to=\"/\">\r\n            <Logo className={classes.logo} />\r\n          </RouterLink>\r\n        </Grid>\r\n\r\n        <Container maxWidth=\"md\" className={classes.container}>\r\n          <div className={`${classes.alignCenter} ${classes.paper}`}>\r\n            <Typography component=\"h1\" variant=\"h3\" color=\"primary.light\">\r\n              CREATE &nbsp; ACCOUNT\r\n            </Typography>\r\n            <Form className={classes.form} onSubmit={handleSubmit}>\r\n              <Grid container spacing={4} sx={{ py: 2 }}>\r\n                <Grid item xs={12} sm={6}>\r\n                  <Controls.Input\r\n                    autoFocus\r\n                    required\r\n                    name=\"firstName\"\r\n                    id=\"firstName\"\r\n                    label=\"First Name\"\r\n                    autoComplete=\"fname\"\r\n                    error={formErrors.firstName}\r\n                    value={values.firstName}\r\n                    onChange={handleInputChange}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <Controls.Input\r\n                    // required\r\n                    name=\"lastName\"\r\n                    id=\"lastName\"\r\n                    label=\"Last Name\"\r\n                    autoComplete=\"lname\"\r\n                    error={formErrors.lastName}\r\n                    value={values.lastName}\r\n                    onChange={handleInputChange}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <Controls.Input\r\n                    required\r\n                    name=\"username\"\r\n                    id=\"username\"\r\n                    label=\"Username\"\r\n                    autoComplete=\"uname\"\r\n                    error={formErrors.username}\r\n                    value={values.username}\r\n                    onChange={handleInputChange}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <Controls.Input\r\n                    required\r\n                    name=\"email\"\r\n                    id=\"email\"\r\n                    label=\"Email Address\"\r\n                    autoComplete=\"email\"\r\n                    error={formErrors.email}\r\n                    value={values.email}\r\n                    onChange={handleInputChange}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <Controls.PhoneInput\r\n                    value={values.phoneNumber}\r\n                    error={formErrors.phoneNumber}\r\n                    onChange={handleInputChange}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <Controls.Select\r\n                    name=\"gender\"\r\n                    label=\"Gender\"\r\n                    value={values.gender}\r\n                    options={genderItems}\r\n                    onChange={handleInputChange}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Controls.Input\r\n                    required\r\n                    name=\"password\"\r\n                    id=\"password\"\r\n                    label=\"Password\"\r\n                    type=\"password\"\r\n                    error={formErrors.password}\r\n                    value={values.password}\r\n                    onChange={handleInputChange}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Controls.Input\r\n                    required\r\n                    name=\"confirmPassword\"\r\n                    id=\"confirmPassword\"\r\n                    label=\"Confirm Password\"\r\n                    type=\"password\"\r\n                    error={formErrors.confirmPassword}\r\n                    value={values.confirmPassword}\r\n                    onChange={handleInputChange}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              <Controls.Buttons.Button\r\n                text=\"Sign up\"\r\n                marginY={6}\r\n                paddingY={1.5}\r\n                fullWidth\r\n                size=\"large\"\r\n                type=\"submit\"\r\n              />\r\n              <Typography color=\"textSecondary\" variant=\"body2\" align=\"center\">\r\n                Already have an account?\r\n                {' '}\r\n                <Link\r\n                  color=\"tertiary.main\"\r\n                  component={RouterLink}\r\n                  to=\"/user/login\"\r\n                  variant=\"h6\"\r\n                >\r\n                  LOGIN\r\n                </Link>\r\n              </Typography>\r\n            </Form>\r\n          </div>\r\n        </Container>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nRegisterForm.propTypes = {\r\n  registerUser: PropTypes.func.isRequired,\r\n  clearErrors: PropTypes.func.isRequired,\r\n  security: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  security: state.security,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, { registerUser, clearErrors })(RegisterForm);\r\n","import React from 'react';\nimport RegisterForm from '../components/forms/RegisterForm';\nimport BackgroundWrapper from '../components/ColoredBkgLayout';\n\nexport default function Login() {\n  return (\n    <BackgroundWrapper>\n      <RegisterForm />\n    </BackgroundWrapper>\n  );\n}\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport Controls from 'src/components/controls/Controls';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  searchBar: {\r\n    width: '100%',\r\n    height: '60px',\r\n    [theme.breakpoints.down('sm')]: { height: '55px' },\r\n    padding: '10px 30px',\r\n    boxShadow: '0px 1px 3px 1px rgba(0, 0, 0, 0.2)',\r\n    border: `1px solid ${theme.palette.secondary.dark}`,\r\n  }\r\n}));\r\n\r\nconst CategorySearch = ({ searchText, setSearchText }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Controls.SearchBar\r\n      placeholder=\"Search post\"\r\n      searchText={searchText}\r\n      setSearchText={setSearchText}\r\n      className={classes.searchBar}\r\n      searchIcon={<SearchIcon color=\"primary\" fontSize=\"medium\" />}\r\n      closeIcon={<CloseIcon color=\"primary\" fontSize=\"medium\" />}\r\n    />\r\n  );\r\n};\r\n\r\nCategorySearch.propTypes = {\r\n  searchText: PropTypes.string.isRequired,\r\n  setSearchText: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default CategorySearch;\r\n","const cardStyles = (theme) => ({\r\n  root: {\r\n    margin: 25,\r\n    // background: 'pink',\r\n    textAlign: 'left'\r\n  },\r\n  description: {\r\n    '& .MuiTypography-root, & .MuiTypography-root > p': {\r\n      display: 'inline'\r\n    }\r\n  },\r\n  simpleCard: {\r\n    // maxWidth: 345,\r\n    boxShadow: '-1px 2px 20px 1px rgba(0, 0, 0, 0.25)',\r\n    '&:hover': {\r\n      boxShadow: '-1px 2px 5px 1px rgba(0, 0, 0, 0.25)',\r\n    }\r\n  },\r\n  cardWithAvatar: {\r\n    // maxWidth: 250,\r\n    margin: 25,\r\n    textAlign: 'left',\r\n    paddingBottom: 4,\r\n    boxShadow: '1px 2px 4px 1px rgba(0, 0, 0, 0.01)',\r\n    border: 'none',\r\n    borderRadius: 0,\r\n    '& .MuiCardContent-root': {\r\n      padding: '16px 4px 8px 2px'\r\n    },\r\n    '& .MuiCardActions-root': {\r\n      paddingLeft: 2\r\n    },\r\n  },\r\n  cardActionGrid: {\r\n    padding: '0 16px 16px 8px',\r\n    [theme.breakpoints.down('sm')]: {\r\n      flexDirection: 'column',\r\n      justifyContent: '',\r\n      textAlign: 'left'\r\n    }\r\n  },\r\n  avatarGrid: { paddingLeft: 0 },\r\n  postTime: {\r\n    [theme.breakpoints.down('sm')]: {\r\n      width: '100%',\r\n      display: 'flex',\r\n      // backgroundColor: 'yellow',\r\n      justifyContent: 'flex-start'\r\n    }\r\n  },\r\n  button: {\r\n    '& .MuiButton-endIcon': {\r\n      marginLeft: 0\r\n    },\r\n    [theme.breakpoints.down('sm')]: {\r\n      width: '100%',\r\n      display: 'flex',\r\n      // backgroundColor: 'yellow',\r\n      justifyContent: 'flex-end'\r\n    }\r\n  }\r\n});\r\n\r\nexport default cardStyles;\r\n","import React from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n  Card as MuiCard,\r\n  CardContent as MuiCardContent,\r\n  CardMedia as MuiCardMedia,\r\n} from '@material-ui/core';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport cardStyles from './CardStyles';\r\n\r\nconst useStyles = makeStyles((theme) => (cardStyles(theme)));\r\n\r\nconst CardItem = (props) => {\r\n  const {\r\n    title, description, image, imageHeight, href,\r\n    titleTextVariant, contentTextVariant, rootStyles, children, ...other\r\n  } = props;\r\n  const classes = useStyles();\r\n  return (\r\n    <RouterLink to={href} style={{ textDecoration: 'none' }}>\r\n      <MuiCard className={`${classes.root} ${rootStyles}`} {...other}>\r\n        <MuiCardMedia\r\n          component=\"img\"\r\n          alt={title}\r\n          height={imageHeight}\r\n          image={image}\r\n          title={title}\r\n        />\r\n        <MuiCardContent>\r\n          <Typography gutterBottom variant={titleTextVariant} component=\"h2\">\r\n            {title}\r\n          </Typography>\r\n          <Typography variant={contentTextVariant} color=\"textSecondary\">\r\n            { `${description > 150 ? (`${description.slice(0, 150)}...`) : description}`}\r\n          </Typography>\r\n        </MuiCardContent>\r\n        {children}\r\n      </MuiCard>\r\n    </RouterLink>\r\n  );\r\n};\r\n\r\nCardItem.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  description: PropTypes.string.isRequired,\r\n  image: PropTypes.string.isRequired,\r\n  imageHeight: PropTypes.number.isRequired,\r\n  href: PropTypes.string.isRequired,\r\n  titleTextVariant: PropTypes.string.isRequired,\r\n  contentTextVariant: PropTypes.string.isRequired,\r\n  rootStyles: PropTypes.any,\r\n  children: PropTypes.any\r\n};\r\n\r\nexport default CardItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  CardActions as MuiCardActions,\r\n  Grid\r\n} from '@material-ui/core';\r\n\r\nconst CardFooter = (props) => {\r\n  const {\r\n    justifyContent, gridStyle, spacing, children, ...other\r\n  } = props;\r\n  return (\r\n    <MuiCardActions {...other}>\r\n      <Grid\r\n        container\r\n        justifyContent={justifyContent}\r\n        alignItems=\"center\"\r\n        className={gridStyle}\r\n        spacing={spacing}\r\n      >\r\n        {children}\r\n      </Grid>\r\n    </MuiCardActions>\r\n  );\r\n};\r\n\r\nCardFooter.propTypes = {\r\n  justifyContent: PropTypes.string.isRequired,\r\n  gridStyle: PropTypes.any,\r\n  spacing: PropTypes.number,\r\n  children: PropTypes.any,\r\n};\r\n\r\nexport default CardFooter;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Box, Typography, Button } from '@material-ui/core';\r\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useNavigate } from 'react-router';\r\nimport dateFormat from 'dateformat';\r\nimport CardItem from './CardItem';\r\nimport CardFooter from './CardFooter';\r\nimport cardStyles from './CardStyles';\r\n// import { Button } from '../controls/Button';\r\n\r\nconst useStyles = makeStyles((theme) => (cardStyles(theme)));\r\n\r\nconst SimpleCard = (props) => {\r\n  const {\r\n    title, description, image, createdAt, imageHeight, href, ...other\r\n  } = props;\r\n  const classes = useStyles();\r\n  const navigate = useNavigate();\r\n  const handleClick = () => { navigate(href); };\r\n  return (\r\n    <CardItem\r\n      rootStyles={classes.simpleCard}\r\n      title={title}\r\n      description={description}\r\n      image={image}\r\n      imageHeight={imageHeight}\r\n      href={href}\r\n      titleTextVariant=\"h3\"\r\n      contentTextVariant=\"body1\"\r\n      {...other}\r\n    >\r\n      <CardFooter\r\n        justifyContent=\"space-between\"\r\n        gridStyle={classes.cardActionGrid}\r\n      >\r\n        <Box className={classes.postTime}>\r\n          <Typography variant=\"subtitle2\" color=\"textSecondary\" component=\"p\" fontSize=\"0.78rem\">\r\n            {`Posted on ${dateFormat(createdAt, 'mmmm dS, yyyy')}`}\r\n          </Typography>\r\n        </Box>\r\n        <Box className={classes.button}>\r\n          {/* button for mobile users */}\r\n          <Button\r\n            onClick={handleClick}\r\n            size=\"small\"\r\n            color=\"secondary\"\r\n            endIcon={<ArrowRightIcon />}\r\n          >\r\n            Read More\r\n          </Button>\r\n        </Box>\r\n      </CardFooter>\r\n    </CardItem>\r\n  );\r\n};\r\n\r\nSimpleCard.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  description: PropTypes.string.isRequired,\r\n  image: PropTypes.string.isRequired,\r\n  createdAt: PropTypes.string.isRequired,\r\n  imageHeight: PropTypes.number.isRequired,\r\n  href: PropTypes.string.isRequired\r\n};\r\n\r\nexport default SimpleCard;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Grid } from '@material-ui/core';\r\nimport SimpleCard from '../cards/SimpleCard';\r\n// import CardWithAvatar from '../cards/CardWithAvatar';\r\n\r\nconst MainGridLayout = (props) => {\r\n  const { postItems, searchText } = props;\r\n  return (\r\n    <Grid container spacing={1}>\r\n      {\r\n        postItems ? postItems.map((postItem) => (\r\n          (postItem.title.toLowerCase().includes(searchText.toLowerCase())\r\n          || postItem.description.toLowerCase().includes(searchText.toLowerCase()))\r\n          && (\r\n          <Grid item lg={4} md={6} sm={12} xs={12} key={postItem.id}>\r\n            <SimpleCard\r\n              href={`/article/${postItem.id}`}\r\n              title={postItem.title}\r\n              image={postItem.coverImage}\r\n              description={postItem.description}\r\n              createdAt={postItem.createdAt}\r\n              imageHeight={220}\r\n            />\r\n          </Grid>\r\n          )\r\n        ))\r\n          : null\r\n    }\r\n    </Grid>\r\n  );\r\n};\r\n\r\nMainGridLayout.propTypes = {\r\n  postItems: PropTypes.array.isRequired,\r\n  searchText: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default MainGridLayout;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { Helmet } from 'react-helmet';\r\nimport { Box, Container } from '@material-ui/core';\r\nimport CategorySearch from 'src/components/category/CategorySearch';\r\nimport { useNavigate, useParams } from 'react-router';\r\nimport MainGridLayout from '../components/gridLayouts/MainGridLayout';\r\nimport { getCategoryByName } from '../actions/categoryAction';\r\n\r\nconst Category = (props) => {\r\n  const { category } = props;\r\n  const navigate = useNavigate();\r\n  const { name } = useParams();\r\n\r\n  const [searchText, setSearchText] = useState('');\r\n  const [postList, setPostList] = useState([]);\r\n\r\n  const mountedRef = useRef(true);\r\n\r\n  async function populatePosts() {\r\n    setPostList(category.posts);\r\n  }\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      await props.getCategoryByName(name, navigate);\r\n      await populatePosts();\r\n    })();\r\n    return () => {\r\n      mountedRef.current = false;\r\n    };\r\n  }, [category.id, name]);\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Category | Language Learning Blog</title>\r\n      </Helmet>\r\n      <Box\r\n        sx={{\r\n          backgroundColor: 'background.default',\r\n          minHeight: '100%',\r\n          py: 3,\r\n        }}\r\n      >\r\n        <Container maxWidth=\"md\">\r\n          <Box sx={{ my: 5 }}>\r\n            <CategorySearch\r\n              searchText={searchText}\r\n              setSearchText={setSearchText}\r\n            />\r\n          </Box>\r\n        </Container>\r\n        <Container maxWidth=\"lg\" style={{ margin: 'auto' }}>\r\n          <Box sx={{ pt: 3 }}>\r\n            <MainGridLayout postItems={postList} searchText={searchText} />\r\n          </Box>\r\n        </Container>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nCategory.propTypes = {\r\n  getCategoryByName: PropTypes.func.isRequired,\r\n  category: PropTypes.object.isRequired,\r\n  // searchText: PropTypes.string.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  category: state.category.category\r\n});\r\nexport default connect(mapStateToProps, { getCategoryByName })(Category);\r\n","import axios from 'axios';\r\nimport { GET_ROLES } from './types';\r\n\r\nconst getAllRoles = () => async (dispatch) => {\r\n  const res = await axios.get('/api/roles/all');\r\n  dispatch({\r\n    type: GET_ROLES,\r\n    payload: res.data\r\n  });\r\n  // later add try catch to get the errors if its not an authorized user accesing this route\r\n};\r\n\r\nexport default getAllRoles;\r\n","import { useState, useEffect } from 'react';\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CircularProgress,\r\n  Grid, makeStyles, Typography,\r\n} from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { useNavigate } from 'react-router';\r\nimport getAllRoles from '../../actions/roleAction';\r\nimport { registerUser } from '../../actions/securityActions';\r\n\r\nimport Controls from '../controls/Controls';\r\nimport buttonStyles from '../controls/loadButtonStyles';\r\nimport customStyles from '../forms/LoginRegisterFormStyles';\r\nimport { useForm, Form } from '../forms/useForm';\r\n\r\nconst useStyles = makeStyles((theme) => (customStyles(theme)));\r\nconst shadow = '-1px -1px 10px 2px rgba(0, 0, 0, 0.25)';\r\nconst button = {\r\n  root: {\r\n    padding: '13px 0',\r\n    boxShadow: '0 1px 4px 2px rgba(33, 159, 243, .3)',\r\n    //   background: 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)'\r\n  },\r\n};\r\n\r\nconst genderItems = [\r\n  { id: 'male', name: 'Male' },\r\n  { id: 'female', name: 'Female' },\r\n];\r\n\r\nconst initialValues = {\r\n  firstName: '',\r\n  lastName: '',\r\n  username: '',\r\n  password: '',\r\n  confirmPassword: '',\r\n  gender: genderItems[0].name,\r\n  roleName: '',\r\n  phoneNumber: '',\r\n  avatarImg: '',\r\n  email: ''\r\n};\r\n\r\nconst AddUserForm = (props) => {\r\n  const { roles, errors } = props;\r\n  const classes = useStyles();\r\n  const navigate = useNavigate();\r\n  const [loading, setLoading] = useState(false);\r\n  const [success, setSuccess] = useState(false);\r\n\r\n  const {\r\n    values, formErrors, setFormErrors, handleInputChange,\r\n  } = useForm(initialValues);\r\n\r\n  useEffect(() => {\r\n    props.getAllRoles();\r\n  }, [getAllRoles]);\r\n\r\n  // const handleSetOptions = () => {\r\n  //   setValues({ ...values, roleName: roles[2].roleName });\r\n  // };\r\n\r\n  // useEffect(() => {\r\n  //   console.log(roles[0]);\r\n  //   handleSetOptions();\r\n  //   // values.roleName = roles[2].roleName;\r\n  // }, [roles]);\r\n\r\n  useEffect(() => {\r\n    setFormErrors(errors);\r\n  }, [errors]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!loading) {\r\n      setSuccess(false);\r\n      setLoading(true);\r\n    }\r\n    const numberStr = values.phoneNumber;\r\n    values.phoneNumber = numberStr.replace(/-| /gi, ''); // removes - and spaces from d phonenumber\r\n    props.registerUser(values, navigate, setLoading, setSuccess);\r\n    // console.log(values);\r\n  };\r\n\r\n  return (\r\n    <Form className={classes.form} onSubmit={handleSubmit} sx={{ px: 4, }}>\r\n      <Card sx={{\r\n        px: 2, boxShadow: `${shadow}`, position: 'relative', overflow: 'inherit'\r\n      }}\r\n      >\r\n        <Grid container justifyContent=\"center\" sx={{ py: 5, }}>\r\n          <Typography component=\"h1\" variant=\"h3\" color=\"primary.light\">\r\n            CREATE&nbsp;NEW&nbsp;USER\r\n          </Typography>\r\n        </Grid>\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            spacing={4}\r\n          >\r\n            <Grid item xs={12} md={6}>\r\n              <Controls.Input\r\n                autoFocus\r\n                required\r\n                name=\"firstName\"\r\n                id=\"firstName\"\r\n                label=\"First Name\"\r\n                autoComplete=\"fname\"\r\n                error={formErrors.firstName}\r\n                value={values.firstName}\r\n                onChange={handleInputChange}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={6}>\r\n              <Controls.Input\r\n                required\r\n                name=\"lastName\"\r\n                id=\"lastName\"\r\n                label=\"Last Name\"\r\n                autoComplete=\"lname\"\r\n                error={formErrors.lastName}\r\n                value={values.lastName}\r\n                onChange={handleInputChange}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={6}>\r\n              <Controls.Input\r\n                required\r\n                name=\"username\"\r\n                id=\"username\"\r\n                label=\"Username\"\r\n                autoComplete=\"uname\"\r\n                error={formErrors.username}\r\n                value={values.username}\r\n                onChange={handleInputChange}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={6}>\r\n              <Controls.Select\r\n                name=\"roleName\"\r\n                label=\"Role\"\r\n                value={values.roleName}\r\n                options={roles}\r\n                error={formErrors.roleName}\r\n                onChange={handleInputChange}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={6}>\r\n              <Controls.PhoneInput\r\n                value={values.phoneNumber}\r\n                error={formErrors.phoneNumber}\r\n                onChange={handleInputChange}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={6}>\r\n              <Controls.Select\r\n                name=\"gender\"\r\n                label=\"Gender\"\r\n                value={values.gender}\r\n                options={genderItems}\r\n                error={formErrors.gender}\r\n                onChange={handleInputChange}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              <Controls.Input\r\n                required\r\n                name=\"email\"\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                autoComplete=\"email\"\r\n                error={formErrors.email}\r\n                value={values.email}\r\n                onChange={handleInputChange}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              <Controls.Input\r\n                required\r\n                name=\"password\"\r\n                id=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                error={formErrors.password}\r\n                value={values.password}\r\n                onChange={handleInputChange}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              <Controls.Input\r\n                required\r\n                name=\"confirmPassword\"\r\n                id=\"confirmPassword\"\r\n                label=\"Confirm Password\"\r\n                type=\"password\"\r\n                error={formErrors.confirmPassword}\r\n                value={values.confirmPassword}\r\n                onChange={handleInputChange}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid container item xs={12}>\r\n              {/* <Controls.Buttons.Button\r\n                text=\"ADD\"\r\n                marginY={6}\r\n                paddingY={1.5}\r\n                fullWidth\r\n                size=\"large\"\r\n                type=\"submit\"\r\n              /> */}\r\n              <Grid container sx={{ ...buttonStyles.wrapper, my: 4 }}>\r\n                <Controls.Buttons.Button\r\n                  sx={{ ...button.root, ...buttonStyles.buttonSuccess(success) }}\r\n                  text=\"ADD\"\r\n                  marginY={6}\r\n                  paddingY={1.5}\r\n                  fullWidth\r\n                  size=\"large\"\r\n                  type=\"submit\"\r\n                  disabled={loading}\r\n                />\r\n                {loading && <CircularProgress size={25} sx={buttonStyles.buttonProgress} />}\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n      </Card>\r\n    </Form>\r\n  );\r\n};\r\n\r\nAddUserForm.propTypes = {\r\n  registerUser: PropTypes.func.isRequired,\r\n  getAllRoles: PropTypes.func.isRequired,\r\n  roles: PropTypes.array.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  roles: state.role.roles,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, { registerUser, getAllRoles })(AddUserForm);\r\n","import { Helmet } from 'react-helmet';\r\nimport {\r\n  Box,\r\n  Container,\r\n  Grid\r\n} from '@material-ui/core';\r\nimport AddUserForm from 'src/components/users/AddUserForm';\r\n\r\nconst AddUser = () => (\r\n  <>\r\n    <Helmet>\r\n      <title>Add User | Language Learning Blog</title>\r\n    </Helmet>\r\n    <Box\r\n      sx={{\r\n        backgroundColor: 'background.default',\r\n        minHeight: '100%',\r\n        py: 4\r\n      }}\r\n    >\r\n      <Container maxWidth=\"md\">\r\n        <Grid\r\n          container\r\n          direction=\"column\"\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Grid item>\r\n            <AddUserForm />\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </Box>\r\n  </>\r\n);\r\n\r\nexport default AddUser;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  CircularProgress,\r\n  Grid, makeStyles, Typography,\r\n} from '@material-ui/core';\r\n// import clsx from 'clsx';\r\nimport Controls from '../controls/Controls';\r\nimport buttonStyles from '../controls/loadButtonStyles';\r\nimport customStyles from '../forms/LoginRegisterFormStyles';\r\nimport { useForm, Form } from '../forms/useForm';\r\nimport { createPost } from '../../actions/postActions';\r\nimport uploadImage from '../../actions/imageUploadActions';\r\nimport { getCategories } from '../../actions/categoryAction';\r\n\r\nconst useStyles = makeStyles((theme) => (customStyles(theme)));\r\nconst shadow = '-1px -1px 10px 2px rgba(0, 0, 0, 0.25)';\r\nconst button = {\r\n  root: {\r\n    border: 0,\r\n    padding: '0 30px',\r\n    height: 40,\r\n    boxShadow: '0 1px 4px 2px rgba(33, 159, 243, .3)',\r\n    //   background: 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)'\r\n  }\r\n};\r\nconst textEditorParentGridStyles = {\r\n  display: 'grid',\r\n  gridTemplateColumns: 'repeat(auto-fit, minmax(0, 1fr))'\r\n};\r\n\r\nconst initialValues = {\r\n  title: '',\r\n  description: '',\r\n  categoryName: '',\r\n  coverImage: '',\r\n  content: '',\r\n};\r\n\r\nconst AddPostForm = (props) => {\r\n  const { categories, errors } = props;\r\n  const classes = useStyles();\r\n  const [loading, setLoading] = useState(false);\r\n  const [success, setSuccess] = useState(false);\r\n\r\n  const navigate = useNavigate();\r\n  const {\r\n    values, formErrors, setFormErrors, handleInputChange,\r\n  } = useForm(initialValues);\r\n\r\n  useEffect(() => {\r\n    props.getCategories();\r\n  }, [getCategories]);\r\n\r\n  useEffect(() => {\r\n    setFormErrors(errors);\r\n  }, [errors]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!loading) {\r\n      setSuccess(false);\r\n      setLoading(true);\r\n    }\r\n    if (values.coverImage !== '') {\r\n      const imageDir = `/posts/coverImages/post_${values.title}`;\r\n      const imageURL = await props.uploadImage(values.coverImage, imageDir);\r\n      values.coverImage = imageURL;\r\n    }\r\n    props.createPost(values, navigate, setLoading, setSuccess);\r\n\r\n    // if (loading) setLoading(false);\r\n    // console.log('history', navigate);\r\n  };\r\n\r\n  return (\r\n    <Form className={classes.form} onSubmit={handleSubmit} sx={{ px: 4, }}>\r\n      <Card sx={{\r\n        px: 2, pb: 2, boxShadow: `${shadow}`\r\n      }}\r\n      >\r\n        <Grid container justifyContent=\"center\" sx={{ py: 5, }}>\r\n          <Typography component=\"h1\" variant=\"h3\" color=\"primary.light\">\r\n            CREATE&nbsp;NEW&nbsp;POST\r\n          </Typography>\r\n        </Grid>\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            spacing={5}\r\n          >\r\n            <Grid item xs={12}>\r\n              <Controls.Input\r\n                autoFocus\r\n                required\r\n                name=\"title\"\r\n                id=\"postTitle\"\r\n                label=\"Post Title\"\r\n                error={formErrors.title}\r\n                value={values.title}\r\n                onChange={handleInputChange}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              <Controls.Input\r\n                required\r\n                multiline\r\n                rows={2}\r\n                name=\"description\"\r\n                id=\"postDescription\"\r\n                label=\"Post Description\"\r\n                error={formErrors.description}\r\n                value={values.description}\r\n                onChange={handleInputChange}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              <Controls.Select\r\n                name=\"categoryName\"\r\n                label=\"Category Name\"\r\n                options={categories}\r\n                value={values.categoryName}\r\n                error={formErrors.categoryName}\r\n                onChange={handleInputChange}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              {/* <Controls.Input\r\n                name=\"coverImage\"\r\n                id=\"coverImage\"\r\n                label=\"Cover Image\"\r\n                error={errors.coverImage}\r\n                value={values.coverImage}\r\n                onChange={handleInputChange}\r\n              /> */}\r\n              <Controls.ImageDropzone\r\n                name=\"coverImage\"\r\n                onAdd={handleInputChange}\r\n                onDelete={handleInputChange}\r\n                error={formErrors.coverImage}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={12} sx={textEditorParentGridStyles}>\r\n              {/* <Controls.Input\r\n                required\r\n                name=\"content\"\r\n                id=\"content\"\r\n                label=\"content\"\r\n                error={errors.content}\r\n                value={values.content}\r\n                onChange={handleInputChange}\r\n              /> */}\r\n              <Controls.TextEditor // remember to fix it as part of the form data on submit\r\n                name=\"content\"\r\n                value={values.content}\r\n                onChange={handleInputChange}\r\n                error={formErrors.content}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid container item xs={12} justifyContent=\"flex-end\">\r\n              <Box sx={buttonStyles.wrapper}>\r\n                <Controls.Buttons.Button\r\n                  sx={{ ...button.root, ...buttonStyles.buttonSuccess(success) }}\r\n                  text=\"PUBLISH\"\r\n                // size=\"large\"\r\n                  type=\"submit\"\r\n                  disabled={loading}\r\n                />\r\n                {loading && <CircularProgress size={25} sx={buttonStyles.buttonProgress} />}\r\n              </Box>\r\n            </Grid>\r\n\r\n          </Grid>\r\n        </CardContent>\r\n      </Card>\r\n    </Form>\r\n  );\r\n};\r\n\r\nAddPostForm.propTypes = {\r\n  getCategories: PropTypes.func.isRequired,\r\n  uploadImage: PropTypes.func.isRequired,\r\n  createPost: PropTypes.func.isRequired,\r\n  categories: PropTypes.array.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  categories: state.category.categories,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, { getCategories, uploadImage, createPost })(AddPostForm);\r\n","import { Helmet } from 'react-helmet';\r\nimport {\r\n  Box,\r\n  Container,\r\n  Grid\r\n} from '@material-ui/core';\r\nimport AddPostForm from 'src/components/posts/AddPostForm';\r\n\r\nconst AddPost = () => (\r\n  <>\r\n    <Helmet>\r\n      <title>Add Post | Language Learning Blog</title>\r\n    </Helmet>\r\n    <Box\r\n      sx={{\r\n        backgroundColor: 'background.default',\r\n        minHeight: '100%',\r\n        py: 4\r\n      }}\r\n    >\r\n      <Container maxWidth=\"md\">\r\n        <Grid\r\n          container\r\n          direction=\"column\"\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Grid item>\r\n            <AddPostForm />\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </Box>\r\n  </>\r\n);\r\n\r\nexport default AddPost;\r\n","import { Container, Grid, makeStyles } from '@material-ui/core';\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport SearchBar from '../controls/SearchBar';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  mainContainer: {\r\n    height: 250,\r\n    background: 'linear-gradient(rgba(0,0,0,.7), rgba(0,0,0,.7)), url(\"/static/images/coverImg.jpg\")',\r\n    backgroundSize: 'cover',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundPosition: 'center',\r\n    color: theme.palette.common.white\r\n  },\r\n  mainItem: {\r\n    // padding: theme.spacing(6),\r\n    // textAlign: 'left',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    width: '100%'\r\n  },\r\n  searchBar: {\r\n    width: '100%',\r\n    height: '60px',\r\n    [theme.breakpoints.down('sm')]: { height: '55px' },\r\n    borderRadius: '30px',\r\n    padding: '10px 30px',\r\n    boxShadow: '0px 2px 4px 1px rgba(0, 0, 0, 0.25)',\r\n    background: theme.palette.customWhite.main,\r\n    border: '1px solid #E7E7E7',\r\n  }\r\n}));\r\n\r\nconst HomeSearchSection = ({ searchText, setSearchText }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Grid container className={classes.mainContainer}>\r\n      <Grid item className={classes.mainItem}>\r\n        <Container maxWidth=\"md\" className={classes.mainItem}>\r\n          <SearchBar\r\n            className={classes.searchBar}\r\n            placeholder=\"Type here to search\"\r\n            searchText={searchText}\r\n            setSearchText={setSearchText}\r\n          />\r\n        </Container>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nHomeSearchSection.propTypes = {\r\n  searchText: PropTypes.string.isRequired,\r\n  setSearchText: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default HomeSearchSection;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n// import { connect } from 'react-redux';\r\nimport MainGridLayout from '../gridLayouts/MainGridLayout';\r\n// import { getAllFilteredPosts } from '../../actions/postActions';\r\n\r\nconst HomeItemsSection = (props) => {\r\n  const { postItems, searchText } = props;\r\n\r\n  return (\r\n    <MainGridLayout postItems={postItems} searchText={searchText} />\r\n  );\r\n};\r\n\r\nHomeItemsSection.propTypes = {\r\n  // getAllFilteredPosts: PropTypes.func.isRequired,\r\n  postItems: PropTypes.array.isRequired,\r\n  searchText: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default HomeItemsSection;\r\n","import { Helmet } from 'react-helmet';\r\nimport { Box, Container } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { useEffect, useState } from 'react';\r\nimport HomeSearchSection from '../components/home/HomeSearchSection';\r\nimport HomeItemsSection from '../components/home/HomeItemsSection';\r\nimport { getAllFilteredPosts } from '../actions/postActions';\r\n\r\nconst HomePage = (props) => {\r\n  const { postItems } = props;\r\n\r\n  const [searchText, setSearchText] = useState('');\r\n\r\n  useEffect(() => {\r\n    props.getAllFilteredPosts();\r\n  }, [getAllFilteredPosts]);\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Home | Language Learning Blog</title>\r\n      </Helmet>\r\n      <Box\r\n        sx={{\r\n          backgroundColor: 'white',\r\n          minHeight: '100%',\r\n          pb: 3,\r\n        }}\r\n      >\r\n        <HomeSearchSection\r\n          searchText={searchText}\r\n          setSearchText={setSearchText}\r\n        />\r\n        <Container maxWidth=\"lg\" style={{ margin: 'auto' }}>\r\n          <Box sx={{ pt: 4 }}>\r\n            <HomeItemsSection postItems={postItems} searchText={searchText} />\r\n          </Box>\r\n        </Container>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nHomePage.propTypes = {\r\n  getAllFilteredPosts: PropTypes.func.isRequired,\r\n  postItems: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  postItems: state.post.posts\r\n});\r\nexport default connect(mapStateToProps, { getAllFilteredPosts })(HomePage);\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useNavigate, Navigate } from 'react-router';\r\nimport PropTypes from 'prop-types';\r\nimport { connect, useSelector } from 'react-redux';\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  CircularProgress,\r\n  Grid, makeStyles, Typography,\r\n} from '@material-ui/core';\r\nimport { getCategories } from 'src/actions/categoryAction';\r\nimport Controls from '../controls/Controls';\r\nimport buttonStyles from '../controls/loadButtonStyles';\r\nimport customStyles from '../forms/LoginRegisterFormStyles';\r\nimport { useForm, Form } from '../forms/useForm';\r\nimport { getPost, createPost } from '../../actions/postActions';\r\nimport uploadImage from '../../actions/imageUploadActions';\r\n\r\nconst useStyles = makeStyles((theme) => (customStyles(theme)));\r\nconst shadow = '-1px -1px 10px 2px rgba(0, 0, 0, 0.25)';\r\nconst button = {\r\n  root: {\r\n    border: 0,\r\n    padding: '0 30px',\r\n    height: 40,\r\n    boxShadow: '0 1px 4px 2px rgba(33, 159, 243, .3)',\r\n    //   background: 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)'\r\n  }\r\n};\r\nconst textEditorParentGridStyles = {\r\n  display: 'grid',\r\n  gridTemplateColumns: 'repeat(auto-fit, minmax(0, 1fr))'\r\n};\r\n\r\nconst initialValues = {\r\n  title: '',\r\n  description: '',\r\n  categoryName: '',\r\n  coverImage: '',\r\n  content: '',\r\n};\r\n\r\nconst UpdatePostForm = (props) => {\r\n  const { categories, post, errors } = props;\r\n  const classes = useStyles();\r\n  const navigate = useNavigate();\r\n  const [loading, setLoading] = useState(false);\r\n  const [success, setSuccess] = useState(false);\r\n\r\n  const {\r\n    values, formErrors, setValues, setFormErrors, handleInputChange,\r\n  } = useForm(initialValues);\r\n\r\n  const { user } = useSelector((state) => state.security);\r\n\r\n  const { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    props.getPost(id, navigate);\r\n  }, [getPost]);\r\n\r\n  useEffect(() => {\r\n    props.getCategories();\r\n  }, [getCategories]);\r\n\r\n  useEffect(() => {\r\n    setValues({ ...values, ...post });\r\n  }, [post]);\r\n\r\n  useEffect(() => {\r\n    setFormErrors(errors);\r\n  }, [errors]);\r\n\r\n  if (user.username !== post.author) <Navigate to=\"/home\" />;\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!loading) {\r\n      setSuccess(false);\r\n      setLoading(true);\r\n    }\r\n    if (values.content === '<p><br></p>') {\r\n      values.content = '';\r\n    }\r\n    if (values.coverImage !== '') {\r\n      const imageDir = `/posts/coverImages/post_${values.title}`;\r\n      const imageURL = await props.uploadImage(values.coverImage, imageDir);\r\n      values.coverImage = imageURL;\r\n    }\r\n    props.createPost(values, navigate, setLoading, setSuccess);\r\n    if (loading) { setLoading(false); }\r\n  };\r\n\r\n  return (\r\n    <Form className={classes.form} onSubmit={handleSubmit} sx={{ px: 4, }}>\r\n      <Card sx={{\r\n        px: 2, pb: 2, boxShadow: `${shadow}`\r\n      }}\r\n      >\r\n        <Grid container justifyContent=\"center\" sx={{ py: 5, }}>\r\n          <Typography component=\"h1\" variant=\"h3\" color=\"primary.light\">\r\n            UPDATE&nbsp;POST\r\n          </Typography>\r\n        </Grid>\r\n        <CardContent>\r\n          <Grid sx={{ display: 'none' }}>\r\n            <Controls.Input\r\n              required\r\n              disabled\r\n              name=\"id\"\r\n              id=\"postId\"\r\n              label=\"postId\"\r\n              type=\"hidden\"\r\n              value={`${values.id}`}\r\n            />\r\n          </Grid>\r\n          <Grid\r\n            container\r\n            spacing={5}\r\n          >\r\n            <Grid item xs={12}>\r\n              <Controls.Input\r\n                disabled\r\n                name=\"title\"\r\n                id=\"postTitle\"\r\n                label=\"Post Title\"\r\n                error={formErrors.title}\r\n                value={values.title}\r\n                onChange={handleInputChange}\r\n                sx={{ backgroundColor: '#fafafa' }}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              <Controls.Input\r\n                required\r\n                multiline\r\n                rows={2}\r\n                name=\"description\"\r\n                id=\"postDescription\"\r\n                label=\"Post Description\"\r\n                error={formErrors.description}\r\n                value={values.description}\r\n                onChange={handleInputChange}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              <Controls.Select\r\n                disabled\r\n                name=\"categoryName\"\r\n                label=\"Category Name\"\r\n                value={values.categoryName}\r\n                options={categories}\r\n                onChange={handleInputChange}\r\n                sx={{ backgroundColor: '#fafafa' }}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              <Controls.ImageDropzone\r\n                name=\"coverImage\"\r\n                imgData={values.coverImage}\r\n                onAdd={handleInputChange}\r\n                onDelete={handleInputChange}\r\n                error={formErrors.coverImage}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={12} sx={textEditorParentGridStyles}>\r\n              <Controls.TextEditor // remember to fix it as part of the form data on submit\r\n                name=\"content\"\r\n                value={values.content}\r\n                onChange={handleInputChange}\r\n                error={formErrors.content}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid container item xs={12} justifyContent=\"flex-end\">\r\n              <Box sx={buttonStyles.wrapper}>\r\n                <Controls.Buttons.Button\r\n                  sx={{ ...button.root, ...buttonStyles.buttonSuccess(success) }}\r\n                  text=\"UPDATE\"\r\n                // size=\"large\"\r\n                  type=\"submit\"\r\n                  disabled={loading}\r\n                />\r\n                {loading && <CircularProgress size={25} sx={buttonStyles.buttonProgress} />}\r\n              </Box>\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n      </Card>\r\n    </Form>\r\n  );\r\n};\r\n\r\nUpdatePostForm.propTypes = {\r\n  uploadImage: PropTypes.func.isRequired,\r\n  createPost: PropTypes.func.isRequired,\r\n  getPost: PropTypes.func.isRequired, // gets a single post\r\n  getCategories: PropTypes.func.isRequired,\r\n  categories: PropTypes.array.isRequired,\r\n  post: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  categories: state.category.categories,\r\n  post: state.post.post,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  getPost, getCategories, createPost, uploadImage\r\n})(UpdatePostForm);\r\n","import { Helmet } from 'react-helmet';\r\nimport {\r\n  Box,\r\n  Container,\r\n  Grid\r\n} from '@material-ui/core';\r\nimport UpdatePostForm from 'src/components/posts/UpdatePostForm';\r\n\r\nconst UpdatePost = () => (\r\n  <>\r\n    <Helmet>\r\n      <title>Update Post | Language Learning Blog</title>\r\n    </Helmet>\r\n    <Box\r\n      sx={{\r\n        backgroundColor: 'background.default',\r\n        minHeight: '100%',\r\n        py: 4\r\n      }}\r\n    >\r\n      <Container maxWidth=\"md\">\r\n        <Grid\r\n          container\r\n          direction=\"column\"\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Grid item>\r\n            <UpdatePostForm />\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </Box>\r\n  </>\r\n);\r\n\r\nexport default UpdatePost;\r\n","import { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Avatar,\r\n  Badge,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  CircularProgress,\r\n  Container,\r\n  Grid, makeStyles,\r\n} from '@material-ui/core';\r\n\r\nimport { connect } from 'react-redux';\r\nimport getAllRoles from 'src/actions/roleAction';\r\nimport Controls from '../controls/Controls';\r\nimport buttonStyles from '../controls/loadButtonStyles';\r\nimport customStyles from '../forms/LoginRegisterFormStyles';\r\nimport { useForm, Form } from '../forms/useForm';\r\nimport ImageUploadButton from '../controls/ImgUploadBtn';\r\nimport { getUser, updateUser } from '../../actions/userAction';\r\n\r\nconst useStyles = makeStyles((theme) => (customStyles(theme)));\r\nconst shadow = '-1px -1px 10px 2px rgba(0, 0, 0, 0.25)';\r\nconst button = {\r\n  root: {\r\n    padding: '13px 0',\r\n    boxShadow: '0 1px 4px 2px rgba(33, 159, 243, .3)',\r\n    //   background: 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)'\r\n  },\r\n};\r\n\r\nconst genderItems = [\r\n  { id: 'male', name: 'Male' },\r\n  { id: 'female', name: 'Female' },\r\n];\r\nconst initialValues = {\r\n  id: '',\r\n  firstName: '',\r\n  lastName: '',\r\n  username: '',\r\n  gender: genderItems[0].name,\r\n  phoneNumber: '',\r\n  roleName: '',\r\n  avatarImg: '',\r\n  email: ''\r\n};\r\n\r\nconst UpdateUserForm = (props) => {\r\n  const {\r\n    adminRole, user, errors, roles\r\n  } = props;\r\n  const classes = useStyles();\r\n  // const navigate = useNavigate();\r\n  const { id } = useParams();\r\n  const [loading, setLoading] = useState(false);\r\n  const [success, setSuccess] = useState(false);\r\n\r\n  const {\r\n    values, setValues, formErrors, setFormErrors, handleInputChange,\r\n  } = useForm(initialValues);\r\n\r\n  useEffect(() => {\r\n    props.getAllRoles();\r\n  }, [roles]);\r\n\r\n  useEffect(() => {\r\n    setFormErrors(errors);\r\n  }, [errors]);\r\n\r\n  useEffect(() => {\r\n    // values.id = userId;\r\n    props.getUser(id);\r\n  }, [getUser]);\r\n\r\n  useEffect(() => {\r\n    setValues({ ...values, ...user });\r\n  }, [user]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!loading) {\r\n      setSuccess(false);\r\n      setLoading(true);\r\n    }\r\n    const numberStr = values.phoneNumber;\r\n    values.phoneNumber = numberStr.replace(/-| /gi, '');\r\n    // console.log(values.phoneNumber);\r\n\r\n    const updateRequest = {\r\n      id: values.id,\r\n      firstName: values.firstName,\r\n      lastName: values.lastName,\r\n      username: values.username,\r\n      gender: values.gender,\r\n      phoneNumber: values.phoneNumber,\r\n      roleName: values.roleName,\r\n      avatarImg: values.avatarImg,\r\n      email: values.email\r\n    };\r\n    props.updateUser(id, adminRole, updateRequest, setLoading, setSuccess);\r\n    // console.log(updateRequest);\r\n  };\r\n\r\n  const ProfilePic = () => (\r\n    <Badge\r\n      badgeContent={<ImageUploadButton name=\"avatarImg\" userId={id} onChange={handleInputChange} />}\r\n      overlap=\"circular\"\r\n      anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\r\n    >\r\n      <Avatar\r\n        alt={values.username}\r\n        src={values.avatarImg}\r\n        sx={{\r\n          height: 90,\r\n          width: 90,\r\n        }}\r\n      />\r\n    </Badge>\r\n  );\r\n\r\n  return (\r\n    <Form className={classes.form} onSubmit={handleSubmit} sx={{ px: 4, }}>\r\n      <Card sx={{\r\n        px: 2, pt: 10, boxShadow: `${shadow}`, position: 'relative', overflow: 'inherit'\r\n      }}\r\n      >\r\n        <Container\r\n          sx={{\r\n            position: 'absolute',\r\n            left: 0,\r\n            top: -40,\r\n            width: '100%',\r\n            display: 'flex',\r\n            placeContent: 'center',\r\n            margin: 'auto'\r\n          }}\r\n        >\r\n          <ProfilePic />\r\n        </Container>\r\n\r\n        <CardHeader />\r\n        <CardContent>\r\n          <Grid sx={{ display: 'none' }}>\r\n            <Controls.Input\r\n              required\r\n              disabled\r\n              name=\"userId\"\r\n              id=\"userId\"\r\n              label=\"userId\"\r\n              type=\"hidden\"\r\n              value={`${values.id}`}\r\n            />\r\n          </Grid>\r\n          <Grid\r\n            container\r\n            spacing={4}\r\n          >\r\n            <Grid item xs={12} md={6}>\r\n              <Controls.Input\r\n                autoFocus\r\n                required\r\n                disabled\r\n                variant=\"filled\"\r\n                name=\"firstName\"\r\n                id=\"firstName\"\r\n                label=\"First Name\"\r\n                autoComplete=\"fname\"\r\n                error={formErrors.firstName}\r\n                value={values.firstName}\r\n                onChange={handleInputChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <Controls.Input\r\n                disabled\r\n                variant=\"filled\"\r\n                name=\"lastName\"\r\n                id=\"lastName\"\r\n                label=\"Last Name\"\r\n                autoComplete=\"lname\"\r\n                error={formErrors.lastName}\r\n                value={values.lastName}\r\n                onChange={handleInputChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <Controls.Input\r\n                required\r\n                name=\"username\"\r\n                id=\"username\"\r\n                label=\"Username\"\r\n                autoComplete=\"uname\"\r\n                error={formErrors.username}\r\n                value={values.username}\r\n                onChange={handleInputChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <Controls.Select\r\n                required\r\n                disabled\r\n                name=\"gender\"\r\n                label=\"Gender\"\r\n                value={values.gender}\r\n                options={genderItems}\r\n                onChange={handleInputChange}\r\n                error={formErrors.gender}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <Controls.Select\r\n                name=\"roleName\"\r\n                label=\"Role\"\r\n                value={values.roleName}\r\n                options={roles}\r\n                error={formErrors.roleName}\r\n                onChange={handleInputChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <Controls.Input\r\n                required\r\n                name=\"email\"\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                autoComplete=\"email\"\r\n                error={formErrors.email}\r\n                value={values.email}\r\n                onChange={handleInputChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <Controls.PhoneInput\r\n                value={values.phoneNumber}\r\n                onChange={handleInputChange}\r\n                error={formErrors.phoneNumber}\r\n              />\r\n            </Grid>\r\n            {/* <Grid item xs={12}>\r\n              <Controls.Input\r\n                required\r\n                name=\"password\"\r\n                id=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                error={formErrors.password}\r\n                value={values.password}\r\n                onChange={handleInputChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Controls.Input\r\n                required\r\n                name=\"confirmPassword\"\r\n                id=\"confirmPassword\"\r\n                label=\"Confirm Password\"\r\n                type=\"password\"\r\n                error={formErrors.confirmPassword}\r\n                value={values.confirmPassword}\r\n                onChange={handleInputChange}\r\n              />\r\n            </Grid> */}\r\n\r\n            <Grid container item xs={12}>\r\n              <Grid container sx={{ ...buttonStyles.wrapper, my: 4 }}>\r\n                <Controls.Buttons.Button\r\n                  sx={{ ...button.root, ...buttonStyles.buttonSuccess(success) }}\r\n                  text=\"UPDATE\"\r\n                  marginY={6}\r\n                  paddingY={1.5}\r\n                  fullWidth\r\n                  size=\"large\"\r\n                  type=\"submit\"\r\n                  disabled={loading}\r\n                />\r\n                {loading && <CircularProgress size={25} sx={buttonStyles.buttonProgress} />}\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n      </Card>\r\n    </Form>\r\n  );\r\n};\r\n\r\nUpdateUserForm.propTypes = {\r\n  getUser: PropTypes.func.isRequired, // gets a single post\r\n  getAllRoles: PropTypes.func.isRequired,\r\n  updateUser: PropTypes.func.isRequired,\r\n  adminRole: PropTypes.string.isRequired,\r\n  user: PropTypes.object.isRequired,\r\n  roles: PropTypes.array.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  adminRole: state.security.user.roleName,\r\n  user: state.user.user,\r\n  roles: state.role.roles,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, { getUser, updateUser, getAllRoles })(UpdateUserForm);\r\n","import { Helmet } from 'react-helmet';\r\nimport {\r\n  Box,\r\n  Container,\r\n  Grid\r\n} from '@material-ui/core';\r\nimport UpdateUserForm from 'src/components/users/UpdateUserForm';\r\n\r\nconst UpdateUser = () => (\r\n  <>\r\n    <Helmet>\r\n      <title>Update User | Language Learning Blog</title>\r\n    </Helmet>\r\n    <Box\r\n      sx={{\r\n        backgroundColor: 'background.default',\r\n        minHeight: '100%',\r\n        py: 4\r\n      }}\r\n    >\r\n      <Container maxWidth=\"md\">\r\n        <Grid\r\n          container\r\n          direction=\"column\"\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Grid item>\r\n            <UpdateUserForm />\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </Box>\r\n  </>\r\n);\r\n\r\nexport default UpdateUser;\r\n","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { Helmet } from 'react-helmet';\r\nimport {\r\n  Box,\r\n  Container,\r\n  Grid,\r\n  // Pagination\r\n} from '@material-ui/core';\r\nimport PostListToolbar from 'src/components/posts/PostListToolbar';\r\nimport PostCard from 'src/components/posts/PostCard';\r\nimport SnackBarAlert from 'src/components/SnacKBarAlert';\r\nimport { getUserPosts } from '../actions/postActions';\r\n// import posts from 'src/__mocks__/posts';\r\n\r\n// All the posts of a particular user\r\n\r\nconst MyPosts = (props) => {\r\n  const { alert, postItems } = props;\r\n  const [searchText, setSearchText] = useState('');\r\n  const [alertOpen, setAlertOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    props.getUserPosts();\r\n  }, [getUserPosts]);\r\n\r\n  useEffect(() => {\r\n    if (alert.message !== '') setAlertOpen(true);\r\n  }, [alert]);\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Posts | Language Learning Blog</title>\r\n      </Helmet>\r\n\r\n      {\r\n        alert && (\r\n          <SnackBarAlert\r\n            severity={alert.type}\r\n            alertOpen={alertOpen}\r\n            setAlertOpen={setAlertOpen}\r\n            message={alert.message}\r\n          />\r\n        )\r\n        }\r\n      <Box\r\n        sx={{\r\n          backgroundColor: 'background.default',\r\n          minHeight: '100%',\r\n          py: 3\r\n        }}\r\n      >\r\n        <Container maxWidth=\"lg\">\r\n          <PostListToolbar\r\n            showAddButton={!false}\r\n            searchText={searchText}\r\n            setSearchText={setSearchText}\r\n          />\r\n          <Box sx={{ pt: 8, px: 2 }}>\r\n            <Grid\r\n              container\r\n              spacing={5}\r\n            >\r\n              {\r\n                postItems && (postItems.posts.length > 0\r\n                  ? postItems.posts.map((post) => (\r\n                    (post.title.toLowerCase().includes(searchText.toLowerCase())\r\n                    || post.description.toLowerCase().includes(searchText.toLowerCase()))\r\n                    && (\r\n                    <Grid\r\n                      item\r\n                      key={post.id}\r\n                      lg={6}\r\n                      md={6}\r\n                      xs={12}\r\n                    >\r\n                      <PostCard post={post} />\r\n                    </Grid>\r\n                    )\r\n                  ))\r\n                  : null\r\n                )\r\n              }\r\n            </Grid>\r\n          </Box>\r\n          {/* <Box\r\n          sx={{\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            pt: 3\r\n          }}\r\n        >\r\n          <Pagination\r\n            color=\"primary\"\r\n            count={3}\r\n            size=\"small\"\r\n          />\r\n        </Box> */}\r\n        </Container>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nMyPosts.propTypes = {\r\n  getUserPosts: PropTypes.func.isRequired,\r\n  postItems: PropTypes.object.isRequired,\r\n  alert: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  postItems: state.post,\r\n  alert: state.alert\r\n});\r\n\r\nexport default connect(mapStateToProps, { getUserPosts })(MyPosts);\r\n","const chatBoxStyles = {\r\n  chat: {\r\n    // margin: '0 0',\r\n    padding: '1rem',\r\n    background: '#e0e0e0',\r\n    // background: 'linear-gradient(90deg, #bdbdbd, #e0e0e0)',\r\n    maxWidth: '100%',\r\n    borderTopRightRadius: '10px',\r\n    borderTopLeftRadius: '0px',\r\n    borderBottomLeftRadius: '10px',\r\n    borderBottomRightRadius: '10px',\r\n  },\r\n\r\n};\r\n\r\nexport default chatBoxStyles;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Avatar, Typography, Grid, Box,\r\n  Container\r\n} from '@material-ui/core';\r\nimport dateFormat from 'dateformat';\r\nimport chatStyles from './ChatBoxStyles';\r\n\r\nconst AuthorInfo = (props) => {\r\n  const {\r\n    authorName, authorProfilePic, isTitle, isComment, comment, publishedDate\r\n  } = props;\r\n\r\n  return (\r\n    <Grid container alignItems={isTitle ? 'center' : 'flex-start'} sx={{ flexWrap: 'nowrap' }}>\r\n      <Grid item>\r\n        <Avatar\r\n          alt={authorName}\r\n          src={authorProfilePic}\r\n          sx={{\r\n            width: isComment ? 50 : 34,\r\n            height: isComment ? 50 : 34,\r\n            marginRight: 0.5,\r\n            border: '1px solid white'\r\n          }}\r\n        />\r\n      </Grid>\r\n      <Grid item>\r\n        {\r\n        isTitle && (\r\n        <Typography\r\n          gutterBottom\r\n          align=\"left\"\r\n          variant=\"caption\"\r\n          color=\"textDefault\"\r\n          component=\"p\"\r\n        >\r\n          {`${authorName} | ${dateFormat(publishedDate, 'mmm dS, yyyy')}`}\r\n        </Typography>\r\n        )\r\n      }\r\n        {\r\n        isComment && (\r\n          <Box>\r\n            <Typography\r\n              gutterBottom\r\n              align=\"left\"\r\n              variant=\"subtitle2\"\r\n              color=\"tertiary.main\"\r\n              component=\"p\"\r\n            >\r\n              {`${authorName}`}\r\n            </Typography>\r\n            <Container sx={chatStyles.chat}>\r\n              <Typography\r\n                align=\"left\"\r\n                variant=\"h6\"\r\n                color=\"textPrimary\"\r\n                component=\"p\"\r\n              >\r\n                {comment}\r\n              </Typography>\r\n            </Container>\r\n          </Box>\r\n        )\r\n      }\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\nAuthorInfo.propTypes = {\r\n  authorName: PropTypes.string.isRequired,\r\n  authorProfilePic: PropTypes.string.isRequired,\r\n  isTitle: PropTypes.bool,\r\n  isComment: PropTypes.bool,\r\n  comment: PropTypes.string,\r\n  publishedDate: PropTypes.string, // later check the type bec u will use date provided from the back end\r\n};\r\n\r\nexport default AuthorInfo;\r\n","// import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  makeStyles,\r\n  TextareaAutosize,\r\n} from '@material-ui/core';\r\nimport { connect } from 'react-redux';\r\nimport { useNavigate } from 'react-router';\r\nimport { useEffect } from 'react';\r\nimport Controls from '../controls/Controls';\r\nimport { useForm, Form } from '../forms/useForm';\r\nimport { createComment } from '../../actions/commentAction';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'center'\r\n  },\r\n  textArea: {\r\n    padding: 10,\r\n    minHeight: '90px',\r\n    minWidth: '350px',\r\n    border: '1px solid white',\r\n    boxShadow: '1px 1px 3px 1px rgba(0, 0, 0, 0.1)',\r\n    borderRadius: '3px',\r\n    fontSize: '1.01rem',\r\n    color: theme.palette.customGray.shade900\r\n  },\r\n  errorTxt: {\r\n    textAlign: 'left',\r\n    fontSize: '0.8rem',\r\n    color: theme.palette.error.main,\r\n    margin: 0,\r\n    marginBottom: 4\r\n  },\r\n  button: {\r\n    border: 0,\r\n    margin: 8,\r\n    padding: '0 20px',\r\n    height: 35,\r\n    boxShadow: '0 1px 4px 2px rgba(33, 159, 243, .3)'\r\n  },\r\n}));\r\n\r\nconst errorStyle = {\r\n  margin: 8,\r\n  border: '2px solid red',\r\n  borderRadius: '3px',\r\n};\r\n\r\nconst initialValues = {\r\n  content: '',\r\n};\r\n\r\nconst CommentForm = (props) => {\r\n  const { postId, errors } = props;\r\n  const classes = useStyles();\r\n  const navigate = useNavigate();\r\n  const {\r\n    values, formErrors, setFormErrors, handleInputChange,\r\n  } = useForm(initialValues);\r\n\r\n  useEffect(() => {\r\n    setFormErrors(errors);\r\n  }, [errors]);\r\n\r\n  const { jwtToken } = localStorage;\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (jwtToken) {\r\n      props.createComment(postId, values, navigate);\r\n      // console.log(values);\r\n    } else { navigate('/user/login'); }\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit} className={classes.root}>\r\n      {/* <Typography gutterBottom variant=\"h5\" color=\"textSecondary\">\r\n        SAY SOMETHING...\r\n      </Typography> */}\r\n      <div style={errors.content ? errorStyle : {}}>\r\n        <TextareaAutosize\r\n          className={classes.textArea}\r\n          aria-label=\"comment box\"\r\n          maxRows={10}\r\n          placeholder=\"Type your comment here\"\r\n          name=\"content\"\r\n          id=\"comment\"\r\n          error={formErrors.content}\r\n          value={values.content}\r\n          onChange={handleInputChange}\r\n        />\r\n      </div>\r\n      {formErrors && <p className={classes.errorTxt}>{errors.content}</p>}\r\n\r\n      <Controls.Buttons.Button\r\n        className={classes.button}\r\n        text=\"COMMENT\"\r\n        type=\"submit\"\r\n        // size=\"large\"\r\n      />\r\n    </Form>\r\n\r\n  );\r\n};\r\n\r\nCommentForm.propTypes = {\r\n  createComment: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  postId: PropTypes.string.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { createComment })(CommentForm);\r\n","import axios from 'axios';\r\nimport { GET_COMMENTS, GET_ERRORS } from './types';\r\n\r\nexport const createComment = (postId, commentData, navigate) => async (dispatch) => {\r\n  try {\r\n    await axios.post(`/api/post/${postId}/comment`, commentData);\r\n    // navigate(`/article/${postId}`);\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n    window.location.href = `/article/${postId}`;\r\n    // history.push('/home');\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: error.response.data\r\n    });\r\n    navigate(`/article/${postId}`);\r\n    console.log(error.response.data, error.message);\r\n  }\r\n};\r\n\r\nexport const getComment = () => async (dispatch) => {\r\n  try {\r\n    const res = await axios.post('/api/post/comments/all');\r\n    dispatch({\r\n      type: GET_COMMENTS,\r\n      payload: res.data\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: error.response.data\r\n    });\r\n    console.log(error.response.data, error.message);\r\n  }\r\n};\r\n","// import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Grid, makeStyles,\r\n  Box, Container\r\n} from '@material-ui/core';\r\nimport AuthorInfo from './AuthorInfo';\r\nimport CommentForm from './CommentForm';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'center'\r\n  },\r\n  container: {\r\n    margin: '45px auto 50px',\r\n    width: '75%',\r\n    [theme.breakpoints.down('md')]: {\r\n      width: '90%',\r\n    },\r\n  }\r\n}));\r\n\r\nconst CommentSection = ({ postId, comments }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box sx={{ pt: 4 }}>\r\n      <Grid container className={classes.root}>\r\n        <Grid item>\r\n          <CommentForm postId={postId} />\r\n        </Grid>\r\n        <Container className={classes.container}>\r\n          {\r\n            comments ? comments.map((comment) => (\r\n              <Box key={comment.id} sx={{ marginTop: 4 }}>\r\n                <AuthorInfo\r\n                  authorName={comment.userName}\r\n                  authorProfilePic={comment.userAvatar}\r\n                  publishedDate={comment.created_At}\r\n                  isComment\r\n                  comment={comment.content}\r\n                />\r\n              </Box>\r\n            ))\r\n              : null\r\n        }\r\n        </Container>\r\n\r\n      </Grid>\r\n    </Box>\r\n\r\n  );\r\n};\r\n\r\nCommentSection.propTypes = {\r\n  comments: PropTypes.array,\r\n  postId: PropTypes.string,\r\n};\r\n\r\nexport default CommentSection;\r\n","import { useEffect, useRef, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  makeStyles, Grid, Typography, Container,\r\n  Card,\r\n  IconButton,\r\n  Box\r\n} from '@material-ui/core';\r\n\r\n// import InfoAvatar from '../InfoAvatar';\r\nimport CommentIcon from '@material-ui/icons/Comment';\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\n// import content from '../../__mocks__/content';\r\nimport { connect } from 'react-redux';\r\nimport { deleteLike, likePost } from 'src/actions/likeAction';\r\nimport { useNavigate } from 'react-router';\r\nimport AuthorInfo from './AuthorInfo';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    // background: 'pink',\r\n    flexDirection: 'column',\r\n    width: '75%',\r\n    [theme.breakpoints.down('md')]: {\r\n      width: '90%',\r\n    },\r\n    margin: 'auto',\r\n    marginTop: '-30vh',\r\n  },\r\n  headerMainGrid: {\r\n    height: '100%',\r\n    display: 'grid',\r\n    gridTemplateColumns: 'repeat(auto-fit, minmax(0, 1fr))',\r\n    justifyContent: 'center',\r\n    paddingBottom: '2rem'\r\n  },\r\n  headerContainer: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    color: 'white'\r\n  },\r\n  titleText: {\r\n    marginBottom: 16\r\n  },\r\n  card: {\r\n    padding: '50px 20px',\r\n    boxShadow: 'none',\r\n    '& .MuiTypography-root': {\r\n      lineHeight: '1.8',\r\n      fontSize: '1.09rem',\r\n      textAlign: 'justify',\r\n      //   fontWeight: theme.typography.fontWeightRegular,\r\n      color: theme.palette.grey[700]\r\n    },\r\n    '& p': {\r\n      margin: 0,\r\n    },\r\n    '& p > img': {\r\n      display: 'block',\r\n      maxHeight: '500px',\r\n      maxWidth: '100%',\r\n      margin: '10px auto'\r\n    },\r\n    '& iframe': {\r\n      display: 'block',\r\n      height: '400px',\r\n      width: '100%',\r\n      margin: '15px auto'\r\n    }\r\n  }\r\n}));\r\n\r\nconst ContentSection = (props) => {\r\n  const { post, username } = props;\r\n  const classes = useStyles();\r\n  const navigate = useNavigate();\r\n  const [isLiked, setIsLiked] = useState(false);\r\n  const [displayComment, setDisplayComment] = useState(false);\r\n\r\n  const mountedRef = useRef(true);\r\n  useEffect(() => {\r\n    if (post.likes !== undefined) {\r\n      for (let i = 0; i < post.likes.length; i++) {\r\n        const like = post.likes[i];\r\n        if (like.userName === username) {\r\n          setIsLiked(true);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    return () => {\r\n      mountedRef.current = false;\r\n    };\r\n  }, [post.id]);\r\n\r\n  const { jwtToken } = localStorage;\r\n\r\n  const handleLikePost = async () => {\r\n    if (jwtToken) {\r\n      if (!isLiked) {\r\n        await props.likePost(post.id, { isLiked: true }, navigate, setIsLiked);\r\n      } else {\r\n        await props.deleteLike(post.id, navigate, setIsLiked);\r\n      }\r\n    } else { navigate('/user/login'); }\r\n    console.log('clicked', isLiked);\r\n  };\r\n\r\n  return (\r\n    <Grid container className={classes.root}>\r\n      <Grid item className={classes.headerMainGrid}>\r\n        <Grid className={classes.headerContainer}>\r\n          <Grid item sx={{ pb: 1 }}>\r\n            <Typography variant=\"h1\" align=\"left\" className={classes.titleText}>\r\n              {post.title}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <AuthorInfo\r\n              authorName={post.author}\r\n              authorProfilePic={post.authorAvatar}\r\n              // authorProfilePic=\"/static/images/avatars/avatar_3.png\"\r\n              publishedDate={post.createdAt}\r\n              isTitle\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item>\r\n        <Card className={classes.card}>\r\n          <Container maxWidth=\"lg\">\r\n            <Typography variant=\"body1\" align=\"justify\" dangerouslySetInnerHTML={{ __html: post.content }}>\r\n              {/* {post.content} */}\r\n              {/* <img alt=\"testImg\" src=\"/static/images/coverImg.jpg\" />\r\n              {content} */}\r\n            </Typography>\r\n            <Box sx={{ paddingTop: 6 }}>\r\n              <IconButton onClick={handleLikePost}>\r\n                <ThumbUpIcon color={isLiked ? 'error' : 'disabled'} />\r\n              </IconButton>\r\n              <IconButton onClick={() => setDisplayComment(!displayComment)}>\r\n                <CommentIcon color={displayComment ? 'primary' : 'inherit'} />\r\n              </IconButton>\r\n            </Box>\r\n          </Container>\r\n        </Card>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nContentSection.propTypes = {\r\n  likePost: PropTypes.func.isRequired,\r\n  deleteLike: PropTypes.func.isRequired,\r\n  post: PropTypes.object.isRequired,\r\n  username: PropTypes.string.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  username: state.security.user.username\r\n});\r\n\r\nexport default connect(mapStateToProps, { likePost, deleteLike })(ContentSection);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Grid, makeStyles,\r\n//   Box\r\n} from '@material-ui/core';\r\nimport ContentSection from './ContentSection';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100%',\r\n  },\r\n  mainContainer: {\r\n    height: '45vh',\r\n    background: 'linear-gradient(rgba(0,0,0,.9), rgba(0,0,0,.8)), url(\"/static/images/coverImg.jpg\")',\r\n    backgroundSize: 'cover',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundPosition: 'center',\r\n    color: theme.palette.common.white,\r\n  },\r\n//   mainItem: {\r\n//     // padding: theme.spacing(6),\r\n//     // textAlign: 'left',\r\n//     display: 'flex',\r\n//     flexDirection: 'row',\r\n//     justifyContent: 'center',\r\n//     alignItems: 'center',\r\n//     width: '100%'\r\n//   }\r\n}));\r\n\r\nconst PageTopSection = (props) => {\r\n  const { post } = props;\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container className={classes.root} flexDirection=\"column\">\r\n      <Grid item>\r\n        <Grid container className={classes.mainContainer} />\r\n        <ContentSection post={post} />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nPageTopSection.propTypes = {\r\n  post: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default PageTopSection;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Avatar, Typography, Grid } from '@material-ui/core';\r\n\r\nconst InfoAvatar = (props) => {\r\n  const {\r\n    authorName, authorProfilePic, publishedDate\r\n  } = props;\r\n\r\n  return (\r\n    <>\r\n      <Grid item>\r\n        <Avatar\r\n          alt={authorName}\r\n          src={authorProfilePic}\r\n          sx={{ width: 35, height: 35 }}\r\n        />\r\n      </Grid>\r\n      <Grid item>\r\n        <Typography\r\n          align=\"left\"\r\n          variant=\"caption\"\r\n          color=\"textSecondary\"\r\n          component=\"p\"\r\n        >\r\n          {authorName}\r\n        </Typography>\r\n        <Typography\r\n          align=\"left\"\r\n          variant=\"caption\"\r\n          color=\"textSecondary\"\r\n          component=\"p\"\r\n        >\r\n          {publishedDate}\r\n        </Typography>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\nInfoAvatar.propTypes = {\r\n  authorName: PropTypes.string,\r\n  authorProfilePic: PropTypes.string,\r\n  publishedDate: PropTypes.string, // later check the type bec u will use date provided from the back end\r\n};\r\n\r\nexport default InfoAvatar;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n// import { Typography, Avatar, Grid } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport dateFormat from 'dateformat';\r\nimport CardItem from './CardItem';\r\nimport CardFooter from './CardFooter';\r\nimport cardStyles from './CardStyles';\r\nimport InfoAvatar from '../InfoAvatar';\r\n// import { Button } from '../controls/Button';\r\n\r\nconst useStyles = makeStyles((theme) => (cardStyles(theme)));\r\n\r\nconst CardWithAvatar = (props) => {\r\n  const {\r\n    title, description, image, imageHeight, href, authorName, authorProfilePic, publishedDate, ...other\r\n  } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <CardItem\r\n      rootStyles={classes.cardWithAvatar}\r\n      // variant=\"outlined\"\r\n      title={title}\r\n      description={description}\r\n      image={image}\r\n      imageHeight={imageHeight}\r\n      href={href}\r\n      titleTextVariant=\"h4\"\r\n      contentTextVariant=\"body2\"\r\n      {...other}\r\n    >\r\n      <CardFooter\r\n        justifyContent=\"flex-start\"\r\n        spacing={1}\r\n      >\r\n        <InfoAvatar\r\n          authorName={authorName}\r\n          authorProfilePic={authorProfilePic}\r\n          publishedDate={dateFormat(publishedDate, 'mmm dS, yyyy')}\r\n        />\r\n        {/* <Grid item>\r\n          <Avatar\r\n            alt=\r\n            src=\r\n          />\r\n        </Grid>\r\n        <Grid item>\r\n          <Typography\r\n            align=\"left\"\r\n            variant=\"subtitle2\"\r\n            color=\"textSecondary\"\r\n            component=\"p\"\r\n          >\r\n            {authorName}\r\n          </Typography>\r\n          <Typography\r\n            align=\"left\"\r\n            variant=\"subtitle2\"\r\n            color=\"textSecondary\"\r\n            component=\"p\"\r\n          >\r\n            {publishedDate}\r\n          </Typography>\r\n        </Grid> */}\r\n      </CardFooter>\r\n    </CardItem>\r\n  );\r\n};\r\n\r\nCardWithAvatar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  description: PropTypes.string.isRequired,\r\n  image: PropTypes.string.isRequired,\r\n  imageHeight: PropTypes.number.isRequired,\r\n  href: PropTypes.string.isRequired,\r\n  authorName: PropTypes.string,\r\n  authorProfilePic: PropTypes.string,\r\n  publishedDate: PropTypes.string, // later check the type bec u will use date provided from the back end\r\n};\r\n\r\nexport default CardWithAvatar;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Grid, Typography, Container } from '@material-ui/core';\r\nimport CardWithAvatar from '../cards/CardWithAvatar';\r\n\r\nconst RelatedPost = (props) => {\r\n  const { relatedPosts } = props;\r\n\r\n  // console.log('relatedPost', relatedPosts);\r\n\r\n  return (\r\n    <Grid container>\r\n      <Container maxWidth=\"lg\">\r\n        <Typography gutterBottom variant=\"h3\" color=\"textSecondary\">Related Posts</Typography>\r\n      </Container>\r\n      {\r\n        relatedPosts.length > 0\r\n          ? relatedPosts.slice(0, 4).map((postItem) => (\r\n            <Grid item md={3} sm={6} xs={12} key={postItem.id}>\r\n              <CardWithAvatar\r\n                title={postItem.title}\r\n                image={postItem.coverImage}\r\n                description={postItem.description}\r\n                imageHeight={130}\r\n                href={`/article/${postItem.id}`}\r\n                authorName={postItem.author}\r\n                // authorProfilePic=\"https://source.unsplash.com/100x100/?profile\"\r\n                authorProfilePic={postItem.authorAvatar}\r\n                publishedDate={postItem.createdAt}\r\n              />\r\n            </Grid>\r\n          ))\r\n          : null\r\n      }\r\n    </Grid>\r\n  );\r\n};\r\n\r\nRelatedPost.propTypes = {\r\n  relatedPosts: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default RelatedPost;\r\n","import { Helmet } from 'react-helmet';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { useEffect, useState } from 'react';\r\nimport { useParams, useNavigate } from 'react-router';\r\nimport { Box, Container, Grid } from '@material-ui/core';\r\nimport CommentSection from 'src/components/article/CommentSection';\r\nimport PageTopSection from '../components/article/TopSection';\r\nimport RelatedPost from '../components/article/RelatedPost';\r\nimport { getPost, getRelatedPosts } from '../actions/postActions';\r\n\r\nconst Article = (props) => {\r\n  const { post, relatedPosts } = props;\r\n  const navigate = useNavigate();\r\n  const { id } = useParams();\r\n\r\n  const [comments, setComments] = useState([]);\r\n\r\n  async function populateComments() {\r\n    setComments(post.comments);\r\n  }\r\n\r\n  useEffect(() => {\r\n    console.log('useEffect1', post);\r\n    (async () => {\r\n      await props.getPost(id, navigate);\r\n      await props.getRelatedPosts(id, post.categoryName);\r\n      await populateComments();\r\n    })();\r\n  }, [post.id, id]);\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Article | Language Learning Blog</title>\r\n      </Helmet>\r\n      <Box\r\n        sx={{\r\n          backgroundColor: 'white',\r\n          minHeight: '100%',\r\n          pb: 3,\r\n        }}\r\n      >\r\n        <Grid container flexDirection=\"column\">\r\n          <Grid item>\r\n            <PageTopSection post={post} />\r\n          </Grid>\r\n          <Grid item>\r\n            <Container maxWidth=\"lg\" sx={{ margin: 'auto', backgroundColor: 'background.default', }}>\r\n              <CommentSection postId={id} comments={comments} />\r\n            </Container>\r\n          </Grid>\r\n          <Grid item>\r\n            <Container maxWidth=\"lg\" sx={{ margin: 'auto' }}>\r\n              <Box sx={{ pt: 10 }}>\r\n                <RelatedPost relatedPosts={relatedPosts} />\r\n              </Box>\r\n            </Container>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nArticle.propTypes = {\r\n  getPost: PropTypes.func.isRequired, // gets a single post\r\n  getRelatedPosts: PropTypes.func.isRequired,\r\n  post: PropTypes.object.isRequired,\r\n  relatedPosts: PropTypes.array.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  post: state.post.post,\r\n  relatedPosts: state.post.relatedPosts\r\n});\r\n\r\nexport default connect(mapStateToProps, { getPost, getRelatedPosts })(Article);\r\n","import React, { useEffect } from 'react';\r\n// import { useState } from 'react';\r\nimport { useNavigate } from 'react-router';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  CircularProgress,\r\n  Grid, makeStyles, Typography,\r\n} from '@material-ui/core';\r\nimport Controls from '../controls/Controls';\r\nimport buttonStyles from '../controls/loadButtonStyles';\r\nimport customStyles from '../forms/LoginRegisterFormStyles';\r\nimport { useForm, Form } from '../forms/useForm';\r\nimport { createCategory } from '../../actions/categoryAction';\r\n\r\nconst useStyles = makeStyles((theme) => (customStyles(theme)));\r\nconst shadow = '-1px -1px 10px 2px rgba(0, 0, 0, 0.25)';\r\nconst button = {\r\n  root: {\r\n    border: 0,\r\n    padding: '0 30px',\r\n    height: 40,\r\n    boxShadow: '0 1px 4px 2px rgba(33, 159, 243, .3)',\r\n    //   background: 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)'\r\n  }\r\n};\r\n\r\nconst initialValues = {\r\n  name: ''\r\n};\r\n\r\nconst AddCategoryForm = (props) => {\r\n  const { errors } = props;\r\n  const classes = useStyles();\r\n  const navigate = useNavigate();\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [success, setSuccess] = React.useState(false);\r\n\r\n  const {\r\n    values, formErrors, setFormErrors, handleInputChange,\r\n  } = useForm(initialValues);\r\n\r\n  useEffect(() => {\r\n    setFormErrors(errors);\r\n  }, [errors]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!loading) {\r\n      setSuccess(false);\r\n      setLoading(true);\r\n    }\r\n    props.createCategory(values, navigate, setLoading, setSuccess);\r\n    // console.log('history', navigate);\r\n    // console.log(values);\r\n  };\r\n\r\n  return (\r\n    <Form className={classes.form} onSubmit={handleSubmit} sx={{ px: 4, }}>\r\n      <Card sx={{\r\n        px: 2, pb: 2, boxShadow: `${shadow}`\r\n      }}\r\n      >\r\n        <Grid container justifyContent=\"center\" sx={{ py: 5, }}>\r\n          <Typography component=\"h1\" variant=\"h3\" color=\"primary.light\">\r\n            CREATE&nbsp;NEW&nbsp;CATEGORY\r\n          </Typography>\r\n        </Grid>\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            spacing={5}\r\n          >\r\n            <Grid item xs={12}>\r\n              <Controls.Input\r\n                autoFocus\r\n                required\r\n                name=\"name\"\r\n                id=\"categoryName\"\r\n                label=\"Category Name\"\r\n                error={formErrors.name}\r\n                value={values.name}\r\n                onChange={handleInputChange}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid container item xs={12} justifyContent=\"flex-end\">\r\n              <Box sx={buttonStyles.wrapper}>\r\n                <Controls.Buttons.Button\r\n                  sx={{ ...button.root, ...buttonStyles.buttonSuccess(success) }}\r\n                  text=\"ADD\"\r\n                // size=\"large\"\r\n                  type=\"submit\"\r\n                  disabled={loading}\r\n                />\r\n                {loading && <CircularProgress size={25} sx={buttonStyles.buttonProgress} />}\r\n              </Box>\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n      </Card>\r\n    </Form>\r\n  );\r\n};\r\n\r\nAddCategoryForm.propTypes = {\r\n  createCategory: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, { createCategory })(AddCategoryForm);\r\n","import { Helmet } from 'react-helmet';\r\nimport {\r\n  Box,\r\n  Container,\r\n  Grid\r\n} from '@material-ui/core';\r\nimport AddCategoryForm from 'src/components/category/AddCategoryForm';\r\n\r\nconst AddCategory = () => (\r\n  <>\r\n    <Helmet>\r\n      <title>Add Category | Language Learning Blog</title>\r\n    </Helmet>\r\n    <Box\r\n      sx={{\r\n        backgroundColor: 'background.default',\r\n        minHeight: '100%',\r\n        py: 4\r\n      }}\r\n    >\r\n      <Container maxWidth=\"md\">\r\n        <Grid\r\n          container\r\n          direction=\"column\"\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Grid item>\r\n            <AddCategoryForm />\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </Box>\r\n  </>\r\n);\r\n\r\nexport default AddCategory;\r\n","import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport {\r\n  Box,\r\n  Card,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  Typography,\r\n  IconButton\r\n} from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { deleteCategory } from '../../actions/categoryAction';\r\n\r\nconst CategoryListResults = (props) => {\r\n  const { categories, searchText } = props;\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const [page, setPage] = useState(0);\r\n\r\n  const handleLimitChange = (event) => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n\r\n  const handlePageChange = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const onDeleteClick = (id) => {\r\n    props.deleteCategory(id);\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <PerfectScrollbar>\r\n        <Box sx={{ minWidth: 1050 }}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>\r\n                  Category\r\n                </TableCell>\r\n                <TableCell>\r\n                  Created date\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  Actions\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {categories\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((category) => (\r\n                  category.name.toLowerCase().includes(searchText.toLowerCase()) && (\r\n                  <TableRow\r\n                    hover\r\n                    key={category.id}\r\n                  >\r\n                    <TableCell>\r\n                      <Box\r\n                        sx={{\r\n                          alignItems: 'center',\r\n                          display: 'flex'\r\n                        }}\r\n                      >\r\n                        <Typography\r\n                          color=\"textPrimary\"\r\n                          variant=\"body1\"\r\n                        >\r\n                          {category.name}\r\n                        </Typography>\r\n                      </Box>\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      {moment(category.created_At).format('DD/MM/YYYY')}\r\n                    </TableCell>\r\n                    <TableCell align=\"center\">\r\n                      <Link to={`/app/manage/categories/updateCategory/${category.id}`}>\r\n                        <IconButton style={{ marginRight: 3 }}>\r\n                          <EditIcon color=\"secondary\" />\r\n                        </IconButton>\r\n                      </Link>\r\n\r\n                      <IconButton style={{ marginLeft: 3 }} onClick={() => onDeleteClick(category.id)}>\r\n                        <DeleteIcon color=\"error\" />\r\n                      </IconButton>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                  )\r\n                ))}\r\n            </TableBody>\r\n          </Table>\r\n        </Box>\r\n      </PerfectScrollbar>\r\n      <TablePagination\r\n        component=\"div\"\r\n        count={categories.length}\r\n        onPageChange={handlePageChange}\r\n        onRowsPerPageChange={handleLimitChange}\r\n        page={page}\r\n        rowsPerPage={rowsPerPage}\r\n        rowsPerPageOptions={[5, 10, 25]}\r\n      />\r\n    </Card>\r\n  );\r\n};\r\n\r\nCategoryListResults.propTypes = {\r\n  deleteCategory: PropTypes.func.isRequired,\r\n  categories: PropTypes.array.isRequired,\r\n  searchText: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default connect(null, { deleteCategory })(CategoryListResults);\r\n","import {\r\n  Box,\r\n} from '@material-ui/core';\r\n// import { Search as SearchIcon } from 'react-feather';\r\nimport PropTypes from 'prop-types';\r\nimport Controls from '../controls/Controls';\r\n\r\nconst CategoryListToolbar = ({ searchText, setSearchText, ...otherProps }) => (\r\n  <Box {...otherProps}>\r\n    <Box\r\n      sx={{\r\n        display: 'flex',\r\n        justifyContent: 'flex-end'\r\n      }}\r\n    >\r\n      <Controls.Buttons.CreateButton\r\n        href=\"/app/manage/categories/addCategory\"\r\n        text=\"ADD NEW CATEGORY\"\r\n      />\r\n    </Box>\r\n    <Box sx={{ mt: 3 }}>\r\n      <Controls.SearchBar\r\n        placeholder=\"Search Category\"\r\n        searchText={searchText}\r\n        setSearchText={setSearchText}\r\n      />\r\n    </Box>\r\n  </Box>\r\n);\r\n\r\nCategoryListToolbar.propTypes = {\r\n  searchText: PropTypes.string.isRequired,\r\n  setSearchText: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default CategoryListToolbar;\r\n","import { useEffect, useState } from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport PropTypes from 'prop-types';\r\nimport { Box, Container } from '@material-ui/core';\r\nimport CategoryListResults from 'src/components/category/CategoryListResults';\r\nimport CategoryListToolbar from 'src/components/category/CategoryListToolbar';\r\n// import users from 'src/__mocks__/users';\r\nimport { connect } from 'react-redux';\r\nimport SnackBarAlert from 'src/components/SnacKBarAlert';\r\nimport { getCategories } from '../actions/categoryAction';\r\n\r\nconst CategoryList = (props) => {\r\n  const { categories, alert } = props;\r\n\r\n  const [searchText, setSearchText] = useState('');\r\n  const [alertOpen, setAlertOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    props.getCategories();\r\n  }, [getCategories]);\r\n\r\n  useEffect(() => {\r\n    if (alert.message !== '') setAlertOpen(true);\r\n  }, [alert]);\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Categories | Language Learning Blog</title>\r\n      </Helmet>\r\n\r\n      {\r\n        alert && (\r\n          <SnackBarAlert\r\n            severity={alert.type}\r\n            alertOpen={alertOpen}\r\n            setAlertOpen={setAlertOpen}\r\n            message={alert.message}\r\n          />\r\n        )\r\n        }\r\n\r\n      <Box\r\n        sx={{\r\n          backgroundColor: 'background.default',\r\n          minHeight: '100%',\r\n          py: 3\r\n        }}\r\n      >\r\n        <Container maxWidth={false}>\r\n          <CategoryListToolbar\r\n            searchText={searchText}\r\n            setSearchText={setSearchText}\r\n          />\r\n          <Box sx={{ pt: 3 }}>\r\n            <CategoryListResults categories={categories} searchText={searchText} />\r\n          </Box>\r\n        </Container>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nCategoryList.propTypes = {\r\n  getCategories: PropTypes.func.isRequired,\r\n  categories: PropTypes.array.isRequired,\r\n  alert: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  categories: state.category.categories,\r\n  alert: state.alert\r\n});\r\n\r\nexport default connect(mapStateToProps, { getCategories })(CategoryList);\r\n","import React, { useEffect } from 'react';\r\n// import { useState } from 'react';\r\nimport { useNavigate, useParams } from 'react-router';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  CircularProgress,\r\n  Grid, makeStyles, Typography,\r\n} from '@material-ui/core';\r\nimport Controls from '../controls/Controls';\r\nimport buttonStyles from '../controls/loadButtonStyles';\r\nimport customStyles from '../forms/LoginRegisterFormStyles';\r\nimport { useForm, Form } from '../forms/useForm';\r\nimport { createCategory, getCategory } from '../../actions/categoryAction';\r\n\r\nconst useStyles = makeStyles((theme) => (customStyles(theme)));\r\nconst shadow = '-1px -1px 10px 2px rgba(0, 0, 0, 0.25)';\r\nconst button = {\r\n  root: {\r\n    border: 0,\r\n    padding: '0 30px',\r\n    height: 40,\r\n    boxShadow: '0 1px 4px 2px rgba(33, 159, 243, .3)',\r\n    //   background: 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)'\r\n  }\r\n};\r\n\r\nconst initialValues = {\r\n  name: ''\r\n};\r\n\r\nconst UpdateCategoryForm = (props) => {\r\n  const { errors, category } = props;\r\n  const classes = useStyles();\r\n  const navigate = useNavigate();\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [success, setSuccess] = React.useState(false);\r\n\r\n  const {\r\n    values, setValues, formErrors, setFormErrors, handleInputChange,\r\n  } = useForm(initialValues);\r\n\r\n  const { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    props.getCategory(id, navigate);\r\n  }, [getCategory]);\r\n\r\n  useEffect(() => {\r\n    setValues({ ...values, ...category });\r\n  }, [category]);\r\n\r\n  useEffect(() => {\r\n    setFormErrors(errors);\r\n  }, [errors]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!loading) {\r\n      setSuccess(false);\r\n      setLoading(true);\r\n    }\r\n    props.createCategory(values, navigate, setLoading, setSuccess);\r\n    // console.log('history', navigate);\r\n    // console.log(values);\r\n  };\r\n\r\n  return (\r\n    <Form className={classes.form} onSubmit={handleSubmit} sx={{ px: 4, }}>\r\n      <Card sx={{\r\n        px: 2, pb: 2, boxShadow: `${shadow}`\r\n      }}\r\n      >\r\n        <Grid container justifyContent=\"center\" sx={{ py: 5, }}>\r\n          <Typography component=\"h1\" variant=\"h3\" color=\"primary.light\">\r\n            CREATE&nbsp;NEW&nbsp;CATEGORY\r\n          </Typography>\r\n        </Grid>\r\n        <CardContent>\r\n          <Grid sx={{ display: 'none' }}>\r\n            <Controls.Input\r\n              required\r\n              disabled\r\n              name=\"id\"\r\n              id=\"categoryId\"\r\n              label=\"categoryId\"\r\n              type=\"hidden\"\r\n              value={`${values.id}`}\r\n            />\r\n          </Grid>\r\n          <Grid\r\n            container\r\n            spacing={5}\r\n          >\r\n            <Grid item xs={12}>\r\n              <Controls.Input\r\n                autoFocus\r\n                required\r\n                name=\"name\"\r\n                id=\"categoryName\"\r\n                label=\"Category Name\"\r\n                error={formErrors.name}\r\n                value={values.name}\r\n                onChange={handleInputChange}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid container item xs={12} justifyContent=\"flex-end\">\r\n              <Box sx={buttonStyles.wrapper}>\r\n                <Controls.Buttons.Button\r\n                  sx={{ ...button.root, ...buttonStyles.buttonSuccess(success) }}\r\n                  text=\"UPDATE\"\r\n                // size=\"large\"\r\n                  type=\"submit\"\r\n                  disabled={loading}\r\n                />\r\n                {loading && <CircularProgress size={25} sx={buttonStyles.buttonProgress} />}\r\n              </Box>\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n      </Card>\r\n    </Form>\r\n  );\r\n};\r\n\r\nUpdateCategoryForm.propTypes = {\r\n  createCategory: PropTypes.func.isRequired,\r\n  getCategory: PropTypes.func.isRequired,\r\n  category: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  category: state.category.category,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, { getCategory, createCategory })(UpdateCategoryForm);\r\n","import { Helmet } from 'react-helmet';\r\nimport {\r\n  Box,\r\n  Container,\r\n  Grid\r\n} from '@material-ui/core';\r\nimport UpdateCategoryForm from 'src/components/category/UpdateCategoryForm';\r\n\r\nconst UpdateCategory = () => (\r\n  <>\r\n    <Helmet>\r\n      <title>Update Category | Language Learning Blog</title>\r\n    </Helmet>\r\n    <Box\r\n      sx={{\r\n        backgroundColor: 'background.default',\r\n        minHeight: '100%',\r\n        py: 4\r\n      }}\r\n    >\r\n      <Container maxWidth=\"md\">\r\n        <Grid\r\n          container\r\n          direction=\"column\"\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Grid item>\r\n            <UpdateCategoryForm />\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </Box>\r\n  </>\r\n);\r\n\r\nexport default UpdateCategory;\r\n","import { Navigate, Outlet } from 'react-router-dom';\nimport DashboardLayout from 'src/components/DashboardLayout';\nimport MainLayout from 'src/components/MainLayout';\nimport Account from 'src/pages/Account';\nimport UserList from 'src/pages/UserList';\nimport Dashboard from 'src/pages/Dashboard';\nimport Login from 'src/pages/Login';\nimport NotFound from 'src/pages/NotFound';\nimport PostList from 'src/pages/PostList';\nimport Register from 'src/pages/Register';\nimport Category from 'src/pages/Category';\nimport AddUser from 'src/pages/AddUser';\nimport AddPost from 'src/pages/AddPost';\nimport Home from './pages/Home';\nimport UpdatePost from './pages/UpdatePost';\nimport UpdateUser from './pages/UpdateUser';\nimport MyPosts from './pages/MyPosts';\nimport Article from './pages/Article';\nimport AddCategory from './pages/AddCategory';\nimport CategoryList from './pages/CategoryList';\nimport UpdateCategory from './pages/UpdateCategory';\n\nconst routes = (validToken, user) => [\n\n  // Private Routes\n  {\n    path: 'app',\n    element: validToken ? <DashboardLayout /> : <Navigate to=\"/user/login\" />,\n    children: [\n      { path: 'account', element: <Account /> },\n      {\n        path: 'admin',\n        element: (validToken && user.roleName !== 'USER') ? <Outlet /> : <Navigate to=\"/home\" />,\n        children: [\n          { path: 'posts/myPosts', element: <MyPosts /> },\n          { path: 'posts/addPost', element: <AddPost /> },\n          { path: 'posts/updatePost/:id', element: <UpdatePost /> },\n          { path: '/', element: <Navigate to=\"/app/admin/posts/myPosts\" /> },\n        ]\n      },\n      {\n        path: 'manage',\n        element: (validToken && user.roleName === 'SUPER_ADMIN') ? <Outlet /> : <Navigate to=\"/home\" />,\n        children: [\n          { path: 'dashboard', element: <Dashboard /> },\n          { path: 'users', element: <UserList />, },\n          { path: 'posts', element: <PostList /> },\n          { path: 'categories', element: <CategoryList /> },\n          { path: 'users/adduser', element: <AddUser /> },\n          { path: 'users/updateUser/:id', element: <UpdateUser /> },\n          { path: 'categories/addCategory', element: <AddCategory /> },\n          { path: 'categories/updateCategory/:id', element: <UpdateCategory /> },\n          { path: '/', element: <Navigate to=\"/app/manage/dashboard\" /> },\n        ]\n      },\n      { path: '/', element: <Navigate to=\"/home\" /> },\n      // { path: '*', element: <Navigate to=\"/404\" /> }\n    ]\n  },\n\n  // Public Routes\n  {\n    path: 'user',\n    children: [\n      { path: 'login', element: <Login /> },\n      { path: 'register', element: <Register /> },\n      { path: '/', element: <Navigate to=\"/user/login\" /> },\n      { path: '*', element: <Navigate to=\"/404\" /> }\n    ]\n  },\n  {\n    path: '/',\n    element: <MainLayout />,\n    children: [\n      { path: 'home', element: <Home /> },\n      { path: 'article/:id', element: <Article /> },\n      { path: 'categories/:name', element: <Category /> },\n      { path: '404', element: <NotFound /> },\n      { path: '/', element: <Navigate to=\"/home\" /> },\n      { path: '*', element: <Navigate to=\"/404\" /> }\n    ]\n  }\n];\n\nexport default routes;\n","/* eslint-disable camelcase */\nimport 'react-perfect-scrollbar/dist/css/styles.css';\nimport { useRoutes } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { CssBaseline, ThemeProvider } from '@material-ui/core';\n// import GlobalStyles from 'src/components/GlobalStyles';\nimport theme from 'src/theme';\nimport routes from 'src/routes';\nimport jwt_decode from 'jwt-decode';\nimport store from './store';\nimport setJWTToken from './securityUtils/setJWTToken';\nimport { SET_CURRENT_USER } from './actions/types';\nimport { logout } from './actions/securityActions';\n\nconst { jwtToken } = localStorage;\n\n// decodes the token in the local storage which allows the App to know login users\nif (jwtToken) {\n  setJWTToken(jwtToken);\n  const decodedJwtToken = jwt_decode(jwtToken);\n  store.dispatch({\n    type: SET_CURRENT_USER,\n    payload: decodedJwtToken\n  });\n\n  const currentTime = Date.now() / 1000;\n  if (decodedJwtToken.exp < currentTime) {\n    // handle logout\n    store.dispatch(logout());\n    // logout();\n    // redirect to the home page\n    window.location.href = '/user/login';\n  }\n}\n\nconst App = () => {\n  const { validToken, user } = useSelector((state) => state.security);\n  const routing = useRoutes(routes(validToken, user));\n\n  return (\n    <ThemeProvider theme={theme}>\n      {/* <GlobalStyles /> */}\n      {routing}\n      <CssBaseline />\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\nimport store from './store';\n\nReactDOM.render((\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>\n), document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}